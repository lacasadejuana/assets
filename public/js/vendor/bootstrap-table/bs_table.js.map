{
  "version": 3,
  "sources": ["../../../../resources/js/plugins/bs_table.ts", "../../../../node_modules/bootstrap-table/src/utils/index.js", "../../../../node_modules/bootstrap-table/src/constants/index.js", "../../../../node_modules/bootstrap-table/src/virtual-scroll/index.js", "../../../../node_modules/bootstrap-table/src/bootstrap-table.js", "../../../../resources/js/plugins/bootstrap-table.ts", "../../../../node_modules/bootstrap-table/src/extensions/export/bootstrap-table-export.js", "../../../../node_modules/bootstrap-table/src/extensions/mobile/bootstrap-table-mobile.js", "../../../../node_modules/bootstrap-table/src/extensions/i18n-enhance/bootstrap-table-i18n-enhance.js", "../../../../node_modules/bootstrap-table/src/extensions/sticky-header/bootstrap-table-sticky-header.js", "../../../../node_modules/bootstrap-table/src/extensions/toolbar/bootstrap-table-toolbar.js", "../../../../node_modules/bootstrap-table/src/extensions/cookie/bootstrap-table-cookie.js", "../../../../node_modules/bootstrap-table/src/extensions/fixed-columns/bootstrap-table-fixed-columns.js", "../../../../node_modules/bootstrap-table/src/extensions/addrbar/bootstrap-table-addrbar.js", "../../../../node_modules/bootstrap-table/src/extensions/pipeline/bootstrap-table-pipeline.js", "../../../../node_modules/bootstrap-table/src/locale/bootstrap-table-es-CL.js"],
  "sourcesContent": ["/// <reference types=\"jquery\" />\n\n//@ts-ignore\nconst $ = globalThis.jQuery\n//@ts-ignore\nconst jQuery = globalThis.jQuery\n//@ts-ignore\nif (!window) window = globalThis\nimport './natural-sorting'\n\n\n//@ts-ignore\nimport BootstrapTable from './bootstrap-table.js'\n\n//@ts-ignore\n\nexport interface BootstrapTableIcons {\n    toggleOff?: string;\n    clearSearch?: string;\n    detailOpen?: string;\n    search?: string;\n    fullscreen?: string;\n    columns?: string;\n    detailClose?: string;\n    refresh?: string;\n    paginationSwitchDown?: string;\n    paginationSwitchUp?: string;\n    toggleOn?: string;\n    autoRefresh?: string;\n}\n\nexport interface BootstrapTableEvents {\n    'refresh.bs.table': string;\n    'load-error.bs.table': string;\n    'click-row.bs.table': string;\n    'dbl-click-row.bs.table': string;\n    'post-body.bs.table': string;\n    'collapse-row.bs.table': string;\n    'reset-view.bs.table': string;\n    'click-cell.bs.table': string;\n    'check-all.bs.table': string;\n    'post-footer.bs.table': string;\n    'uncheck.bs.table': string;\n    'check-some.bs.table': string;\n    'refresh-options.bs.table': string;\n    'pre-body.bs.table': string;\n    'uncheck-some.bs.table': string;\n    'expand-row.bs.table': string;\n    'all.bs.table': string;\n    'uncheck-all.bs.table': string;\n    'column-switch.bs.table': string;\n    'column-switch-all.bs.table': string;\n    'check.bs.table': string;\n    'search.bs.table': string;\n    'load-success.bs.table': string;\n    'dbl-click-cell.bs.table': string;\n    'page-change.bs.table': string;\n    'post-header.bs.table': string;\n    'toggle.bs.table': string;\n    'sort.bs.table': string;\n    'scroll-body.bs.table': string;\n}\n\nexport interface BootstrapTableColumn {\n    sortName?: any;\n    widthUnit?: string;\n    sorter?: any;\n    searchFormatter?: boolean;\n    titleTooltip?: any;\n    falign?: any;\n    title?: any;\n    align?: any;\n    radio?: boolean;\n    colspan?: any;\n    showSelectTitle?: boolean;\n    rowspan?: any;\n    checkbox?: boolean;\n    halign?: any;\n    switchable?: boolean;\n    class?: any;\n    escape?: boolean;\n    events?: BootstrapTableEvents;\n    order?: string;\n    visible?: boolean;\n    detailFormatter?: any;\n    valign?: any;\n    sortable?: boolean;\n    cellStyle?: any;\n    searchable?: boolean;\n    footerFormatter?: any;\n    formatter?: any;\n    checkboxEnabled?: boolean;\n    field?: any;\n    width?: any;\n    clickToSelect?: boolean;\n    searchHighlightFormatter?: boolean;\n    cardVisible?: boolean;\n}\n\nexport interface BootstrapTableLocale {\n    formatPaginationSwitchDown?: () => string;\n\n    formatColumns?: () => string;\n\n    formatAllRows?: () => string;\n\n    formatLoadingMessage?: () => string;\n\n    formatSRPaginationPreText?: () => string;\n\n    formatPaginationSwitch?: () => string;\n\n    formatDetailPagination?: (totalRows: number) => string;\n\n    formatNoMatches?: () => string;\n\n    formatSRPaginationNextText?: () => string;\n\n    formatSearch?: () => string;\n\n    formatFullscreen?: () => string;\n\n    formatShowingRows?: (\n        pageFrom: number,\n        pageTo: number,\n        totalRows: number,\n        totalNotFiltered: number\n    ) => string;\n\n    formatSRPaginationPageText?: (page: number) => string;\n\n    formatClearSearch?: () => string;\n\n    formatPaginationSwitchUp?: () => string;\n\n    formatToggleOff?: () => string;\n\n    formatColumnsToggleAll?: () => string;\n\n    formatRefresh?: () => string;\n\n    formatToggleOn?: () => string;\n\n    formatRecordsPerPage(pageNumber: number): string;\n}\n\nexport interface BootstrapAjaxParams {\n    cache: boolean;\n    data: {\n        search: string;\n        offset: number;\n        limit: number;\n        sort?: any;\n        order?: any;\n    };\n    dataType: string;\n    type: string;\n    contentType: string;\n    error: (jqXHR: JQueryXHR) => any;\n    success: (results: any, textStatus?: string, jqXHR?: JQueryXHR) => any;\n}\n\nexport interface BootstrapTableOptions {\n    onCheck?: (row: any, $element: JQuery<HTMLElement>) => boolean | void;\n    loadingFontSize?: string;\n    onDblClickCell?: (\n        field: string,\n        value: any,\n        row: any,\n        $element: JQuery<HTMLElement>\n    ) => boolean | void;\n    rowStyle?: (row: any, index: number) => {};\n    showColumnsToggleAll?: boolean;\n    footerStyle?: (column: BootstrapTableColumn) => {};\n    onUncheck?: (row: any, $element: JQuery<HTMLElement>) => boolean | void;\n    pageSize?: number;\n    footerField?: string;\n    showFullscreen?: boolean;\n    sortStable?: boolean;\n    searchAlign?: string;\n    ajax?: (params: BootstrapAjaxParams) => any;\n    onAll?: (name: string, args: any) => boolean | void;\n    onClickRow?: (\n        row: any,\n        $element: JQuery<HTMLElement>,\n        field: string\n    ) => boolean | void;\n    ajaxOptions?: {};\n    onCheckSome?: (rows: any[]) => boolean | void;\n    customSort?: any;\n    iconSize?: any;\n    onCollapseRow?: (\n        index: number,\n        row: any,\n        detailView: any\n    ) => boolean | void;\n    searchHighlight?: boolean;\n    height?: any;\n    onUncheckSome?: (rows: any[]) => boolean | void;\n    onToggle?: (cardView: boolean) => boolean | void;\n    ignoreClickToSelectOn?: ({ tagName }?: { tagName: any }) => any;\n    cache?: boolean;\n    method?: string;\n    onColumnSwitch?: (field: string, checked: boolean) => boolean | void;\n    searchSelector?: boolean;\n    strictSearch?: boolean;\n    multipleSelectRow?: boolean;\n    onLoadError?: (status: string, jqXHR: JQuery.jqXHR) => boolean | void;\n    buttonsToolbar?: any;\n    paginationVAlign?: string;\n    showColumnsSearch?: boolean;\n    queryParamsType?: string;\n    sortOrder?: any;\n    paginationDetailHAlign?: string;\n    customSearch?: any;\n    visibleSearch?: boolean;\n    showButtonText?: boolean;\n    sortName?: any;\n    columns?: BootstrapTableColumn[];\n    onScrollBody?: () => boolean | void;\n    iconsPrefix?: string;\n    onPostBody?: () => boolean | void;\n    search?: boolean;\n    searchOnEnterKey?: boolean;\n    searchText?: string;\n    responseHandler?: (res: any) => any;\n    toolbarAlign?: string;\n    paginationParts?: string[];\n    cardView?: boolean;\n    showSearchButton?: boolean;\n    escape?: boolean;\n    searchTimeOut?: number;\n    buttonsAlign?: string;\n    buttonsOrder?: string[];\n    detailFormatter?: (\n        index: number,\n        row: any,\n        $element: JQuery<HTMLElement>\n    ) => string;\n    onDblClickRow?: (\n        row: any,\n        $element: JQuery<HTMLElement>,\n        field: string\n    ) => boolean | void;\n    paginationNextText?: string;\n    buttonsPrefix?: string;\n    loadingTemplate?: (loadingMessage: string) => string;\n    theadClasses?: string;\n    onLoadSuccess?: (\n        data: any,\n        status: string,\n        jqXHR: JQuery.jqXHR\n    ) => boolean | void;\n    url?: any;\n    toolbar?: any;\n    onPostHeader?: () => boolean | void;\n    sidePagination?: string;\n    clickToSelect?: boolean;\n    virtualScrollItemHeight?: any;\n    rowAttributes?: (row: any, index: number) => {};\n    dataField?: string;\n    idField?: string;\n    onSort?: (name: string, order: number) => boolean | void;\n    pageNumber?: number;\n    data?: any[];\n    totalNotFilteredField?: string;\n    undefinedText?: string;\n    onSearch?: (text: string) => boolean | void;\n    onPageChange?: (number: number, size: number) => boolean | void;\n    paginationUseIntermediate?: boolean;\n    searchAccentNeutralise?: boolean;\n    singleSelect?: boolean;\n    showButtonIcons?: boolean;\n    showPaginationSwitch?: boolean;\n    onPreBody?: (data: any) => boolean | void;\n    detailFilter?: (index: number, row: any) => boolean | void;\n    detailViewByClick?: boolean;\n    totalField?: string;\n    contentType?: string;\n    showColumns?: boolean;\n    totalNotFiltered?: number;\n    checkboxHeader?: boolean;\n    onRefresh?: (params: any[]) => boolean | void;\n    dataType?: string;\n    paginationPreText?: string;\n    showToggle?: boolean;\n    detailView?: boolean;\n    serverSort?: boolean;\n    totalRows?: number;\n    silentSort?: boolean;\n    onPostFooter?: () => boolean | void;\n    selectItemName?: string;\n    detailViewIcon?: boolean;\n    detailViewAlign?: string;\n    minimumCountColumns?: number;\n    uniqueId?: any;\n    onResetView?: () => boolean | void;\n    paginationHAlign?: string;\n    sortClass?: any;\n    pagination?: boolean;\n    queryParams?: (params: any) => any;\n    paginationSuccessivelySize?: number;\n    classes?: string;\n    rememberOrder?: boolean;\n    paginationPagesBySide?: number;\n    trimOnSearch?: boolean;\n    showRefresh?: boolean;\n    locale?: BootstrapTableLocale;\n    onCheckAll?: (rowsAfter: any[], rowsBefore: any[]) => boolean | void;\n    showFooter?: boolean;\n    headerStyle?: (column: BootstrapTableColumn) => {};\n    maintainMetaData?: boolean;\n    onRefreshOptions?: (options: BootstrapTableOptions) => boolean | void;\n    showExtendedPagination?: boolean;\n    smartDisplay?: boolean;\n    paginationLoop?: boolean;\n    virtualScroll?: boolean;\n    sortReset?: boolean;\n    filterOptions?: { filterAlgorithm: string };\n    onUncheckAll?: (rowsAfter: any[], rowsBefore: any[]) => boolean | void;\n    showSearchClearButton?: boolean;\n    buttons?: {};\n    showHeader?: boolean;\n    onClickCell?: (\n        field: string,\n        value: any,\n        row: any,\n        $element: JQuery<HTMLElement>\n    ) => boolean | void;\n    sortable?: boolean;\n    icons?: BootstrapTableIcons;\n    onExpandRow?: (\n        index: number,\n        row: any,\n        $detail: JQuery<HTMLElement>\n    ) => boolean | void;\n    buttonsClass?: string;\n    pageList?: number[];\n}\n\n\n\n//import 'bootstrap-table/src/themes/bootstrap-table/bootstrap-table'\n//import 'bootstrap-table/src/extensions/editable/bootstrap-table-editable'\nimport 'bootstrap-table/src/extensions/export/bootstrap-table-export'\nimport 'bootstrap-table/src/extensions/mobile/bootstrap-table-mobile';\n//import 'bootstrap-table/src/extensions/reorder-columns/bootstrap-table-reorder-columns';\nimport 'bootstrap-table/src/extensions/i18n-enhance/bootstrap-table-i18n-enhance'\n//import 'bootstrap-table/src/extensions/pipeline/bootstrap-table-pipeline';\nimport 'bootstrap-table/src/extensions/sticky-header/bootstrap-table-sticky-header'\nimport 'bootstrap-table/src/extensions/toolbar/bootstrap-table-toolbar'\nimport 'bootstrap-table/src/extensions/cookie/bootstrap-table-cookie';\n//import 'bootstrap-table/src/extensions/editable/bootstrap-table-editable';\nimport 'bootstrap-table/src/extensions/fixed-columns/bootstrap-table-fixed-columns'\n//import 'bootstrap-table/src/extensions/fixed-columns/bootstrap-table-resizable'\nimport 'bootstrap-table/src/extensions/addrbar/bootstrap-table-addrbar'\nimport 'bootstrap-table/src/extensions/pipeline/bootstrap-table-pipeline'\nimport 'bootstrap-table/src/locale/bootstrap-table-es-CL';\n//import 'bootstrap-table/src/extensions/filter-control/bootstrap-table-filter-control';\n//import 'bootstrap-table/src/extensions/defer-url/bootstrap-table-defer-url';\n//import 'bootstrap-table/src/extensions/resizable/bootstrap-table-resizable';\n$.fn.bootstrapTable.locales['es-CL'].formatRecordsPerPage = (pageNumber) => {\n    return `${pageNumber} <span>por p\u00E1gina</span>`\n}\n$.fn.bootstrapTable.locales['es-CL'].formatShowingRows = (pageFrom, pageTo, totalRows, totalNotFiltered) => {\n    return `Filas ${pageFrom} a ${pageTo} de ${totalRows}`;\n}\n\nexport { BootstrapTable }\nexport default BootstrapTable\n\n", "export default {\n  getBootstrapVersion () {\n    let bootstrapVersion = 5\n\n    try {\n      const rawVersion = $.fn.dropdown.Constructor.VERSION\n\n      // Only try to parse VERSION if it is defined.\n      // It is undefined in older versions of Bootstrap (tested with 3.1.1).\n      if (rawVersion !== undefined) {\n        bootstrapVersion = parseInt(rawVersion, 10)\n      }\n    } catch (e) {\n      // ignore\n    }\n\n    try {\n      // eslint-disable-next-line no-undef\n      const rawVersion = bootstrap.Tooltip.VERSION\n\n      if (rawVersion !== undefined) {\n        bootstrapVersion = parseInt(rawVersion, 10)\n      }\n    } catch (e) {\n      // ignore\n    }\n\n    return bootstrapVersion\n  },\n\n  getIconsPrefix (theme) {\n    return {\n      bootstrap3: 'glyphicon',\n      bootstrap4: 'fa',\n      bootstrap5: 'bi',\n      'bootstrap-table': 'icon',\n      bulma: 'fa',\n      foundation: 'fa',\n      materialize: 'material-icons',\n      semantic: 'fa'\n    }[theme] || 'fa'\n  },\n\n  getIcons (prefix) {\n    return {\n      glyphicon: {\n        paginationSwitchDown: 'glyphicon-collapse-down icon-chevron-down',\n        paginationSwitchUp: 'glyphicon-collapse-up icon-chevron-up',\n        refresh: 'glyphicon-refresh icon-refresh',\n        toggleOff: 'glyphicon-list-alt icon-list-alt',\n        toggleOn: 'glyphicon-list-alt icon-list-alt',\n        columns: 'glyphicon-th icon-th',\n        detailOpen: 'glyphicon-plus icon-plus',\n        detailClose: 'glyphicon-minus icon-minus',\n        fullscreen: 'glyphicon-fullscreen',\n        search: 'glyphicon-search',\n        clearSearch: 'glyphicon-trash'\n      },\n      fa: {\n        paginationSwitchDown: 'fa-caret-square-down',\n        paginationSwitchUp: 'fa-caret-square-up',\n        refresh: 'fa-sync',\n        toggleOff: 'fa-toggle-off',\n        toggleOn: 'fa-toggle-on',\n        columns: 'fa-th-list',\n        detailOpen: 'fa-plus',\n        detailClose: 'fa-minus',\n        fullscreen: 'fa-arrows-alt',\n        search: 'fa-search',\n        clearSearch: 'fa-trash'\n      },\n      bi: {\n        paginationSwitchDown: 'bi-caret-down-square',\n        paginationSwitchUp: 'bi-caret-up-square',\n        refresh: 'bi-arrow-clockwise',\n        toggleOff: 'bi-toggle-off',\n        toggleOn: 'bi-toggle-on',\n        columns: 'bi-list-ul',\n        detailOpen: 'bi-plus',\n        detailClose: 'bi-dash',\n        fullscreen: 'bi-arrows-move',\n        search: 'bi-search',\n        clearSearch: 'bi-trash'\n      },\n      icon: {\n        paginationSwitchDown: 'icon-arrow-up-circle',\n        paginationSwitchUp: 'icon-arrow-down-circle',\n        refresh: 'icon-refresh-cw',\n        toggleOff: 'icon-toggle-right',\n        toggleOn: 'icon-toggle-right',\n        columns: 'icon-list',\n        detailOpen: 'icon-plus',\n        detailClose: 'icon-minus',\n        fullscreen: 'icon-maximize',\n        search: 'icon-search',\n        clearSearch: 'icon-trash-2'\n      },\n      'material-icons': {\n        paginationSwitchDown: 'grid_on',\n        paginationSwitchUp: 'grid_off',\n        refresh: 'refresh',\n        toggleOff: 'tablet',\n        toggleOn: 'tablet_android',\n        columns: 'view_list',\n        detailOpen: 'add',\n        detailClose: 'remove',\n        fullscreen: 'fullscreen',\n        sort: 'sort',\n        search: 'search',\n        clearSearch: 'delete'\n      }\n    }[prefix]\n  },\n\n  getSearchInput (that) {\n    if (typeof that.options.searchSelector === 'string') {\n      return $(that.options.searchSelector)\n    }\n    return that.$toolbar.find('.search input')\n  },\n\n  // $.extend: https://github.com/jquery/jquery/blob/3.6.2/src/core.js#L132\n  extend (...args) {\n    let target = args[0] || {}\n    let i = 1\n    let deep = false\n    let clone\n\n    // Handle a deep copy situation\n    if (typeof target === 'boolean') {\n      deep = target\n\n      // Skip the boolean and the target\n      target = args[i] || {}\n      i++\n    }\n\n    // Handle case when target is a string or something (possible in deep copy)\n    if (typeof target !== 'object' && typeof target !== 'function') {\n      target = {}\n    }\n\n    for (; i < args.length; i++) {\n      const options = args[i]\n\n      // Ignore undefined/null values\n      if (typeof options === 'undefined' || options === null) {\n        continue\n      }\n\n      // Extend the base object\n      // eslint-disable-next-line guard-for-in\n      for (const name in options) {\n        const copy = options[name]\n\n        // Prevent Object.prototype pollution\n        // Prevent never-ending loop\n        if (name === '__proto__' || target === copy) {\n          continue\n        }\n\n        const copyIsArray = Array.isArray(copy)\n\n        // Recurse if we're merging plain objects or arrays\n        if (deep && copy && (this.isObject(copy) || copyIsArray)) {\n          const src = target[name]\n\n          if (copyIsArray && Array.isArray(src)) {\n            if (src.every(it => !this.isObject(it) && !Array.isArray(it))) {\n              target[name] = copy\n              continue\n            }\n          }\n\n          if (copyIsArray && !Array.isArray(src)) {\n            clone = []\n          } else if (!copyIsArray && !this.isObject(src)) {\n            clone = {}\n          } else {\n            clone = src\n          }\n\n          // Never move original objects, clone them\n          target[name] = this.extend(deep, clone, copy)\n\n        // Don't bring in undefined values\n        } else if (copy !== undefined) {\n          target[name] = copy\n        }\n      }\n    }\n\n    return target\n  },\n\n  // it only does '%s', and return '' when arguments are undefined\n  sprintf (_str, ...args) {\n    let flag = true\n    let i = 0\n\n    const str = _str.replace(/%s/g, () => {\n      const arg = args[i++]\n\n      if (typeof arg === 'undefined') {\n        flag = false\n        return ''\n      }\n      return arg\n    })\n\n    return flag ? str : ''\n  },\n\n  isObject (obj) {\n    if (typeof obj !== 'object' || obj === null) {\n      return false\n    }\n\n    let proto = obj\n\n    while (Object.getPrototypeOf(proto) !== null) {\n      proto = Object.getPrototypeOf(proto)\n    }\n\n    return Object.getPrototypeOf(obj) === proto\n  },\n\n  isEmptyObject (obj = {}) {\n    return Object.entries(obj).length === 0 && obj.constructor === Object\n  },\n\n  isNumeric (n) {\n    return !isNaN(parseFloat(n)) && isFinite(n)\n  },\n\n  getFieldTitle (list, value) {\n    for (const item of list) {\n      if (item.field === value) {\n        return item.title\n      }\n    }\n    return ''\n  },\n\n  setFieldIndex (columns) {\n    let totalCol = 0\n    const flag = []\n\n    for (const column of columns[0]) {\n      totalCol += column.colspan || 1\n    }\n\n    for (let i = 0; i < columns.length; i++) {\n      flag[i] = []\n      for (let j = 0; j < totalCol; j++) {\n        flag[i][j] = false\n      }\n    }\n\n    for (let i = 0; i < columns.length; i++) {\n      for (const r of columns[i]) {\n        const rowspan = r.rowspan || 1\n        const colspan = r.colspan || 1\n        const index = flag[i].indexOf(false)\n\n        r.colspanIndex = index\n\n        if (colspan === 1) {\n          r.fieldIndex = index\n          // when field is undefined, use index instead\n          if (typeof r.field === 'undefined') {\n            r.field = index\n          }\n        } else {\n          r.colspanGroup = r.colspan\n        }\n\n        for (let j = 0; j < rowspan; j++) {\n          for (let k = 0; k < colspan; k++) {\n            flag[i + j][index + k] = true\n          }\n        }\n      }\n    }\n  },\n\n  normalizeAccent (value) {\n    if (typeof value !== 'string') {\n      return value\n    }\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n  },\n\n  updateFieldGroup (columns, fieldColumns) {\n    const allColumns = [].concat(...columns)\n\n    for (const c of columns) {\n      for (const r of c) {\n        if (r.colspanGroup > 1) {\n          let colspan = 0\n\n          for (let i = r.colspanIndex; i < r.colspanIndex + r.colspanGroup; i++) {\n            const column = allColumns.find(col => col.fieldIndex === i)\n\n            if (column.visible) {\n              colspan++\n            }\n          }\n          r.colspan = colspan\n          r.visible = colspan > 0\n        }\n      }\n    }\n\n    if (columns.length < 2) {\n      return\n    }\n\n    for (const column of fieldColumns) {\n      const sameColumns = allColumns.filter(col => col.fieldIndex === column.fieldIndex)\n\n      if (sameColumns.length > 1) {\n        for (const c of sameColumns) {\n          c.visible = column.visible\n        }\n      }\n    }\n  },\n\n  getScrollBarWidth () {\n    if (this.cachedWidth === undefined) {\n      const $inner = $('<div/>').addClass('fixed-table-scroll-inner')\n      const $outer = $('<div/>').addClass('fixed-table-scroll-outer')\n\n      $outer.append($inner)\n      $('body').append($outer)\n\n      const w1 = $inner[0].offsetWidth\n\n      $outer.css('overflow', 'scroll')\n      let w2 = $inner[0].offsetWidth\n\n      if (w1 === w2) {\n        w2 = $outer[0].clientWidth\n      }\n\n      $outer.remove()\n      this.cachedWidth = w1 - w2\n    }\n    return this.cachedWidth\n  },\n\n  calculateObjectValue (self, name, args, defaultValue) {\n    let func = name\n\n    if (typeof name === 'string') {\n      // support obj.func1.func2\n      const names = name.split('.')\n\n      if (names.length > 1) {\n        func = window\n        for (const f of names) {\n          func = func[f]\n        }\n      } else {\n        func = window[name]\n      }\n    }\n\n    if (func !== null && typeof func === 'object') {\n      return func\n    }\n\n    if (typeof func === 'function') {\n      return func.apply(self, args || [])\n    }\n\n    if (\n      !func &&\n      typeof name === 'string' &&\n      args &&\n      this.sprintf(name, ...args)\n    ) {\n      return this.sprintf(name, ...args)\n    }\n\n    return defaultValue\n  },\n\n  compareObjects (objectA, objectB, compareLength) {\n    const aKeys = Object.keys(objectA)\n    const bKeys = Object.keys(objectB)\n\n    if (compareLength && aKeys.length !== bKeys.length) {\n      return false\n    }\n\n    for (const key of aKeys) {\n      if (bKeys.includes(key) && objectA[key] !== objectB[key]) {\n        return false\n      }\n    }\n\n    return true\n  },\n\n  regexCompare (value, search) {\n    try {\n      const regexpParts = search.match(/^\\/(.*?)\\/([gim]*)$/)\n\n      if (value.toString().search(regexpParts ? new RegExp(regexpParts[1], regexpParts[2]) : new RegExp(search, 'gim')) !== -1) {\n        return true\n      }\n    } catch (e) {\n      return false\n    }\n    return false\n  },\n\n  escapeApostrophe (value) {\n    return value.toString()\n      .replace(/'/g, '&#39;')\n  },\n\n  escapeHTML (text) {\n    if (!text) {\n      return text\n    }\n    return text.toString()\n      .replace(/&/g, '&amp;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&#39;')\n  },\n\n  unescapeHTML (text) {\n    if (typeof text !== 'string' || !text) {\n      return text\n    }\n    return text.toString()\n      .replace(/&amp;/g, '&')\n      .replace(/&lt;/g, '<')\n      .replace(/&gt;/g, '>')\n      .replace(/&quot;/g, '\"')\n      .replace(/&#39;/g, '\\'')\n  },\n\n  removeHTML (text) {\n    if (!text) {\n      return text\n    }\n    return text.toString()\n      .replace(/(<([^>]+)>)/ig, '')\n      .replace(/&[#A-Za-z0-9]+;/gi, '')\n      .trim()\n  },\n\n  getRealDataAttr (dataAttr) {\n    for (const [attr, value] of Object.entries(dataAttr)) {\n      const auxAttr = attr.split(/(?=[A-Z])/).join('-').toLowerCase()\n\n      if (auxAttr !== attr) {\n        dataAttr[auxAttr] = value\n        delete dataAttr[attr]\n      }\n    }\n    return dataAttr\n  },\n\n  getItemField (item, field, escape, columnEscape = undefined) {\n    let value = item\n\n    // use column escape if it is defined\n    if (typeof columnEscape !== 'undefined') {\n      escape = columnEscape\n    }\n\n    if (typeof field !== 'string' || item.hasOwnProperty(field)) {\n      return escape ? this.escapeHTML(item[field]) : item[field]\n    }\n\n    const props = field.split('.')\n\n    for (const p of props) {\n      value = value && value[p]\n    }\n    return escape ? this.escapeHTML(value) : value\n  },\n\n  isIEBrowser () {\n    return navigator.userAgent.includes('MSIE ') ||\n      /Trident.*rv:11\\./.test(navigator.userAgent)\n  },\n\n  findIndex (items, item) {\n    for (const it of items) {\n      if (JSON.stringify(it) === JSON.stringify(item)) {\n        return items.indexOf(it)\n      }\n    }\n    return -1\n  },\n\n  trToData (columns, $els) {\n    const data = []\n    const m = []\n\n    $els.each((y, el) => {\n      const $el = $(el)\n      const row = {}\n\n      // save tr's id, class and data-* attributes\n      row._id = $el.attr('id')\n      row._class = $el.attr('class')\n      row._data = this.getRealDataAttr($el.data())\n      row._style = $el.attr('style')\n\n      $el.find('>td,>th').each((_x, el) => {\n        const $el = $(el)\n        const cspan = +$el.attr('colspan') || 1\n        const rspan = +$el.attr('rowspan') || 1\n        let x = _x\n\n        // skip already occupied cells in current row\n        for (; m[y] && m[y][x]; x++) {\n          // ignore\n        }\n\n        // mark matrix elements occupied by current cell with true\n        for (let tx = x; tx < x + cspan; tx++) {\n          for (let ty = y; ty < y + rspan; ty++) {\n            if (!m[ty]) { // fill missing rows\n              m[ty] = []\n            }\n            m[ty][tx] = true\n          }\n        }\n\n        const field = columns[x].field\n\n        row[field] = this.escapeApostrophe($el.html().trim())\n        // save td's id, class and data-* attributes\n        row[`_${field}_id`] = $el.attr('id')\n        row[`_${field}_class`] = $el.attr('class')\n        row[`_${field}_rowspan`] = $el.attr('rowspan')\n        row[`_${field}_colspan`] = $el.attr('colspan')\n        row[`_${field}_title`] = $el.attr('title')\n        row[`_${field}_data`] = this.getRealDataAttr($el.data())\n        row[`_${field}_style`] = $el.attr('style')\n      })\n      data.push(row)\n    })\n    return data\n  },\n\n  sort (a, b, order, options, aPosition, bPosition) {\n    if (a === undefined || a === null) {\n      a = ''\n    }\n    if (b === undefined || b === null) {\n      b = ''\n    }\n\n    if (options.sortStable && a === b) {\n      a = aPosition\n      b = bPosition\n    }\n\n    // If both values are numeric, do a numeric comparison\n    if (this.isNumeric(a) && this.isNumeric(b)) {\n      // Convert numerical values form string to float.\n      a = parseFloat(a)\n      b = parseFloat(b)\n      if (a < b) {\n        return order * -1\n      }\n      if (a > b) {\n        return order\n      }\n      return 0\n    }\n\n    if (options.sortEmptyLast) {\n      if (a === '') {\n        return 1\n      }\n\n      if (b === '') {\n        return -1\n      }\n    }\n\n    if (a === b) {\n      return 0\n    }\n\n    // If value is not a string, convert to string\n    if (typeof a !== 'string') {\n      a = a.toString()\n    }\n\n    if (a.localeCompare(b) === -1) {\n      return order * -1\n    }\n\n    return order\n  },\n\n  getEventName (eventPrefix, id = '') {\n    id = id || `${+new Date()}${~~(Math.random() * 1000000)}`\n    return `${eventPrefix}-${id}`\n  },\n\n  hasDetailViewIcon (options) {\n    return options.detailView && options.detailViewIcon && !options.cardView\n  },\n\n  getDetailViewIndexOffset (options) {\n    return this.hasDetailViewIcon(options) && options.detailViewAlign !== 'right' ? 1 : 0\n  },\n\n  checkAutoMergeCells (data) {\n    for (const row of data) {\n      for (const key of Object.keys(row)) {\n        if (key.startsWith('_') && (key.endsWith('_rowspan') || key.endsWith('_colspan'))) {\n          return true\n        }\n      }\n    }\n    return false\n  },\n\n  deepCopy (arg) {\n    if (arg === undefined) {\n      return arg\n    }\n    return this.extend(true, Array.isArray(arg) ? [] : {}, arg)\n  },\n\n  debounce (func, wait, immediate) {\n    let timeout\n\n    return function executedFunction () {\n      const context = this\n      const args = arguments\n\n      const later = function () {\n        timeout = null\n        if (!immediate) func.apply(context, args)\n      }\n\n      const callNow = immediate && !timeout\n\n      clearTimeout(timeout)\n\n      timeout = setTimeout(later, wait)\n\n      if (callNow) func.apply(context, args)\n    }\n  }\n}\n", "/* eslint-disable no-unused-vars */\nimport Utils from '../utils/index.js'\n\nconst VERSION = '1.22.1'\n\nconst bootstrapVersion = Utils.getBootstrapVersion()\n\nconst CONSTANTS = {\n  3: {\n    classes: {\n      buttonsPrefix: 'btn',\n      buttons: 'default',\n      buttonsGroup: 'btn-group',\n      buttonsDropdown: 'btn-group',\n      pull: 'pull',\n      inputGroup: 'input-group',\n      inputPrefix: 'input-',\n      input: 'form-control',\n      select: 'form-control',\n      paginationDropdown: 'btn-group dropdown',\n      dropup: 'dropup',\n      dropdownActive: 'active',\n      paginationActive: 'active',\n      buttonActive: 'active'\n    },\n    html: {\n      toolbarDropdown: ['<ul class=\"dropdown-menu\" role=\"menu\">', '</ul>'],\n      toolbarDropdownItem: '<li class=\"dropdown-item-marker\" role=\"menuitem\"><label>%s</label></li>',\n      toolbarDropdownSeparator: '<li class=\"divider\"></li>',\n      pageDropdown: ['<ul class=\"dropdown-menu\" role=\"menu\">', '</ul>'],\n      pageDropdownItem: '<li role=\"menuitem\" class=\"%s\"><a href=\"#\">%s</a></li>',\n      dropdownCaret: '<span class=\"caret\"></span>',\n      pagination: ['<ul class=\"pagination%s\">', '</ul>'],\n      paginationItem: '<li class=\"page-item%s\"><a class=\"page-link\" aria-label=\"%s\" href=\"javascript:void(0)\">%s</a></li>',\n      icon: '<i class=\"%s %s\"></i>',\n      inputGroup: '<div class=\"input-group\">%s<span class=\"input-group-btn\">%s</span></div>',\n      searchInput: '<input class=\"%s%s\" type=\"text\" placeholder=\"%s\">',\n      searchButton: '<button class=\"%s\" type=\"button\" name=\"search\" title=\"%s\">%s %s</button>',\n      searchClearButton: '<button class=\"%s\" type=\"button\" name=\"clearSearch\" title=\"%s\">%s %s</button>'\n    }\n  },\n  4: {\n    classes: {\n      buttonsPrefix: 'btn',\n      buttons: 'secondary',\n      buttonsGroup: 'btn-group',\n      buttonsDropdown: 'btn-group',\n      pull: 'float',\n      inputGroup: 'btn-group',\n      inputPrefix: 'form-control-',\n      input: 'form-control',\n      select: 'form-control',\n      paginationDropdown: 'btn-group dropdown',\n      dropup: 'dropup',\n      dropdownActive: 'active',\n      paginationActive: 'active',\n      buttonActive: 'active'\n    },\n    html: {\n      toolbarDropdown: ['<div class=\"dropdown-menu dropdown-menu-right\">', '</div>'],\n      toolbarDropdownItem: '<label class=\"dropdown-item dropdown-item-marker\">%s</label>',\n      pageDropdown: ['<div class=\"dropdown-menu\">', '</div>'],\n      pageDropdownItem: '<a class=\"dropdown-item %s\" href=\"#\">%s</a>',\n      toolbarDropdownSeparator: '<div class=\"dropdown-divider\"></div>',\n      dropdownCaret: '<span class=\"caret\"></span>',\n      pagination: ['<ul class=\"pagination%s\">', '</ul>'],\n      paginationItem: '<li class=\"page-item%s\"><a class=\"page-link\" aria-label=\"%s\" href=\"javascript:void(0)\">%s</a></li>',\n      icon: '<i class=\"%s %s\"></i>',\n      inputGroup: '<div class=\"input-group\">%s<div class=\"input-group-append\">%s</div></div>',\n      searchInput: '<input class=\"%s%s\" type=\"text\" placeholder=\"%s\">',\n      searchButton: '<button class=\"%s\" type=\"button\" name=\"search\" title=\"%s\">%s %s</button>',\n      searchClearButton: '<button class=\"%s\" type=\"button\" name=\"clearSearch\" title=\"%s\">%s %s</button>'\n    }\n  },\n  5: {\n    classes: {\n      buttonsPrefix: 'btn',\n      buttons: 'secondary',\n      buttonsGroup: 'btn-group',\n      buttonsDropdown: 'btn-group',\n      pull: 'float',\n      inputGroup: 'btn-group',\n      inputPrefix: 'form-control-',\n      input: 'form-control',\n      select: 'form-select',\n      paginationDropdown: 'btn-group dropdown',\n      dropup: 'dropup',\n      dropdownActive: 'active',\n      paginationActive: 'active',\n      buttonActive: 'active'\n    },\n    html: {\n      dataToggle: 'data-bs-toggle',\n      toolbarDropdown: ['<div class=\"dropdown-menu dropdown-menu-end\">', '</div>'],\n      toolbarDropdownItem: '<label class=\"dropdown-item dropdown-item-marker\">%s</label>',\n      pageDropdown: ['<div class=\"dropdown-menu\">', '</div>'],\n      pageDropdownItem: '<a class=\"dropdown-item %s\" href=\"#\">%s</a>',\n      toolbarDropdownSeparator: '<div class=\"dropdown-divider\"></div>',\n      dropdownCaret: '<span class=\"caret\"></span>',\n      pagination: ['<ul class=\"pagination%s\">', '</ul>'],\n      paginationItem: '<li class=\"page-item%s\"><a class=\"page-link\" aria-label=\"%s\" href=\"javascript:void(0)\">%s</a></li>',\n      icon: '<i class=\"%s %s\"></i>',\n      inputGroup: '<div class=\"input-group\">%s%s</div>',\n      searchInput: '<input class=\"%s%s\" type=\"text\" placeholder=\"%s\">',\n      searchButton: '<button class=\"%s\" type=\"button\" name=\"search\" title=\"%s\">%s %s</button>',\n      searchClearButton: '<button class=\"%s\" type=\"button\" name=\"clearSearch\" title=\"%s\">%s %s</button>'\n    }\n  }\n}[bootstrapVersion]\n\nconst DEFAULTS = {\n  height: undefined,\n  classes: 'table table-bordered table-hover',\n  buttons: {},\n  theadClasses: '',\n  headerStyle (column) {\n    return {}\n  },\n  rowStyle (row, index) {\n    return {}\n  },\n  rowAttributes (row, index) {\n    return {}\n  },\n  undefinedText: '-',\n  locale: undefined,\n  virtualScroll: false,\n  virtualScrollItemHeight: undefined,\n  sortable: true,\n  sortClass: undefined,\n  silentSort: true,\n  sortEmptyLast: false,\n  sortName: undefined,\n  sortOrder: undefined,\n  sortReset: false,\n  sortStable: false,\n  sortResetPage: false,\n  rememberOrder: false,\n  serverSort: true,\n  customSort: undefined,\n  columns: [\n    []\n  ],\n  data: [],\n  url: undefined,\n  method: 'get',\n  cache: true,\n  contentType: 'application/json',\n  dataType: 'json',\n  ajax: undefined,\n  ajaxOptions: {},\n  queryParams (params) {\n    return params\n  },\n  queryParamsType: 'limit', // 'limit', undefined\n  responseHandler (res) {\n    return res\n  },\n  totalField: 'total',\n  totalNotFilteredField: 'totalNotFiltered',\n  dataField: 'rows',\n  footerField: 'footer',\n  pagination: false,\n  paginationParts: ['pageInfo', 'pageSize', 'pageList'],\n  showExtendedPagination: false,\n  paginationLoop: true,\n  sidePagination: 'client', // client or server\n  totalRows: 0,\n  totalNotFiltered: 0,\n  pageNumber: 1,\n  pageSize: 10,\n  pageList: [10, 25, 50, 100],\n  paginationHAlign: 'right', // right, left\n  paginationVAlign: 'bottom', // bottom, top, both\n  paginationDetailHAlign: 'left', // right, left\n  paginationPreText: '&lsaquo;',\n  paginationNextText: '&rsaquo;',\n  paginationSuccessivelySize: 5, // Maximum successively number of pages in a row\n  paginationPagesBySide: 1, // Number of pages on each side (right, left) of the current page.\n  paginationUseIntermediate: false, // Calculate intermediate pages for quick access\n  search: false,\n  searchable: false,\n  searchHighlight: false,\n  searchOnEnterKey: false,\n  strictSearch: false,\n  regexSearch: false,\n  searchSelector: false,\n  visibleSearch: false,\n  showButtonIcons: true,\n  showButtonText: false,\n  showSearchButton: false,\n  showSearchClearButton: false,\n  trimOnSearch: true,\n  searchAlign: 'right',\n  searchTimeOut: 500,\n  searchText: '',\n  customSearch: undefined,\n  showHeader: true,\n  showFooter: false,\n  footerStyle (column) {\n    return {}\n  },\n  searchAccentNeutralise: false,\n  showColumns: false,\n  showColumnsToggleAll: false,\n  showColumnsSearch: false,\n  minimumCountColumns: 1,\n  showPaginationSwitch: false,\n  showRefresh: false,\n  showToggle: false,\n  showFullscreen: false,\n  smartDisplay: true,\n  escape: false,\n  escapeTitle: true,\n  filterOptions: {\n    filterAlgorithm: 'and'\n  },\n  idField: undefined,\n  selectItemName: 'btSelectItem',\n  clickToSelect: false,\n  ignoreClickToSelectOn ({ tagName }) {\n    return ['A', 'BUTTON'].includes(tagName)\n  },\n  singleSelect: false,\n  checkboxHeader: true,\n  maintainMetaData: false,\n  multipleSelectRow: false,\n  uniqueId: undefined,\n  cardView: false,\n  detailView: false,\n  detailViewIcon: true,\n  detailViewByClick: false,\n  detailViewAlign: 'left',\n  detailFormatter (index, row) {\n    return ''\n  },\n  detailFilter (index, row) {\n    return true\n  },\n  toolbar: undefined,\n  toolbarAlign: 'left',\n  buttonsToolbar: undefined,\n  buttonsAlign: 'right',\n  buttonsOrder: ['paginationSwitch', 'refresh', 'toggle', 'fullscreen', 'columns'],\n  buttonsPrefix: CONSTANTS.classes.buttonsPrefix,\n  buttonsClass: CONSTANTS.classes.buttons,\n  iconsPrefix: undefined, // init in initConstants\n  icons: {}, // init in initConstants\n  iconSize: undefined,\n  loadingFontSize: 'auto',\n  loadingTemplate (loadingMessage) {\n    return `<span class=\"loading-wrap\">\n      <span class=\"loading-text\">${loadingMessage}</span>\n      <span class=\"animation-wrap\"><span class=\"animation-dot\"></span></span>\n      </span>\n    `\n  },\n  onAll (name, args) {\n    return false\n  },\n  onClickCell (field, value, row, $element) {\n    return false\n  },\n  onDblClickCell (field, value, row, $element) {\n    return false\n  },\n  onClickRow (item, $element) {\n    return false\n  },\n  onDblClickRow (item, $element) {\n    return false\n  },\n  onSort (name, order) {\n    return false\n  },\n  onCheck (row) {\n    return false\n  },\n  onUncheck (row) {\n    return false\n  },\n  onCheckAll (rows) {\n    return false\n  },\n  onUncheckAll (rows) {\n    return false\n  },\n  onCheckSome (rows) {\n    return false\n  },\n  onUncheckSome (rows) {\n    return false\n  },\n  onLoadSuccess (data) {\n    return false\n  },\n  onLoadError (status) {\n    return false\n  },\n  onColumnSwitch (field, checked) {\n    return false\n  },\n  onColumnSwitchAll (checked) {\n    return false\n  },\n  onPageChange (number, size) {\n    return false\n  },\n  onSearch (text) {\n    return false\n  },\n  onToggle (cardView) {\n    return false\n  },\n  onPreBody (data) {\n    return false\n  },\n  onPostBody () {\n    return false\n  },\n  onPostHeader () {\n    return false\n  },\n  onPostFooter () {\n    return false\n  },\n  onExpandRow (index, row, $detail) {\n    return false\n  },\n  onCollapseRow (index, row) {\n    return false\n  },\n  onRefreshOptions (options) {\n    return false\n  },\n  onRefresh (params) {\n    return false\n  },\n  onResetView () {\n    return false\n  },\n  onScrollBody () {\n    return false\n  },\n  onTogglePagination (newState) {\n    return false\n  },\n  onVirtualScroll (startIndex, endIndex) {\n    return false\n  }\n}\n\nconst EN = {\n  formatLoadingMessage () {\n    return 'Loading, please wait'\n  },\n  formatRecordsPerPage (pageNumber) {\n    return `${pageNumber} rows per page`\n  },\n  formatShowingRows (pageFrom, pageTo, totalRows, totalNotFiltered) {\n    if (totalNotFiltered !== undefined && totalNotFiltered > 0 && totalNotFiltered > totalRows) {\n      return `Showing ${pageFrom} to ${pageTo} of ${totalRows} rows (filtered from ${totalNotFiltered} total rows)`\n    }\n\n    return `Showing ${pageFrom} to ${pageTo} of ${totalRows} rows`\n  },\n  formatSRPaginationPreText () {\n    return 'previous page'\n  },\n  formatSRPaginationPageText (page) {\n    return `to page ${page}`\n  },\n  formatSRPaginationNextText () {\n    return 'next page'\n  },\n  formatDetailPagination (totalRows) {\n    return `Showing ${totalRows} rows`\n  },\n  formatSearch () {\n    return 'Search'\n  },\n  formatClearSearch () {\n    return 'Clear Search'\n  },\n  formatNoMatches () {\n    return 'No matching records found'\n  },\n  formatPaginationSwitch () {\n    return 'Hide/Show pagination'\n  },\n  formatPaginationSwitchDown () {\n    return 'Show pagination'\n  },\n  formatPaginationSwitchUp () {\n    return 'Hide pagination'\n  },\n  formatRefresh () {\n    return 'Refresh'\n  },\n  formatToggleOn () {\n    return 'Show card view'\n  },\n  formatToggleOff () {\n    return 'Hide card view'\n  },\n  formatColumns () {\n    return 'Columns'\n  },\n  formatColumnsToggleAll () {\n    return 'Toggle all'\n  },\n  formatFullscreen () {\n    return 'Fullscreen'\n  },\n  formatAllRows () {\n    return 'All'\n  }\n}\n\nconst COLUMN_DEFAULTS = {\n  field: undefined,\n  title: undefined,\n  titleTooltip: undefined,\n  class: undefined,\n  width: undefined,\n  widthUnit: 'px',\n  rowspan: undefined,\n  colspan: undefined,\n  align: undefined, // left, right, center\n  halign: undefined, // left, right, center\n  falign: undefined, // left, right, center\n  valign: undefined, // top, middle, bottom\n  cellStyle: undefined,\n  radio: false,\n  checkbox: false,\n  checkboxEnabled: true,\n  clickToSelect: true,\n  showSelectTitle: false,\n  sortable: false,\n  sortName: undefined,\n  order: 'asc', // asc, desc\n  sorter: undefined,\n  visible: true,\n  switchable: true,\n  switchableLabel: undefined,\n  cardVisible: true,\n  searchable: true,\n  formatter: undefined,\n  footerFormatter: undefined,\n  detailFormatter: undefined,\n  searchFormatter: true,\n  searchHighlightFormatter: false,\n  escape: undefined,\n  events: undefined\n}\n\nconst METHODS = [\n  'getOptions',\n  'refreshOptions',\n  'getData',\n  'getSelections',\n  'load', 'append', 'prepend',\n  'remove', 'removeAll',\n  'insertRow', 'updateRow',\n  'getRowByUniqueId', 'updateByUniqueId', 'removeByUniqueId',\n  'updateCell', 'updateCellByUniqueId',\n  'showRow', 'hideRow', 'getHiddenRows',\n  'showColumn', 'hideColumn',\n  'getVisibleColumns', 'getHiddenColumns',\n  'showAllColumns', 'hideAllColumns',\n  'mergeCells',\n  'checkAll', 'uncheckAll', 'checkInvert',\n  'check', 'uncheck',\n  'checkBy', 'uncheckBy',\n  'refresh',\n  'destroy',\n  'resetView',\n  'showLoading', 'hideLoading',\n  'togglePagination', 'toggleFullscreen', 'toggleView',\n  'resetSearch',\n  'filterBy',\n  'sortBy',\n  'scrollTo', 'getScrollPosition',\n  'selectPage', 'prevPage', 'nextPage',\n  'toggleDetailView',\n  'expandRow', 'collapseRow', 'expandRowByUniqueId', 'collapseRowByUniqueId',\n  'expandAllRows', 'collapseAllRows',\n  'updateColumnTitle', 'updateFormatText'\n]\n\nconst EVENTS = {\n  'all.bs.table': 'onAll',\n  'click-row.bs.table': 'onClickRow',\n  'dbl-click-row.bs.table': 'onDblClickRow',\n  'click-cell.bs.table': 'onClickCell',\n  'dbl-click-cell.bs.table': 'onDblClickCell',\n  'sort.bs.table': 'onSort',\n  'check.bs.table': 'onCheck',\n  'uncheck.bs.table': 'onUncheck',\n  'check-all.bs.table': 'onCheckAll',\n  'uncheck-all.bs.table': 'onUncheckAll',\n  'check-some.bs.table': 'onCheckSome',\n  'uncheck-some.bs.table': 'onUncheckSome',\n  'load-success.bs.table': 'onLoadSuccess',\n  'load-error.bs.table': 'onLoadError',\n  'column-switch.bs.table': 'onColumnSwitch',\n  'column-switch-all.bs.table': 'onColumnSwitchAll',\n  'page-change.bs.table': 'onPageChange',\n  'search.bs.table': 'onSearch',\n  'toggle.bs.table': 'onToggle',\n  'pre-body.bs.table': 'onPreBody',\n  'post-body.bs.table': 'onPostBody',\n  'post-header.bs.table': 'onPostHeader',\n  'post-footer.bs.table': 'onPostFooter',\n  'expand-row.bs.table': 'onExpandRow',\n  'collapse-row.bs.table': 'onCollapseRow',\n  'refresh-options.bs.table': 'onRefreshOptions',\n  'reset-view.bs.table': 'onResetView',\n  'refresh.bs.table': 'onRefresh',\n  'scroll-body.bs.table': 'onScrollBody',\n  'toggle-pagination.bs.table': 'onTogglePagination',\n  'virtual-scroll.bs.table': 'onVirtualScroll'\n}\n\nObject.assign(DEFAULTS, EN)\n\nexport default {\n  VERSION,\n\n  THEME: `bootstrap${bootstrapVersion}`,\n\n  CONSTANTS,\n\n  DEFAULTS,\n\n  COLUMN_DEFAULTS,\n\n  METHODS,\n\n  EVENTS,\n\n  LOCALES: {\n    en: EN,\n    'en-US': EN\n  }\n}\n", "const BLOCK_ROWS = 50\nconst CLUSTER_BLOCKS = 4\n\nclass VirtualScroll {\n\n  constructor (options) {\n    this.rows = options.rows\n    this.scrollEl = options.scrollEl\n    this.contentEl = options.contentEl\n    this.callback = options.callback\n    this.itemHeight = options.itemHeight\n\n    this.cache = {}\n    this.scrollTop = this.scrollEl.scrollTop\n\n    this.initDOM(this.rows, options.fixedScroll)\n\n    this.scrollEl.scrollTop = this.scrollTop\n    this.lastCluster = 0\n\n    const onScroll = () => {\n      if (this.lastCluster !== (this.lastCluster = this.getNum())) {\n        this.initDOM(this.rows)\n        this.callback(this.startIndex, this.endIndex)\n      }\n    }\n\n    this.scrollEl.addEventListener('scroll', onScroll, false)\n    this.destroy = () => {\n      this.contentEl.innerHtml = ''\n      this.scrollEl.removeEventListener('scroll', onScroll, false)\n    }\n  }\n\n  initDOM (rows, fixedScroll) {\n    if (typeof this.clusterHeight === 'undefined') {\n      this.cache.scrollTop = this.scrollEl.scrollTop\n      this.cache.data = this.contentEl.innerHTML = rows[0] + rows[0] + rows[0]\n      this.getRowsHeight(rows)\n    }\n\n    const data = this.initData(rows, this.getNum(fixedScroll))\n    const thisRows = data.rows.join('')\n    const dataChanged = this.checkChanges('data', thisRows)\n    const topOffsetChanged = this.checkChanges('top', data.topOffset)\n    const bottomOffsetChanged = this.checkChanges('bottom', data.bottomOffset)\n    const html = []\n\n    if (dataChanged && topOffsetChanged) {\n      if (data.topOffset) {\n        html.push(this.getExtra('top', data.topOffset))\n      }\n      html.push(thisRows)\n      if (data.bottomOffset) {\n        html.push(this.getExtra('bottom', data.bottomOffset))\n      }\n      this.startIndex = data.start\n      this.endIndex = data.end\n      this.contentEl.innerHTML = html.join('')\n\n      if (fixedScroll) {\n        this.contentEl.scrollTop = this.cache.scrollTop\n      }\n    } else if (bottomOffsetChanged) {\n      this.contentEl.lastChild.style.height = `${data.bottomOffset}px`\n    }\n  }\n\n  getRowsHeight () {\n    if (typeof this.itemHeight === 'undefined') {\n      const nodes = this.contentEl.children\n      const node = nodes[Math.floor(nodes.length / 2)]\n\n      this.itemHeight = node.offsetHeight\n    }\n    this.blockHeight = this.itemHeight * BLOCK_ROWS\n    this.clusterRows = BLOCK_ROWS * CLUSTER_BLOCKS\n    this.clusterHeight = this.blockHeight * CLUSTER_BLOCKS\n  }\n\n  getNum (fixedScroll) {\n    this.scrollTop = fixedScroll ? this.cache.scrollTop : this.scrollEl.scrollTop\n    return Math.floor(this.scrollTop / (this.clusterHeight - this.blockHeight)) || 0\n  }\n\n  initData (rows, num) {\n    if (rows.length < BLOCK_ROWS) {\n      return {\n        topOffset: 0,\n        bottomOffset: 0,\n        rowsAbove: 0,\n        rows\n      }\n    }\n    const start = Math.max((this.clusterRows - BLOCK_ROWS) * num, 0)\n    const end = start + this.clusterRows\n    const topOffset = Math.max(start * this.itemHeight, 0)\n    const bottomOffset = Math.max((rows.length - end) * this.itemHeight, 0)\n    const thisRows = []\n    let rowsAbove = start\n\n    if (topOffset < 1) {\n      rowsAbove++\n    }\n    for (let i = start; i < end; i++) {\n      rows[i] && thisRows.push(rows[i])\n    }\n    return {\n      start,\n      end,\n      topOffset,\n      bottomOffset,\n      rowsAbove,\n      rows: thisRows\n    }\n  }\n\n  checkChanges (type, value) {\n    const changed = value !== this.cache[type]\n\n    this.cache[type] = value\n    return changed\n  }\n\n  getExtra (className, height) {\n    const tag = document.createElement('tr')\n\n    tag.className = `virtual-scroll-${className}`\n    if (height) {\n      tag.style.height = `${height}px`\n    }\n    return tag.outerHTML\n  }\n}\n\nexport default VirtualScroll\n", "/**\n * @author zhixin wen <wenzhixin2010@gmail.com>\n * version: 1.22.1\n * https://github.com/wenzhixin/bootstrap-table/\n */\n\nimport Constants from './constants/index.js'\nimport Utils from './utils/index.js'\nimport VirtualScroll from './virtual-scroll/index.js'\n\nclass BootstrapTable {\n  constructor (el, options) {\n    this.options = options\n    this.$el = $(el)\n    this.$el_ = this.$el.clone()\n    this.timeoutId_ = 0\n    this.timeoutFooter_ = 0\n  }\n\n  init () {\n    this.initConstants()\n    this.initLocale()\n    this.initContainer()\n    this.initTable()\n    this.initHeader()\n    this.initData()\n    this.initHiddenRows()\n    this.initToolbar()\n    this.initPagination()\n    this.initBody()\n    this.initSearchText()\n    this.initServer()\n  }\n\n  initConstants () {\n    const opts = this.options\n\n    this.constants = Constants.CONSTANTS\n    this.constants.theme = $.fn.bootstrapTable.theme\n    this.constants.dataToggle = this.constants.html.dataToggle || 'data-toggle'\n\n    // init iconsPrefix and icons\n    const iconsPrefix = Utils.getIconsPrefix($.fn.bootstrapTable.theme)\n    const icons = Utils.getIcons(iconsPrefix)\n\n    if (typeof opts.icons === 'string') {\n      opts.icons = Utils.calculateObjectValue(null, opts.icons)\n    }\n\n    opts.iconsPrefix = opts.iconsPrefix || $.fn.bootstrapTable.defaults.iconsPrefix || iconsPrefix\n    opts.icons = Object.assign(icons, $.fn.bootstrapTable.defaults.icons, opts.icons)\n\n    // init buttons class\n    const buttonsPrefix = opts.buttonsPrefix ? `${opts.buttonsPrefix}-` : ''\n\n    this.constants.buttonsClass = [\n      opts.buttonsPrefix,\n      buttonsPrefix + opts.buttonsClass,\n      Utils.sprintf(`${buttonsPrefix}%s`, opts.iconSize)\n    ].join(' ').trim()\n\n    this.buttons = Utils.calculateObjectValue(this, opts.buttons, [], {})\n    if (typeof this.buttons !== 'object') {\n      this.buttons = {}\n    }\n  }\n\n  initLocale () {\n    if (this.options.locale) {\n      const locales = $.fn.bootstrapTable.locales\n      const parts = this.options.locale.split(/-|_/)\n\n      parts[0] = parts[0].toLowerCase()\n      if (parts[1]) {\n        parts[1] = parts[1].toUpperCase()\n      }\n\n      let localesToExtend = {}\n\n      if (locales[this.options.locale]) {\n        localesToExtend = locales[this.options.locale]\n      } else if (locales[parts.join('-')]) {\n        localesToExtend = locales[parts.join('-')]\n      } else if (locales[parts[0]]) {\n        localesToExtend = locales[parts[0]]\n      }\n\n      for (const [formatName, func] of Object.entries(localesToExtend)) {\n        if (this.options[formatName] !== BootstrapTable.DEFAULTS[formatName]) {\n          continue\n        }\n\n        this.options[formatName] = func\n      }\n    }\n  }\n\n  initContainer () {\n    const topPagination = ['top', 'both'].includes(this.options.paginationVAlign) ?\n      '<div class=\"fixed-table-pagination clearfix\"></div>' : ''\n    const bottomPagination = ['bottom', 'both'].includes(this.options.paginationVAlign) ?\n      '<div class=\"fixed-table-pagination\"></div>' : ''\n    const loadingTemplate = Utils.calculateObjectValue(this.options,\n      this.options.loadingTemplate, [this.options.formatLoadingMessage()])\n\n    this.$container = $(`\n      <div class=\"bootstrap-table ${this.constants.theme}\">\n      <div class=\"fixed-table-toolbar\"></div>\n      ${topPagination}\n      <div class=\"fixed-table-container\">\n      <div class=\"fixed-table-header\"><table></table></div>\n      <div class=\"fixed-table-body\">\n      <div class=\"fixed-table-loading\">\n      ${loadingTemplate}\n      </div>\n      </div>\n      <div class=\"fixed-table-footer\"></div>\n      </div>\n      ${bottomPagination}\n      </div>\n    `)\n\n    this.$container.insertAfter(this.$el)\n    this.$tableContainer = this.$container.find('.fixed-table-container')\n    this.$tableHeader = this.$container.find('.fixed-table-header')\n    this.$tableBody = this.$container.find('.fixed-table-body')\n    this.$tableLoading = this.$container.find('.fixed-table-loading')\n    this.$tableFooter = this.$el.find('tfoot')\n    // checking if custom table-toolbar exists or not\n    if (this.options.buttonsToolbar) {\n      this.$toolbar = $('body').find(this.options.buttonsToolbar)\n    } else {\n      this.$toolbar = this.$container.find('.fixed-table-toolbar')\n    }\n    this.$pagination = this.$container.find('.fixed-table-pagination')\n\n    this.$tableBody.append(this.$el)\n    this.$container.after('<div class=\"clearfix\"></div>')\n\n    this.$el.addClass(this.options.classes)\n    this.$tableLoading.addClass(this.options.classes)\n\n    if (this.options.height) {\n      this.$tableContainer.addClass('fixed-height')\n\n      if (this.options.showFooter) {\n        this.$tableContainer.addClass('has-footer')\n      }\n\n      if (this.options.classes.split(' ').includes('table-bordered')) {\n        this.$tableBody.append('<div class=\"fixed-table-border\"></div>')\n        this.$tableBorder = this.$tableBody.find('.fixed-table-border')\n        this.$tableLoading.addClass('fixed-table-border')\n      }\n\n      this.$tableFooter = this.$container.find('.fixed-table-footer')\n    }\n  }\n\n  initTable () {\n    const columns = []\n\n    this.$header = this.$el.find('>thead')\n    if (!this.$header.length) {\n      this.$header = $(`<thead class=\"${this.options.theadClasses}\"></thead>`).appendTo(this.$el)\n    } else if (this.options.theadClasses) {\n      this.$header.addClass(this.options.theadClasses)\n    }\n\n    this._headerTrClasses = []\n    this._headerTrStyles = []\n    this.$header.find('tr').each((i, el) => {\n      const $tr = $(el)\n      const column = []\n\n      $tr.find('th').each((i, el) => {\n        const $th = $(el)\n\n        // #2014: getFieldIndex and elsewhere assume this is string, causes issues if not\n        if (typeof $th.data('field') !== 'undefined') {\n          $th.data('field', `${$th.data('field')}`)\n        }\n        const _data = Object.assign({}, $th.data())\n\n        for (const key in _data) {\n          if ($.fn.bootstrapTable.columnDefaults.hasOwnProperty(key)) {\n            delete _data[key]\n          }\n        }\n\n        column.push(Utils.extend({}, {\n          _data: Utils.getRealDataAttr(_data),\n          title: $th.html(),\n          class: $th.attr('class'),\n          titleTooltip: $th.attr('title'),\n          rowspan: $th.attr('rowspan') ? +$th.attr('rowspan') : undefined,\n          colspan: $th.attr('colspan') ? +$th.attr('colspan') : undefined\n        }, $th.data()))\n      })\n      columns.push(column)\n\n      if ($tr.attr('class')) {\n        this._headerTrClasses.push($tr.attr('class'))\n      }\n      if ($tr.attr('style')) {\n        this._headerTrStyles.push($tr.attr('style'))\n      }\n    })\n\n    if (!Array.isArray(this.options.columns[0])) {\n      this.options.columns = [this.options.columns]\n    }\n\n    this.options.columns = Utils.extend(true, [], columns, this.options.columns)\n    this.columns = []\n    this.fieldsColumnsIndex = []\n\n    Utils.setFieldIndex(this.options.columns)\n\n    this.options.columns.forEach((columns, i) => {\n      columns.forEach((_column, j) => {\n        const column = Utils.extend({}, BootstrapTable.COLUMN_DEFAULTS, _column, { passed: _column })\n\n        if (typeof column.fieldIndex !== 'undefined') {\n          this.columns[column.fieldIndex] = column\n          this.fieldsColumnsIndex[column.field] = column.fieldIndex\n        }\n\n        this.options.columns[i][j] = column\n      })\n    })\n\n    // if options.data is setting, do not process tbody and tfoot data\n    if (!this.options.data.length) {\n      const htmlData = Utils.trToData(this.columns, this.$el.find('>tbody>tr'))\n\n      if (htmlData.length) {\n        this.options.data = htmlData\n        this.fromHtml = true\n      }\n    }\n\n    if (!(this.options.pagination && this.options.sidePagination !== 'server')) {\n      this.footerData = Utils.trToData(this.columns, this.$el.find('>tfoot>tr'))\n    }\n\n    if (this.footerData) {\n      this.$el.find('tfoot').html('<tr></tr>')\n    }\n\n    if (!this.options.showFooter || this.options.cardView) {\n      this.$tableFooter.hide()\n    } else {\n      this.$tableFooter.show()\n    }\n  }\n\n  initHeader () {\n    const visibleColumns = {}\n    const headerHtml = []\n\n    this.header = {\n      fields: [],\n      styles: [],\n      classes: [],\n      formatters: [],\n      detailFormatters: [],\n      events: [],\n      sorters: [],\n      sortNames: [],\n      cellStyles: [],\n      searchables: []\n    }\n\n    Utils.updateFieldGroup(this.options.columns, this.columns)\n\n    this.options.columns.forEach((columns, i) => {\n      const html = []\n\n      html.push(`<tr${Utils.sprintf(' class=\"%s\"', this._headerTrClasses[i])} ${Utils.sprintf(' style=\"%s\"', this._headerTrStyles[i])}>`)\n\n      let detailViewTemplate = ''\n\n      if (i === 0 && Utils.hasDetailViewIcon(this.options)) {\n        const rowspan = this.options.columns.length > 1 ?\n          ` rowspan=\"${this.options.columns.length}\"` : ''\n\n        detailViewTemplate = `<th class=\"detail\"${rowspan}>\n          <div class=\"fht-cell\"></div>\n          </th>`\n      }\n\n      if (detailViewTemplate && this.options.detailViewAlign !== 'right') {\n        html.push(detailViewTemplate)\n      }\n\n      columns.forEach((column, j) => {\n        const class_ = Utils.sprintf(' class=\"%s\"', column['class'])\n        const unitWidth = column.widthUnit\n        const width = parseFloat(column.width)\n\n        const columnHalign = column.halign ? column.halign : column.align\n        const halign = Utils.sprintf('text-align: %s; ', columnHalign)\n        const align = Utils.sprintf('text-align: %s; ', column.align)\n        let style = Utils.sprintf('vertical-align: %s; ', column.valign)\n\n        style += Utils.sprintf('width: %s; ', (column.checkbox || column.radio) && !width ?\n          !column.showSelectTitle ? '36px' : undefined :\n          width ? width + unitWidth : undefined)\n\n        if (typeof column.fieldIndex === 'undefined' && !column.visible) {\n          return\n        }\n\n        const headerStyle = Utils.calculateObjectValue(null, this.options.headerStyle, [column])\n        const csses = []\n        const data_ = []\n        let classes = ''\n\n        if (headerStyle && headerStyle.css) {\n          for (const [key, value] of Object.entries(headerStyle.css)) {\n            csses.push(`${key}: ${value}`)\n          }\n        }\n        if (headerStyle && headerStyle.classes) {\n          classes = Utils.sprintf(' class=\"%s\"', column['class'] ?\n            [column['class'], headerStyle.classes].join(' ') : headerStyle.classes)\n        }\n\n        if (typeof column.fieldIndex !== 'undefined') {\n          this.header.fields[column.fieldIndex] = column.field\n          this.header.styles[column.fieldIndex] = align + style\n          this.header.classes[column.fieldIndex] = class_\n          this.header.formatters[column.fieldIndex] = column.formatter\n          this.header.detailFormatters[column.fieldIndex] = column.detailFormatter\n          this.header.events[column.fieldIndex] = column.events\n          this.header.sorters[column.fieldIndex] = column.sorter\n          this.header.sortNames[column.fieldIndex] = column.sortName\n          this.header.cellStyles[column.fieldIndex] = column.cellStyle\n          this.header.searchables[column.fieldIndex] = column.searchable\n\n          if (!column.visible) {\n            return\n          }\n\n          if (this.options.cardView && !column.cardVisible) {\n            return\n          }\n\n          visibleColumns[column.field] = column\n        }\n\n        if (Object.keys(column._data || {}).length > 0) {\n          for (const [k, v] of Object.entries(column._data)) {\n            data_.push(`data-${k}='${typeof v === 'object' ? JSON.stringify(v) : v}'`)\n          }\n        }\n\n        html.push(`<th${Utils.sprintf(' title=\"%s\"', column.titleTooltip)}`,\n          column.checkbox || column.radio ?\n            Utils.sprintf(' class=\"bs-checkbox %s\"', column['class'] || '') :\n            classes || class_,\n          Utils.sprintf(' style=\"%s\"', halign + style + csses.join('; ')),\n          Utils.sprintf(' rowspan=\"%s\"', column.rowspan),\n          Utils.sprintf(' colspan=\"%s\"', column.colspan),\n          Utils.sprintf(' data-field=\"%s\"', column.field),\n          // If `column` is not the first element of `this.options.columns[0]`, then className 'data-not-first-th' should be added.\n          j === 0 && i > 0 ? ' data-not-first-th' : '',\n          data_.length > 0 ? data_.join(' ') : '',\n          '>')\n\n        html.push(Utils.sprintf('<div class=\"th-inner %s\">',\n          this.options.sortable && column.sortable ? `sortable${columnHalign === 'center' ? ' sortable-center' : ''} both` : ''))\n\n        let text = this.options.escape && this.options.escapeTitle ? Utils.escapeHTML(column.title) : column.title\n\n        const title = text\n\n        if (column.checkbox) {\n          text = ''\n          if (!this.options.singleSelect && this.options.checkboxHeader) {\n            text = '<label><input name=\"btSelectAll\" type=\"checkbox\" /><span></span></label>'\n          }\n          this.header.stateField = column.field\n        }\n        if (column.radio) {\n          text = ''\n          this.header.stateField = column.field\n        }\n        if (!text && column.showSelectTitle) {\n          text += title\n        }\n\n        html.push(text)\n        html.push('</div>')\n        html.push('<div class=\"fht-cell\"></div>')\n        html.push('</div>')\n        html.push('</th>')\n      })\n\n      if (detailViewTemplate && this.options.detailViewAlign === 'right') {\n        html.push(detailViewTemplate)\n      }\n\n      html.push('</tr>')\n\n      if (html.length > 3) {\n        headerHtml.push(html.join(''))\n      }\n    })\n\n    this.$header.html(headerHtml.join(''))\n    this.$header.find('th[data-field]').each((i, el) => {\n      $(el).data(visibleColumns[$(el).data('field')])\n    })\n    this.$container.off('click', '.th-inner').on('click', '.th-inner', e => {\n      const $this = $(e.currentTarget)\n\n      if (this.options.detailView && !$this.parent().hasClass('bs-checkbox')) {\n        if ($this.closest('.bootstrap-table')[0] !== this.$container[0]) {\n          return false\n        }\n      }\n\n      if (this.options.sortable && $this.parent().data().sortable) {\n        this.onSort(e)\n      }\n    })\n\n    const resizeEvent = Utils.getEventName('resize.bootstrap-table', this.$el.attr('id'))\n\n    $(window).off(resizeEvent)\n    if (!this.options.showHeader || this.options.cardView) {\n      this.$header.hide()\n      this.$tableHeader.hide()\n      this.$tableLoading.css('top', 0)\n    } else {\n      this.$header.show()\n      this.$tableHeader.show()\n      this.$tableLoading.css('top', this.$header.outerHeight() + 1)\n      // Assign the correct sortable arrow\n      this.getCaret()\n      $(window).on(resizeEvent, () => this.resetView())\n    }\n\n    this.$selectAll = this.$header.find('[name=\"btSelectAll\"]')\n    this.$selectAll.off('click').on('click', e => {\n      e.stopPropagation()\n      const checked = $(e.currentTarget).prop('checked')\n\n      this[checked ? 'checkAll' : 'uncheckAll']()\n      this.updateSelected()\n    })\n  }\n\n  initData (data, type) {\n    if (type === 'append') {\n      this.options.data = this.options.data.concat(data)\n    } else if (type === 'prepend') {\n      this.options.data = [].concat(data).concat(this.options.data)\n    } else {\n      data = data || Utils.deepCopy(this.options.data)\n      this.options.data = Array.isArray(data) ? data : data[this.options.dataField]\n    }\n\n    this.data = [...this.options.data]\n\n    if (this.options.sortReset) {\n      this.unsortedData = [...this.data]\n    }\n\n    if (this.options.sidePagination === 'server') {\n      return\n    }\n    this.initSort()\n  }\n\n  initSort () {\n    let name = this.options.sortName\n    const order = this.options.sortOrder === 'desc' ? -1 : 1\n    const index = this.header.fields.indexOf(this.options.sortName)\n    let timeoutId = 0\n\n    if (index !== -1) {\n      if (this.options.sortStable) {\n        this.data.forEach((row, i) => {\n          if (!row.hasOwnProperty('_position')) {\n            row._position = i\n          }\n        })\n      }\n\n      if (this.options.customSort) {\n        Utils.calculateObjectValue(this.options, this.options.customSort, [\n          this.options.sortName,\n          this.options.sortOrder,\n          this.data\n        ])\n      } else {\n        this.data.sort((a, b) => {\n          if (this.header.sortNames[index]) {\n            name = this.header.sortNames[index]\n          }\n          const aa = Utils.getItemField(a, name, this.options.escape)\n          const bb = Utils.getItemField(b, name, this.options.escape)\n          const value = Utils.calculateObjectValue(this.header, this.header.sorters[index], [aa, bb, a, b])\n\n          if (value !== undefined) {\n            if (this.options.sortStable && value === 0) {\n              return order * (a._position - b._position)\n            }\n            return order * value\n          }\n\n          return Utils.sort(aa, bb, order, this.options, a._position, b._position)\n        })\n      }\n\n      if (this.options.sortClass !== undefined) {\n        clearTimeout(timeoutId)\n        timeoutId = setTimeout(() => {\n          this.$el.removeClass(this.options.sortClass)\n          const index = this.$header.find(`[data-field=\"${this.options.sortName}\"]`).index()\n\n          this.$el.find(`tr td:nth-child(${index + 1})`).addClass(this.options.sortClass)\n        }, 250)\n      }\n    } else if (this.options.sortReset) {\n      this.data = [...this.unsortedData]\n    }\n  }\n\n  sortBy (params) {\n    this.options.sortName = params.field\n    this.options.sortOrder = params.hasOwnProperty('sortOrder') ? params.sortOrder : 'asc'\n    this._sort()\n  }\n\n  onSort ({ type, currentTarget }) {\n    const $this = type === 'keypress' ? $(currentTarget) : $(currentTarget).parent()\n    const $this_ = this.$header.find('th').eq($this.index())\n\n    this.$header.add(this.$header_).find('span.order').remove()\n\n    if (this.options.sortName === $this.data('field')) {\n      const currentSortOrder = this.options.sortOrder\n      const initialSortOrder = this.columns[this.fieldsColumnsIndex[$this.data('field')]].sortOrder ||\n        this.columns[this.fieldsColumnsIndex[$this.data('field')]].order\n\n      if (currentSortOrder === undefined) {\n        this.options.sortOrder = 'asc'\n      } else if (currentSortOrder === 'asc') {\n        this.options.sortOrder = this.options.sortReset ? initialSortOrder === 'asc' ? 'desc' : undefined : 'desc'\n      } else if (this.options.sortOrder === 'desc') {\n        this.options.sortOrder = this.options.sortReset ? initialSortOrder === 'desc' ? 'asc' : undefined : 'asc'\n      }\n\n      if (this.options.sortOrder === undefined) {\n        this.options.sortName = undefined\n      }\n    } else {\n      this.options.sortName = $this.data('field')\n      if (this.options.rememberOrder) {\n        this.options.sortOrder = $this.data('order') === 'asc' ? 'desc' : 'asc'\n      } else {\n        this.options.sortOrder = this.columns[this.fieldsColumnsIndex[$this.data('field')]].sortOrder ||\n          this.columns[this.fieldsColumnsIndex[$this.data('field')]].order\n      }\n    }\n\n    $this.add($this_).data('order', this.options.sortOrder)\n\n    // Assign the correct sortable arrow\n    this.getCaret()\n\n    this._sort()\n  }\n\n  _sort () {\n    this.trigger('sort', this.options.sortName, this.options.sortOrder)\n\n    if (this.options.sidePagination === 'server' && this.options.serverSort) {\n      this.options.pageNumber = 1\n      this.initServer(this.options.silentSort)\n      return\n    }\n\n    if (this.options.pagination && this.options.sortResetPage) {\n      this.options.pageNumber = 1\n      this.initPagination()\n    }\n\n    this.initSort()\n    this.initBody()\n  }\n\n  initToolbar () {\n    const opts = this.options\n    let html = []\n    let timeoutId = 0\n    let $keepOpen\n    let switchableCount = 0\n\n    if (this.$toolbar.find('.bs-bars').children().length) {\n      $('body').append($(opts.toolbar))\n    }\n    this.$toolbar.html('')\n\n    if (typeof opts.toolbar === 'string' || typeof opts.toolbar === 'object') {\n      $(Utils.sprintf('<div class=\"bs-bars %s-%s\"></div>', this.constants.classes.pull, opts.toolbarAlign))\n        .appendTo(this.$toolbar)\n        .append($(opts.toolbar))\n    }\n\n    // showColumns, showToggle, showRefresh\n    html = [`<div class=\"${[\n      'columns',\n      `columns-${opts.buttonsAlign}`,\n      this.constants.classes.buttonsGroup,\n      `${this.constants.classes.pull}-${opts.buttonsAlign}`\n    ].join(' ')}\">`]\n\n    if (typeof opts.buttonsOrder === 'string') {\n      opts.buttonsOrder = opts.buttonsOrder.replace(/\\[|\\]| |'/g, '').split(',')\n    }\n\n    this.buttons = Object.assign(this.buttons, {\n      paginationSwitch: {\n        text: opts.pagination ? opts.formatPaginationSwitchUp() : opts.formatPaginationSwitchDown(),\n        icon: opts.pagination ? opts.icons.paginationSwitchDown : opts.icons.paginationSwitchUp,\n        render: false,\n        event: this.togglePagination,\n        attributes: {\n          'aria-label': opts.formatPaginationSwitch(),\n          title: opts.formatPaginationSwitch()\n        }\n      },\n      refresh: {\n        text: opts.formatRefresh(),\n        icon: opts.icons.refresh,\n        render: false,\n        event: this.refresh,\n        attributes: {\n          'aria-label': opts.formatRefresh(),\n          title: opts.formatRefresh()\n        }\n      },\n      toggle: {\n        text: opts.formatToggleOn(),\n        icon: opts.icons.toggleOff,\n        render: false,\n        event: this.toggleView,\n        attributes: {\n          'aria-label': opts.formatToggleOn(),\n          title: opts.formatToggleOn()\n        }\n      },\n      fullscreen: {\n        text: opts.formatFullscreen(),\n        icon: opts.icons.fullscreen,\n        render: false,\n        event: this.toggleFullscreen,\n        attributes: {\n          'aria-label': opts.formatFullscreen(),\n          title: opts.formatFullscreen()\n        }\n      },\n      columns: {\n        render: false,\n        html: () => {\n          const html = []\n\n          html.push(`<div class=\"keep-open ${this.constants.classes.buttonsDropdown}\">\n            <button class=\"${this.constants.buttonsClass} dropdown-toggle\" type=\"button\" ${this.constants.dataToggle}=\"dropdown\"\n            aria-label=\"${opts.formatColumns()}\" title=\"${opts.formatColumns()}\">\n            ${opts.showButtonIcons ? Utils.sprintf(this.constants.html.icon, opts.iconsPrefix, opts.icons.columns) : ''}\n            ${opts.showButtonText ? opts.formatColumns() : ''}\n            ${this.constants.html.dropdownCaret}\n            </button>\n            ${this.constants.html.toolbarDropdown[0]}`)\n\n          if (opts.showColumnsSearch) {\n            html.push(\n              Utils.sprintf(this.constants.html.toolbarDropdownItem,\n                Utils.sprintf('<input type=\"text\" class=\"%s\" name=\"columnsSearch\" placeholder=\"%s\" autocomplete=\"off\">', this.constants.classes.input, opts.formatSearch())\n              )\n            )\n            html.push(this.constants.html.toolbarDropdownSeparator)\n          }\n\n          if (opts.showColumnsToggleAll) {\n            const allFieldsVisible = this.getVisibleColumns().length === this.columns.filter(column => !this.isSelectionColumn(column)).length\n\n            html.push(\n              Utils.sprintf(this.constants.html.toolbarDropdownItem,\n                Utils.sprintf('<input type=\"checkbox\" class=\"toggle-all\" %s> <span>%s</span>',\n                  allFieldsVisible ? 'checked=\"checked\"' : '', opts.formatColumnsToggleAll())\n              )\n            )\n\n            html.push(this.constants.html.toolbarDropdownSeparator)\n          }\n\n          let visibleColumns = 0\n\n          this.columns.forEach(column => {\n            if (column.visible) {\n              visibleColumns++\n            }\n          })\n\n          this.columns.forEach((column, i) => {\n            if (this.isSelectionColumn(column)) {\n              return\n            }\n\n            if (opts.cardView && !column.cardVisible) {\n              return\n            }\n\n            const checked = column.visible ? ' checked=\"checked\"' : ''\n            const disabled = visibleColumns <= opts.minimumCountColumns && checked ? ' disabled=\"disabled\"' : ''\n\n            if (column.switchable) {\n              html.push(Utils.sprintf(this.constants.html.toolbarDropdownItem,\n                Utils.sprintf('<input type=\"checkbox\" data-field=\"%s\" value=\"%s\"%s%s> <span>%s</span>',\n                  column.field, i, checked, disabled, column.switchableLabel ? column.switchableLabel : column.title)))\n              switchableCount++\n            }\n          })\n          html.push(this.constants.html.toolbarDropdown[1], '</div>')\n          return html.join('')\n        }\n      }\n    })\n\n    const buttonsHtml = {}\n\n    for (const [buttonName, buttonConfig] of Object.entries(this.buttons)) {\n      let buttonHtml\n\n      if (buttonConfig.hasOwnProperty('html')) {\n        if (typeof buttonConfig.html === 'function') {\n          buttonHtml = buttonConfig.html()\n        } else if (typeof buttonConfig.html === 'string') {\n          buttonHtml = buttonConfig.html\n        }\n      } else {\n        let buttonClass = this.constants.buttonsClass\n\n        if (buttonConfig.hasOwnProperty('attributes') && buttonConfig.attributes.class) {\n          buttonClass += ` ${buttonConfig.attributes.class}`\n        }\n        buttonHtml = `<button class=\"${buttonClass}\" type=\"button\" name=\"${buttonName}\"`\n\n        if (buttonConfig.hasOwnProperty('attributes')) {\n          for (const [attributeName, value] of Object.entries(buttonConfig.attributes)) {\n            if (attributeName === 'class') {\n              continue\n            }\n            buttonHtml += ` ${attributeName}=\"${value}\"`\n          }\n        }\n\n        buttonHtml += '>'\n\n        if (opts.showButtonIcons && buttonConfig.hasOwnProperty('icon')) {\n          buttonHtml += `${Utils.sprintf(this.constants.html.icon, opts.iconsPrefix, buttonConfig.icon)} `\n        }\n\n        if (opts.showButtonText && buttonConfig.hasOwnProperty('text')) {\n          buttonHtml += buttonConfig.text\n        }\n\n        buttonHtml += '</button>'\n      }\n\n      buttonsHtml[buttonName] = buttonHtml\n      const optionName = `show${buttonName.charAt(0).toUpperCase()}${buttonName.substring(1)}`\n      const showOption = opts[optionName]\n\n      if ((\n        !buttonConfig.hasOwnProperty('render') ||\n        buttonConfig.hasOwnProperty('render') &&\n        buttonConfig.render) &&\n        (showOption === undefined || showOption === true)\n      ) {\n        opts[optionName] = true\n      }\n\n      if (!opts.buttonsOrder.includes(buttonName)) {\n        opts.buttonsOrder.push(buttonName)\n      }\n    }\n\n    // Adding the button html to the final toolbar html when the showOption is true\n    for (const button of opts.buttonsOrder) {\n      const showOption = opts[`show${button.charAt(0).toUpperCase()}${button.substring(1)}`]\n\n      if (showOption) {\n        html.push(buttonsHtml[button])\n      }\n    }\n\n    html.push('</div>')\n\n    // Fix #188: this.showToolbar is for extensions\n    if (this.showToolbar || html.length > 2) {\n      this.$toolbar.append(html.join(''))\n    }\n\n    for (const [buttonName, buttonConfig] of Object.entries(this.buttons)) {\n      if (buttonConfig.hasOwnProperty('event')) {\n        if (typeof buttonConfig.event === 'function' || typeof buttonConfig.event === 'string') {\n          const event = typeof buttonConfig.event === 'string' ? window[buttonConfig.event] : buttonConfig.event\n\n          this.$toolbar.find(`button[name=\"${buttonName}\"]`)\n            .off('click')\n            .on('click', () => event.call(this))\n          continue\n        }\n\n        for (const [eventType, eventFunction] of Object.entries(buttonConfig.event)) {\n          const event = typeof eventFunction === 'string' ? window[eventFunction] : eventFunction\n\n          this.$toolbar.find(`button[name=\"${buttonName}\"]`)\n            .off(eventType)\n            .on(eventType, () => event.call(this))\n        }\n      }\n    }\n\n    if (opts.showColumns) {\n      $keepOpen = this.$toolbar.find('.keep-open')\n      const $checkboxes = $keepOpen.find('input[type=\"checkbox\"]:not(\".toggle-all\")')\n      const $toggleAll = $keepOpen.find('input[type=\"checkbox\"].toggle-all')\n\n      if (switchableCount <= opts.minimumCountColumns) {\n        $keepOpen.find('input').prop('disabled', true)\n      }\n\n      $keepOpen.find('li, label').off('click').on('click', e => {\n        e.stopImmediatePropagation()\n      })\n\n      $checkboxes.off('click').on('click', ({ currentTarget }) => {\n        const $this = $(currentTarget)\n\n        this._toggleColumn($this.val(), $this.prop('checked'), false)\n        this.trigger('column-switch', $this.data('field'), $this.prop('checked'))\n        $toggleAll.prop('checked', $checkboxes.filter(':checked').length === this.columns.filter(column => !this.isSelectionColumn(column)).length)\n      })\n\n      $toggleAll.off('click').on('click', ({ currentTarget }) => {\n        this._toggleAllColumns($(currentTarget).prop('checked'))\n        this.trigger('column-switch-all', $(currentTarget).prop('checked'))\n      })\n\n      if (opts.showColumnsSearch) {\n        const $columnsSearch = $keepOpen.find('[name=\"columnsSearch\"]')\n        const $listItems = $keepOpen.find('.dropdown-item-marker')\n\n        $columnsSearch.on('keyup paste change', ({ currentTarget }) => {\n          const $this = $(currentTarget)\n          const searchValue = $this.val().toLowerCase()\n\n          $listItems.show()\n          $checkboxes.each((i, el) => {\n            const $checkbox = $(el)\n            const $listItem = $checkbox.parents('.dropdown-item-marker')\n            const text = $listItem.text().toLowerCase()\n\n            if (!text.includes(searchValue)) {\n              $listItem.hide()\n            }\n          })\n        })\n      }\n    }\n    const handleInputEvent = $searchInput => {\n      const eventTriggers = $searchInput.is('select') ? 'change' : 'keyup drop blur mouseup'\n\n      $searchInput.off(eventTriggers).on(eventTriggers, event => {\n        if (opts.searchOnEnterKey && event.keyCode !== 13) {\n          return\n        }\n\n        if ([37, 38, 39, 40].includes(event.keyCode)) {\n          return\n        }\n\n        clearTimeout(timeoutId) // doesn't matter if it's 0\n        timeoutId = setTimeout(() => {\n          this.onSearch({ currentTarget: event.currentTarget })\n        }, opts.searchTimeOut)\n      })\n    }\n\n    // Fix #4516: this.showSearchClearButton is for extensions\n    if (\n      (opts.search || this.showSearchClearButton) &&\n      typeof opts.searchSelector !== 'string'\n    ) {\n      html = []\n      const showSearchButton = Utils.sprintf(this.constants.html.searchButton,\n        this.constants.buttonsClass,\n        opts.formatSearch(),\n        opts.showButtonIcons ? Utils.sprintf(this.constants.html.icon, opts.iconsPrefix, opts.icons.search) : '',\n        opts.showButtonText ? opts.formatSearch() : ''\n      )\n      const showSearchClearButton = Utils.sprintf(this.constants.html.searchClearButton,\n        this.constants.buttonsClass,\n        opts.formatClearSearch(),\n        opts.showButtonIcons ? Utils.sprintf(this.constants.html.icon, opts.iconsPrefix, opts.icons.clearSearch) : '',\n        opts.showButtonText ? opts.formatClearSearch() : ''\n      )\n      const searchInputHtml = `<input class=\"${this.constants.classes.input}\n        ${Utils.sprintf(' %s%s', this.constants.classes.inputPrefix, opts.iconSize)}\n        search-input\" type=\"search\" aria-label=\"${opts.formatSearch()}\" placeholder=\"${opts.formatSearch()}\" autocomplete=\"off\">`\n      let searchInputFinalHtml = searchInputHtml\n\n      if (opts.showSearchButton || opts.showSearchClearButton) {\n        const buttonsHtml = (opts.showSearchButton ? showSearchButton : '') +\n          (opts.showSearchClearButton ? showSearchClearButton : '')\n\n        searchInputFinalHtml = opts.search ? Utils.sprintf(this.constants.html.inputGroup,\n          searchInputHtml, buttonsHtml) : buttonsHtml\n      }\n\n      html.push(Utils.sprintf(`\n        <div class=\"${this.constants.classes.pull}-${opts.searchAlign} search ${this.constants.classes.inputGroup}\">\n          %s\n        </div>\n      `, searchInputFinalHtml))\n\n      this.$toolbar.append(html.join(''))\n      const $searchInput = Utils.getSearchInput(this)\n\n      if (opts.showSearchButton) {\n        this.$toolbar.find('.search button[name=search]').off('click').on('click', () => {\n          clearTimeout(timeoutId) // doesn't matter if it's 0\n          timeoutId = setTimeout(() => {\n            this.onSearch({ currentTarget: $searchInput })\n          }, opts.searchTimeOut)\n        })\n\n        if (opts.searchOnEnterKey) {\n          handleInputEvent($searchInput)\n        }\n      } else {\n        handleInputEvent($searchInput)\n      }\n\n      if (opts.showSearchClearButton) {\n        this.$toolbar.find('.search button[name=clearSearch]').click(() => {\n          this.resetSearch()\n        })\n      }\n    } else if (typeof opts.searchSelector === 'string') {\n      const $searchInput = Utils.getSearchInput(this)\n\n      handleInputEvent($searchInput)\n    }\n  }\n\n  onSearch ({ currentTarget, firedByInitSearchText } = {}, overwriteSearchText = true) {\n    if (currentTarget !== undefined && $(currentTarget).length && overwriteSearchText) {\n      const text = $(currentTarget).val().trim()\n\n      if (this.options.trimOnSearch && $(currentTarget).val() !== text) {\n        $(currentTarget).val(text)\n      }\n\n      if (this.searchText === text) {\n        return\n      }\n\n      const $searchInput = Utils.getSearchInput(this)\n      const $currentTarget = currentTarget instanceof jQuery ? currentTarget : $(currentTarget)\n\n      if ($currentTarget.is($searchInput) || $currentTarget.hasClass('search-input')) {\n        this.searchText = text\n        this.options.searchText = text\n      }\n    }\n\n    if (!firedByInitSearchText) {\n      this.options.pageNumber = 1\n    }\n    this.initSearch()\n    if (firedByInitSearchText) {\n      if (this.options.sidePagination === 'client') {\n        this.updatePagination()\n      }\n    } else {\n      this.updatePagination()\n    }\n    this.trigger('search', this.searchText)\n  }\n\n  initSearch () {\n    this.filterOptions = this.filterOptions || this.options.filterOptions\n    if (this.options.sidePagination !== 'server') {\n      if (this.options.customSearch) {\n        this.data = Utils.calculateObjectValue(this.options, this.options.customSearch,\n          [this.options.data, this.searchText, this.filterColumns])\n\n        if (this.options.sortReset) {\n          this.unsortedData = [...this.data]\n        }\n\n        this.initSort()\n        return\n      }\n\n      const rawSearchText = this.searchText && (this.fromHtml ? Utils.escapeHTML(this.searchText) : this.searchText)\n      let searchText = rawSearchText ? rawSearchText.toLowerCase() : ''\n      const f = Utils.isEmptyObject(this.filterColumns) ? null : this.filterColumns\n\n      if (this.options.searchAccentNeutralise) {\n        searchText = Utils.normalizeAccent(searchText)\n      }\n\n      // Check filter\n      if (typeof this.filterOptions.filterAlgorithm === 'function') {\n        this.data = this.options.data.filter(item => this.filterOptions.filterAlgorithm.apply(null, [item, f]))\n      } else if (typeof this.filterOptions.filterAlgorithm === 'string') {\n        this.data = f ? this.options.data.filter(item => {\n          const filterAlgorithm = this.filterOptions.filterAlgorithm\n\n          if (filterAlgorithm === 'and') {\n            for (const key in f) {\n              if (\n                Array.isArray(f[key]) &&\n                  !f[key].includes(item[key]) ||\n                !Array.isArray(f[key]) &&\n                  item[key] !== f[key]\n              ) {\n                return false\n              }\n            }\n          } else if (filterAlgorithm === 'or') {\n            let match = false\n\n            for (const key in f) {\n              if (\n                Array.isArray(f[key]) &&\n                  f[key].includes(item[key]) ||\n                !Array.isArray(f[key]) &&\n                  item[key] === f[key]\n              ) {\n                match = true\n              }\n            }\n\n            return match\n          }\n\n          return true\n        }) : [...this.options.data]\n      }\n\n      const visibleFields = this.getVisibleFields()\n\n      this.data = searchText ? this.data.filter((item, i) => {\n        for (let j = 0; j < this.header.fields.length; j++) {\n          if (!this.header.searchables[j] || this.options.visibleSearch && visibleFields.indexOf(this.header.fields[j]) === -1) {\n            continue\n          }\n\n          const key = Utils.isNumeric(this.header.fields[j]) ? parseInt(this.header.fields[j], 10) : this.header.fields[j]\n          const column = this.columns[this.fieldsColumnsIndex[key]]\n          let value\n\n          if (typeof key === 'string') {\n            value = item\n            const props = key.split('.')\n\n            for (let i = 0; i < props.length; i++) {\n              if (value[props[i]] !== null) {\n                value = value[props[i]]\n              } else {\n                value = null\n                break\n              }\n            }\n          } else {\n            value = item[key]\n          }\n\n          if (this.options.searchAccentNeutralise) {\n            value = Utils.normalizeAccent(value)\n          }\n\n          // Fix #142: respect searchFormatter boolean\n          if (column && column.searchFormatter) {\n            value = Utils.calculateObjectValue(column,\n              this.header.formatters[j], [value, item, i, column.field], value)\n          }\n\n          if (typeof value === 'string' || typeof value === 'number') {\n            if (\n              this.options.strictSearch && `${value}`.toLowerCase() === searchText ||\n              this.options.regexSearch && Utils.regexCompare(value, rawSearchText)\n            ) {\n              return true\n            }\n\n            const largerSmallerEqualsRegex = /(?:(<=|=>|=<|>=|>|<)(?:\\s+)?(-?\\d+)?|(-?\\d+)?(\\s+)?(<=|=>|=<|>=|>|<))/gm\n            const matches = largerSmallerEqualsRegex.exec(this.searchText)\n            let comparisonCheck = false\n\n            if (matches) {\n              const operator = matches[1] || `${matches[5]}l`\n              const comparisonValue = matches[2] || matches[3]\n              const int = parseInt(value, 10)\n              const comparisonInt = parseInt(comparisonValue, 10)\n\n              switch (operator) {\n                case '>':\n                case '<l':\n                  comparisonCheck = int > comparisonInt\n                  break\n                case '<':\n                case '>l':\n                  comparisonCheck = int < comparisonInt\n                  break\n                case '<=':\n                case '=<':\n                case '>=l':\n                case '=>l':\n                  comparisonCheck = int <= comparisonInt\n                  break\n                case '>=':\n                case '=>':\n                case '<=l':\n                case '=<l':\n                  comparisonCheck = int >= comparisonInt\n                  break\n                default:\n                  break\n              }\n            }\n\n            if (comparisonCheck || `${value}`.toLowerCase().includes(searchText)) {\n              return true\n            }\n          }\n        }\n        return false\n      }) : this.data\n\n      if (this.options.sortReset) {\n        this.unsortedData = [...this.data]\n      }\n\n      this.initSort()\n    }\n  }\n\n  initPagination () {\n    const opts = this.options\n\n    if (!opts.pagination) {\n      this.$pagination.hide()\n      return\n    }\n    this.$pagination.show()\n\n    const html = []\n    let allSelected = false\n    let i\n    let from\n    let to\n    let $pageList\n    let $pre\n    let $next\n    let $number\n    const data = this.getData({ includeHiddenRows: false })\n    let pageList = opts.pageList\n\n    if (typeof pageList === 'string') {\n      pageList = pageList.replace(/\\[|\\]| /g, '').toLowerCase().split(',')\n    }\n\n    pageList = pageList.map(value => {\n      if (typeof value === 'string') {\n        return value.toLowerCase() === opts.formatAllRows().toLowerCase() ||\n          ['all', 'unlimited'].includes(value.toLowerCase()) ? opts.formatAllRows() : +value\n      }\n      return value\n    })\n\n    this.paginationParts = opts.paginationParts\n    if (typeof this.paginationParts === 'string') {\n      this.paginationParts = this.paginationParts.replace(/\\[|\\]| |'/g, '').split(',')\n    }\n\n    if (opts.sidePagination !== 'server') {\n      opts.totalRows = data.length\n    }\n\n    this.totalPages = 0\n    if (opts.totalRows) {\n      if (opts.pageSize === opts.formatAllRows()) {\n        opts.pageSize = opts.totalRows\n        allSelected = true\n      }\n\n      this.totalPages = ~~((opts.totalRows - 1) / opts.pageSize) + 1\n\n      opts.totalPages = this.totalPages\n    }\n    if (this.totalPages > 0 && opts.pageNumber > this.totalPages) {\n      opts.pageNumber = this.totalPages\n    }\n\n    this.pageFrom = (opts.pageNumber - 1) * opts.pageSize + 1\n    this.pageTo = opts.pageNumber * opts.pageSize\n    if (this.pageTo > opts.totalRows) {\n      this.pageTo = opts.totalRows\n    }\n\n    if (this.options.pagination && this.options.sidePagination !== 'server') {\n      this.options.totalNotFiltered = this.options.data.length\n    }\n\n    if (!this.options.showExtendedPagination) {\n      this.options.totalNotFiltered = undefined\n    }\n\n    if (this.paginationParts.includes('pageInfo') || this.paginationParts.includes('pageInfoShort') || this.paginationParts.includes('pageSize')) {\n      html.push(`<div class=\"${this.constants.classes.pull}-${opts.paginationDetailHAlign} pagination-detail\">`)\n    }\n\n    if (this.paginationParts.includes('pageInfo') || this.paginationParts.includes('pageInfoShort')) {\n      const paginationInfo = this.paginationParts.includes('pageInfoShort') ? opts.formatDetailPagination(opts.totalRows) : opts.formatShowingRows(this.pageFrom, this.pageTo, opts.totalRows, opts.totalNotFiltered)\n\n      html.push(`<span class=\"pagination-info\">\n      ${paginationInfo}\n      </span>`)\n    }\n\n    if (this.paginationParts.includes('pageSize')) {\n      html.push('<div class=\"page-list\">')\n\n      const pageNumber = [\n        `<div class=\"${this.constants.classes.paginationDropdown}\">\n        <button class=\"${this.constants.buttonsClass} dropdown-toggle\" type=\"button\" ${this.constants.dataToggle}=\"dropdown\">\n        <span class=\"page-size\">\n        ${allSelected ? opts.formatAllRows() : opts.pageSize}\n        </span>\n        ${this.constants.html.dropdownCaret}\n        </button>\n        ${this.constants.html.pageDropdown[0]}`\n      ]\n\n      pageList.forEach((page, i) => {\n        if (!opts.smartDisplay || i === 0 || pageList[i - 1] < opts.totalRows || page === opts.formatAllRows()) {\n          let active\n\n          if (allSelected) {\n            active = page === opts.formatAllRows() ? this.constants.classes.dropdownActive : ''\n          } else {\n            active = page === opts.pageSize ? this.constants.classes.dropdownActive : ''\n          }\n          pageNumber.push(Utils.sprintf(this.constants.html.pageDropdownItem, active, page))\n        }\n      })\n      pageNumber.push(`${this.constants.html.pageDropdown[1]}</div>`)\n\n      html.push(opts.formatRecordsPerPage(pageNumber.join('')))\n    }\n\n    if (this.paginationParts.includes('pageInfo') || this.paginationParts.includes('pageInfoShort') || this.paginationParts.includes('pageSize')) {\n      html.push('</div></div>')\n    }\n\n    if (this.paginationParts.includes('pageList')) {\n      html.push(`<div class=\"${this.constants.classes.pull}-${opts.paginationHAlign} pagination\">`,\n        Utils.sprintf(this.constants.html.pagination[0], Utils.sprintf(' pagination-%s', opts.iconSize)),\n        Utils.sprintf(this.constants.html.paginationItem, ' page-pre', opts.formatSRPaginationPreText(), opts.paginationPreText))\n\n      if (this.totalPages < opts.paginationSuccessivelySize) {\n        from = 1\n        to = this.totalPages\n      } else {\n        from = opts.pageNumber - opts.paginationPagesBySide\n        to = from + opts.paginationPagesBySide * 2\n      }\n\n      if (opts.pageNumber < opts.paginationSuccessivelySize - 1) {\n        to = opts.paginationSuccessivelySize\n      }\n\n      if (opts.paginationSuccessivelySize > this.totalPages - from) {\n        from = from - (opts.paginationSuccessivelySize - (this.totalPages - from)) + 1\n      }\n\n      if (from < 1) {\n        from = 1\n      }\n\n      if (to > this.totalPages) {\n        to = this.totalPages\n      }\n\n      const middleSize = Math.round(opts.paginationPagesBySide / 2)\n      const pageItem = (i, classes = '') => Utils.sprintf(this.constants.html.paginationItem,\n        classes + (i === opts.pageNumber ? ` ${this.constants.classes.paginationActive}` : ''), opts.formatSRPaginationPageText(i), i)\n\n      if (from > 1) {\n        let max = opts.paginationPagesBySide\n\n        if (max >= from) max = from - 1\n        for (i = 1; i <= max; i++) {\n          html.push(pageItem(i))\n        }\n        if (from - 1 === max + 1) {\n          i = from - 1\n          html.push(pageItem(i))\n        } else if (from - 1 > max) {\n          if (\n            from - opts.paginationPagesBySide * 2 > opts.paginationPagesBySide &&\n              opts.paginationUseIntermediate\n          ) {\n            i = Math.round((from - middleSize) / 2 + middleSize)\n            html.push(pageItem(i, ' page-intermediate'))\n          } else {\n            html.push(Utils.sprintf(this.constants.html.paginationItem,\n              ' page-first-separator disabled', '', '...'))\n          }\n        }\n      }\n\n      for (i = from; i <= to; i++) {\n        html.push(pageItem(i))\n      }\n\n      if (this.totalPages > to) {\n        let min = this.totalPages - (opts.paginationPagesBySide - 1)\n\n        if (to >= min) min = to + 1\n        if (to + 1 === min - 1) {\n          i = to + 1\n          html.push(pageItem(i))\n        } else if (min > to + 1) {\n          if (\n            this.totalPages - to > opts.paginationPagesBySide * 2 &&\n              opts.paginationUseIntermediate\n          ) {\n            i = Math.round((this.totalPages - middleSize - to) / 2 + to)\n            html.push(pageItem(i, ' page-intermediate'))\n          } else {\n            html.push(Utils.sprintf(this.constants.html.paginationItem,\n              ' page-last-separator disabled', '', '...'))\n          }\n        }\n\n        for (i = min; i <= this.totalPages; i++) {\n          html.push(pageItem(i))\n        }\n      }\n\n      html.push(Utils.sprintf(this.constants.html.paginationItem, ' page-next', opts.formatSRPaginationNextText(), opts.paginationNextText))\n      html.push(this.constants.html.pagination[1], '</div>')\n    }\n    this.$pagination.html(html.join(''))\n\n    const dropupClass = ['bottom', 'both'].includes(opts.paginationVAlign) ?\n      ` ${this.constants.classes.dropup}` : ''\n\n    this.$pagination.last().find('.page-list > div').addClass(dropupClass)\n\n    if (!opts.onlyInfoPagination) {\n      $pageList = this.$pagination.find('.page-list a')\n      $pre = this.$pagination.find('.page-pre')\n      $next = this.$pagination.find('.page-next')\n      $number = this.$pagination.find('.page-item').not('.page-next, .page-pre, .page-last-separator, .page-first-separator')\n\n      if (this.totalPages <= 1) {\n        this.$pagination.find('div.pagination').hide()\n      }\n\n      if (opts.smartDisplay) {\n        if (pageList.length < 2 || opts.totalRows <= pageList[0]) {\n          this.$pagination.find('div.page-list').hide()\n        }\n      }\n\n      // when data is empty, hide the pagination\n      this.$pagination[this.getData().length ? 'show' : 'hide']()\n\n      if (!opts.paginationLoop) {\n        if (opts.pageNumber === 1) {\n          $pre.addClass('disabled')\n        }\n        if (opts.pageNumber === this.totalPages) {\n          $next.addClass('disabled')\n        }\n      }\n\n      if (allSelected) {\n        opts.pageSize = opts.formatAllRows()\n      }\n      // removed the events for last and first, onPageNumber executeds the same logic\n      $pageList.off('click').on('click', e => this.onPageListChange(e))\n      $pre.off('click').on('click', e => this.onPagePre(e))\n      $next.off('click').on('click', e => this.onPageNext(e))\n      $number.off('click').on('click', e => this.onPageNumber(e))\n    }\n  }\n\n  updatePagination (event) {\n    // Fix #171: IE disabled button can be clicked bug.\n    if (event && $(event.currentTarget).hasClass('disabled')) {\n      return\n    }\n\n    if (!this.options.maintainMetaData) {\n      this.resetRows()\n    }\n\n    this.initPagination()\n\n    this.trigger('page-change', this.options.pageNumber, this.options.pageSize)\n\n    if (this.options.sidePagination === 'server') {\n      this.initServer()\n    } else {\n      this.initBody()\n    }\n  }\n\n  onPageListChange (event) {\n    event.preventDefault()\n    const $this = $(event.currentTarget)\n\n    $this.parent().addClass(this.constants.classes.dropdownActive)\n      .siblings().removeClass(this.constants.classes.dropdownActive)\n    this.options.pageSize = $this.text().toUpperCase() === this.options.formatAllRows().toUpperCase() ?\n      this.options.formatAllRows() : +$this.text()\n    this.$toolbar.find('.page-size').text(this.options.pageSize)\n\n    this.updatePagination(event)\n    return false\n  }\n\n  onPagePre (event) {\n    if ($(event.target).hasClass('disabled')) {\n      return\n    }\n    event.preventDefault()\n    if (this.options.pageNumber - 1 === 0) {\n      this.options.pageNumber = this.options.totalPages\n    } else {\n      this.options.pageNumber--\n    }\n    this.updatePagination(event)\n    return false\n  }\n\n  onPageNext (event) {\n    if ($(event.target).hasClass('disabled')) {\n      return\n    }\n    event.preventDefault()\n    if (this.options.pageNumber + 1 > this.options.totalPages) {\n      this.options.pageNumber = 1\n    } else {\n      this.options.pageNumber++\n    }\n    this.updatePagination(event)\n    return false\n  }\n\n  onPageNumber (event) {\n    event.preventDefault()\n    if (this.options.pageNumber === +$(event.currentTarget).text()) {\n      return\n    }\n    this.options.pageNumber = +$(event.currentTarget).text()\n    this.updatePagination(event)\n    return false\n  }\n\n  // eslint-disable-next-line no-unused-vars\n  initRow (item, i, data, trFragments) {\n    const html = []\n    let style = {}\n    const csses = []\n    let data_ = ''\n    let attributes = {}\n    const htmlAttributes = []\n\n    if (Utils.findIndex(this.hiddenRows, item) > -1) {\n      return\n    }\n\n    style = Utils.calculateObjectValue(this.options, this.options.rowStyle, [item, i], style)\n\n    if (style && style.css) {\n      for (const [key, value] of Object.entries(style.css)) {\n        csses.push(`${key}: ${value}`)\n      }\n    }\n\n    attributes = Utils.calculateObjectValue(this.options,\n      this.options.rowAttributes, [item, i], attributes)\n\n    if (attributes) {\n      for (const [key, value] of Object.entries(attributes)) {\n        htmlAttributes.push(`${key}=\"${Utils.escapeHTML(value)}\"`)\n      }\n    }\n\n    if (item._data && !Utils.isEmptyObject(item._data)) {\n      for (const [k, v] of Object.entries(item._data)) {\n        // ignore data-index\n        if (k === 'index') {\n          return\n        }\n        data_ += ` data-${k}='${typeof v === 'object' ? JSON.stringify(v) : v}'`\n      }\n    }\n\n    html.push('<tr',\n      Utils.sprintf(' %s', htmlAttributes.length ? htmlAttributes.join(' ') : undefined),\n      Utils.sprintf(' id=\"%s\"', Array.isArray(item) ? undefined : item._id),\n      Utils.sprintf(' class=\"%s\"', style.classes || (Array.isArray(item) ? undefined : item._class)),\n      Utils.sprintf(' style=\"%s\"', Array.isArray(item) ? undefined : item._style),\n      ` data-index=\"${i}\"`,\n      Utils.sprintf(' data-uniqueid=\"%s\"', Utils.getItemField(item, this.options.uniqueId, false)),\n      Utils.sprintf(' data-has-detail-view=\"%s\"', this.options.detailView && Utils.calculateObjectValue(null, this.options.detailFilter, [i, item]) ? 'true' : undefined),\n      Utils.sprintf('%s', data_),\n      '>'\n    )\n\n    if (this.options.cardView) {\n      html.push(`<td colspan=\"${this.header.fields.length}\"><div class=\"card-views\">`)\n    }\n\n    let detailViewTemplate = ''\n\n    if (Utils.hasDetailViewIcon(this.options)) {\n      detailViewTemplate = '<td>'\n\n      if (Utils.calculateObjectValue(null, this.options.detailFilter, [i, item])) {\n        detailViewTemplate += `\n          <a class=\"detail-icon\" href=\"#\">\n          ${Utils.sprintf(this.constants.html.icon, this.options.iconsPrefix, this.options.icons.detailOpen)}\n          </a>\n        `\n      }\n\n      detailViewTemplate += '</td>'\n    }\n\n    if (detailViewTemplate && this.options.detailViewAlign !== 'right') {\n      html.push(detailViewTemplate)\n    }\n\n    this.header.fields.forEach((field, j) => {\n      const column = this.columns[j]\n      let text = ''\n      const value_ = Utils.getItemField(item, field, this.options.escape, column.escape)\n      let value = ''\n      let type = ''\n      let cellStyle = {}\n      let id_ = ''\n      let class_ = this.header.classes[j]\n      let style_ = ''\n      let styleToAdd_ = ''\n      let data_ = ''\n      let rowspan_ = ''\n      let colspan_ = ''\n      let title_ = ''\n\n      if ((this.fromHtml || this.autoMergeCells) && typeof value_ === 'undefined') {\n        if (!column.checkbox && !column.radio) {\n          return\n        }\n      }\n\n      if (!column.visible) {\n        return\n      }\n\n      if (this.options.cardView && !column.cardVisible) {\n        return\n      }\n\n      // Style concat\n      if (csses.concat([this.header.styles[j]]).length) {\n        styleToAdd_ += `${csses.concat([this.header.styles[j]]).join('; ')}`\n      }\n      if (item[`_${field}_style`]) {\n        styleToAdd_ += `${item[`_${field}_style`]}`\n      }\n\n      if (styleToAdd_) {\n        style_ = ` style=\"${styleToAdd_}\"`\n      }\n      // Style concat\n\n      // handle id and class of td\n      if (item[`_${field}_id`]) {\n        id_ = Utils.sprintf(' id=\"%s\"', item[`_${field}_id`])\n      }\n      if (item[`_${field}_class`]) {\n        class_ = Utils.sprintf(' class=\"%s\"', item[`_${field}_class`])\n      }\n      if (item[`_${field}_rowspan`]) {\n        rowspan_ = Utils.sprintf(' rowspan=\"%s\"', item[`_${field}_rowspan`])\n      }\n      if (item[`_${field}_colspan`]) {\n        colspan_ = Utils.sprintf(' colspan=\"%s\"', item[`_${field}_colspan`])\n      }\n      if (item[`_${field}_title`]) {\n        title_ = Utils.sprintf(' title=\"%s\"', item[`_${field}_title`])\n      }\n      cellStyle = Utils.calculateObjectValue(this.header,\n        this.header.cellStyles[j], [value_, item, i, field], cellStyle)\n      if (cellStyle.classes) {\n        class_ = ` class=\"${cellStyle.classes}\"`\n      }\n      if (cellStyle.css) {\n        const csses_ = []\n\n        for (const [key, value] of Object.entries(cellStyle.css)) {\n          csses_.push(`${key}: ${value}`)\n        }\n        style_ = ` style=\"${csses_.concat(this.header.styles[j]).join('; ')}\"`\n      }\n\n      value = Utils.calculateObjectValue(column,\n        this.header.formatters[j], [value_, item, i, field], value_)\n\n      if (!(column.checkbox || column.radio)) {\n        value = typeof value === 'undefined' || value === null ?\n          this.options.undefinedText : value\n      }\n\n      if (column.searchable && this.searchText && this.options.searchHighlight && !(column.checkbox || column.radio)) {\n        let defValue = ''\n        let searchText = this.searchText.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n\n        if (this.options.searchAccentNeutralise) {\n          const indexRegex = new RegExp(`${Utils.normalizeAccent(searchText)}`, 'gmi')\n          const match = indexRegex.exec(Utils.normalizeAccent(value))\n\n          if (match) {\n            searchText = value.substring(match.index, match.index + searchText.length)\n          }\n        }\n\n        const regExp = new RegExp(`(${searchText})`, 'gim')\n        const marker = '<mark>$1</mark>'\n        const isHTML = value && /<(?=.*? .*?\\/ ?>|br|hr|input|!--|wbr)[a-z]+.*?>|<([a-z]+).*?<\\/\\1>/i.test(value)\n\n        if (isHTML) {\n          // value can contains a HTML tags\n          let textContent = new DOMParser().parseFromString(value.toString(), 'text/html').documentElement.textContent\n          const textReplaced = textContent.replace(regExp, marker)\n\n          textContent = textContent.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n          defValue = value.replace(new RegExp(`(>\\\\s*)(${textContent})(\\\\s*)`, 'gm'), `$1${textReplaced}$3`)\n        } else {\n          // but usually not\n          defValue = value.toString().replace(regExp, marker)\n        }\n        value = Utils.calculateObjectValue(column, column.searchHighlightFormatter, [value, this.searchText], defValue)\n      }\n\n      if (item[`_${field}_data`] && !Utils.isEmptyObject(item[`_${field}_data`])) {\n        for (const [k, v] of Object.entries(item[`_${field}_data`])) {\n          // ignore data-index\n          if (k === 'index') {\n            return\n          }\n          data_ += ` data-${k}=\"${v}\"`\n        }\n      }\n\n      if (column.checkbox || column.radio) {\n        type = column.checkbox ? 'checkbox' : type\n        type = column.radio ? 'radio' : type\n\n        const c = column['class'] || ''\n        const isChecked = Utils.isObject(value) && value.hasOwnProperty('checked') ?\n          value.checked : (value === true || value_) && value !== false\n        const isDisabled = !column.checkboxEnabled || value && value.disabled\n\n        text = [\n          this.options.cardView ?\n            `<div class=\"card-view ${c}\">` :\n            `<td class=\"bs-checkbox ${c}\"${class_}${style_}>`,\n          `<label>\n            <input\n            data-index=\"${i}\"\n            name=\"${this.options.selectItemName}\"\n            type=\"${type}\"\n            ${Utils.sprintf('value=\"%s\"', item[this.options.idField])}\n            ${Utils.sprintf('checked=\"%s\"', isChecked ? 'checked' : undefined)}\n            ${Utils.sprintf('disabled=\"%s\"', isDisabled ? 'disabled' : undefined)} />\n            <span></span>\n            </label>`,\n          this.header.formatters[j] && typeof value === 'string' ? value : '',\n          this.options.cardView ? '</div>' : '</td>'\n        ].join('')\n\n        item[this.header.stateField] = value === true || (!!value_ || value && value.checked)\n      } else if (this.options.cardView) {\n        const cardTitle = this.options.showHeader ?\n          `<span class=\"card-view-title ${cellStyle.classes || ''}\"${style_}>${Utils.getFieldTitle(this.columns, field)}</span>` : ''\n\n        text = `<div class=\"card-view\">${cardTitle}<span class=\"card-view-value ${cellStyle.classes || ''}\"${style_}>${value}</span></div>`\n\n        if (this.options.smartDisplay && value === '') {\n          text = '<div class=\"card-view\"></div>'\n        }\n      } else {\n        text = `<td${id_}${class_}${style_}${data_}${rowspan_}${colspan_}${title_}>${value}</td>`\n      }\n\n      html.push(text)\n    })\n\n    if (detailViewTemplate && this.options.detailViewAlign === 'right') {\n      html.push(detailViewTemplate)\n    }\n\n    if (this.options.cardView) {\n      html.push('</div></td>')\n    }\n    html.push('</tr>')\n\n    return html.join('')\n  }\n\n  initBody (fixedScroll, updatedUid) {\n    const data = this.getData()\n\n    this.trigger('pre-body', data)\n\n    this.$body = this.$el.find('>tbody')\n    if (!this.$body.length) {\n      this.$body = $('<tbody></tbody>').appendTo(this.$el)\n    }\n\n    // Fix #389 Bootstrap-table-flatJSON is not working\n    if (!this.options.pagination || this.options.sidePagination === 'server') {\n      this.pageFrom = 1\n      this.pageTo = data.length\n    }\n\n    const rows = []\n    const trFragments = $(document.createDocumentFragment())\n    let hasTr = false\n    const toExpand = []\n\n    this.autoMergeCells = Utils.checkAutoMergeCells(data.slice(this.pageFrom - 1, this.pageTo))\n\n    for (let i = this.pageFrom - 1; i < this.pageTo; i++) {\n      const item = data[i]\n      let tr = this.initRow(item, i, data, trFragments)\n\n      hasTr = hasTr || !!tr\n      if (tr && typeof tr === 'string') {\n\n        const uniqueId = this.options.uniqueId\n\n        if (uniqueId && item.hasOwnProperty(uniqueId)) {\n          const itemUniqueId = item[uniqueId]\n\n          const oldTr = this.$body.find(Utils.sprintf('> tr[data-uniqueid=\"%s\"][data-has-detail-view]', itemUniqueId))\n          const oldTrNext = oldTr.next()\n\n          if (oldTrNext.is('tr.detail-view')) {\n\n            toExpand.push(i)\n\n            if (!updatedUid || itemUniqueId !== updatedUid) {\n              tr += oldTrNext[0].outerHTML\n            }\n          }\n        }\n\n        if (!this.options.virtualScroll) {\n          trFragments.append(tr)\n        } else {\n          rows.push(tr)\n        }\n      }\n    }\n\n    // show no records\n    if (!hasTr) {\n      this.$body.html(`<tr class=\"no-records-found\">${Utils.sprintf('<td colspan=\"%s\">%s</td>',\n        this.getVisibleFields().length + Utils.getDetailViewIndexOffset(this.options),\n        this.options.formatNoMatches())}</tr>`)\n    } else if (!this.options.virtualScroll) {\n      this.$body.html(trFragments)\n    } else {\n      if (this.virtualScroll) {\n        this.virtualScroll.destroy()\n      }\n      this.virtualScroll = new VirtualScroll({\n        rows,\n        fixedScroll,\n        scrollEl: this.$tableBody[0],\n        contentEl: this.$body[0],\n        itemHeight: this.options.virtualScrollItemHeight,\n        callback: (startIndex, endIndex) => {\n          this.fitHeader()\n          this.initBodyEvent()\n          this.trigger('virtual-scroll', startIndex, endIndex)\n        }\n      })\n    }\n\n    toExpand.forEach(index => {\n      this.expandRow(index)\n    })\n\n    if (!fixedScroll) {\n      this.scrollTo(0)\n    }\n\n    this.initBodyEvent()\n    this.initFooter()\n    this.resetView()\n    this.updateSelected()\n\n    if (this.options.sidePagination !== 'server') {\n      this.options.totalRows = data.length\n    }\n\n    this.trigger('post-body', data)\n  }\n\n  initBodyEvent () {\n    // click to select by column\n    this.$body.find('> tr[data-index] > td').off('click dblclick').on('click dblclick', e => {\n      const $td = $(e.currentTarget)\n\n      if (\n        $td.find('.detail-icon').length ||\n        $td.index() - Utils.getDetailViewIndexOffset(this.options) < 0\n      ) {\n        return\n      }\n\n      const $tr = $td.parent()\n      const $cardViewArr = $(e.target).parents('.card-views').children()\n      const $cardViewTarget = $(e.target).parents('.card-view')\n      const rowIndex = $tr.data('index')\n      const item = this.data[rowIndex]\n      const index = this.options.cardView ? $cardViewArr.index($cardViewTarget) : $td[0].cellIndex\n      const fields = this.getVisibleFields()\n      const field = fields[index - Utils.getDetailViewIndexOffset(this.options)]\n      const column = this.columns[this.fieldsColumnsIndex[field]]\n      const value = Utils.getItemField(item, field, this.options.escape, column.escape)\n\n      this.trigger(e.type === 'click' ? 'click-cell' : 'dbl-click-cell', field, value, item, $td)\n      this.trigger(e.type === 'click' ? 'click-row' : 'dbl-click-row', item, $tr, field)\n\n      // if click to select - then trigger the checkbox/radio click\n      if (\n        e.type === 'click' &&\n        this.options.clickToSelect &&\n        column.clickToSelect &&\n        !Utils.calculateObjectValue(this.options, this.options.ignoreClickToSelectOn, [e.target])\n      ) {\n        const $selectItem = $tr.find(Utils.sprintf('[name=\"%s\"]', this.options.selectItemName))\n\n        if ($selectItem.length) {\n          $selectItem[0].click()\n        }\n      }\n\n      if (e.type === 'click' && this.options.detailViewByClick) {\n        this.toggleDetailView(rowIndex, this.header.detailFormatters[this.fieldsColumnsIndex[field]])\n      }\n    }).off('mousedown').on('mousedown', e => {\n      // https://github.com/jquery/jquery/issues/1741\n      this.multipleSelectRowCtrlKey = e.ctrlKey || e.metaKey\n      this.multipleSelectRowShiftKey = e.shiftKey\n    })\n\n    this.$body.find('> tr[data-index] > td > .detail-icon').off('click').on('click', e => {\n      e.preventDefault()\n      this.toggleDetailView($(e.currentTarget).parent().parent().data('index'))\n      return false\n    })\n\n    this.$selectItem = this.$body.find(Utils.sprintf('[name=\"%s\"]', this.options.selectItemName))\n    this.$selectItem.off('click').on('click', e => {\n      e.stopImmediatePropagation()\n\n      const $this = $(e.currentTarget)\n\n      this._toggleCheck($this.prop('checked'), $this.data('index'))\n    })\n\n    this.header.events.forEach((_events, i) => {\n      let events = _events\n\n      if (!events) {\n        return\n      }\n      // fix bug, if events is defined with namespace\n      if (typeof events === 'string') {\n        events = Utils.calculateObjectValue(null, events)\n      }\n\n      if (!events) {\n        throw new Error(`Unknown event in the scope: ${_events}`)\n      }\n\n      const field = this.header.fields[i]\n      let fieldIndex = this.getVisibleFields().indexOf(field)\n\n      if (fieldIndex === -1) {\n        return\n      }\n\n      fieldIndex += Utils.getDetailViewIndexOffset(this.options)\n\n      for (const key in events) {\n        if (!events.hasOwnProperty(key)) {\n          continue\n        }\n        const event = events[key]\n\n        this.$body.find('>tr:not(.no-records-found)').each((i, tr) => {\n          const $tr = $(tr)\n          const $td = $tr.find(this.options.cardView ? '.card-views>.card-view' : '>td').eq(fieldIndex)\n          const index = key.indexOf(' ')\n          const name = key.substring(0, index)\n          const el = key.substring(index + 1)\n\n          $td.find(el).off(name).on(name, e => {\n            const index = $tr.data('index')\n            const row = this.data[index]\n            const value = row[field]\n\n            event.apply(this, [e, value, row, index])\n          })\n        })\n      }\n    })\n  }\n\n  initServer (silent, query, url) {\n    let data = {}\n    const index = this.header.fields.indexOf(this.options.sortName)\n\n    let params = {\n      searchText: this.searchText,\n      sortName: this.options.sortName,\n      sortOrder: this.options.sortOrder\n    }\n\n    if (this.header.sortNames[index]) {\n      params.sortName = this.header.sortNames[index]\n    }\n\n    if (this.options.pagination && this.options.sidePagination === 'server') {\n      params.pageSize = this.options.pageSize === this.options.formatAllRows() ?\n        this.options.totalRows : this.options.pageSize\n      params.pageNumber = this.options.pageNumber\n    }\n\n    if (!(url || this.options.url) && !this.options.ajax) {\n      return\n    }\n\n    if (this.options.queryParamsType === 'limit') {\n      params = {\n        search: params.searchText,\n        sort: params.sortName,\n        order: params.sortOrder\n      }\n\n      if (this.options.pagination && this.options.sidePagination === 'server') {\n        params.offset = this.options.pageSize === this.options.formatAllRows() ?\n          0 : this.options.pageSize * (this.options.pageNumber - 1)\n        params.limit = this.options.pageSize\n        if (params.limit === 0 || this.options.pageSize === this.options.formatAllRows()) {\n          delete params.limit\n        }\n      }\n    }\n\n    if (\n      this.options.search &&\n      this.options.sidePagination === 'server' &&\n      this.options.searchable &&\n      this.columns.filter(column => column.searchable).length\n    ) {\n      params.searchable = []\n\n      for (const column of this.columns) {\n        if (\n          !column.checkbox &&\n          column.searchable &&\n          (\n            this.options.visibleSearch &&\n            column.visible ||\n            !this.options.visibleSearch\n          )\n        ) {\n          params.searchable.push(column.field)\n        }\n      }\n    }\n\n    if (!Utils.isEmptyObject(this.filterColumnsPartial)) {\n      params.filter = JSON.stringify(this.filterColumnsPartial, null)\n    }\n\n    Utils.extend(params, query || {})\n\n    data = Utils.calculateObjectValue(this.options, this.options.queryParams, [params], data)\n\n    // false to stop request\n    if (data === false) {\n      return\n    }\n\n    if (!silent) {\n      this.showLoading()\n    }\n    const request = Utils.extend({}, Utils.calculateObjectValue(null, this.options.ajaxOptions), {\n      type: this.options.method,\n      url: url || this.options.url,\n      data: this.options.contentType === 'application/json' && this.options.method === 'post' ?\n        JSON.stringify(data) : data,\n      cache: this.options.cache,\n      contentType: this.options.contentType,\n      dataType: this.options.dataType,\n      success: (_res, textStatus, jqXHR) => {\n        const res = Utils.calculateObjectValue(this.options,\n          this.options.responseHandler, [_res, jqXHR], _res)\n\n        this.load(res)\n        this.trigger('load-success', res, jqXHR && jqXHR.status, jqXHR)\n        if (!silent) {\n          this.hideLoading()\n        }\n\n        if (\n          this.options.sidePagination === 'server' &&\n          this.options.pageNumber > 1 &&\n          res[this.options.totalField] > 0 &&\n          !res[this.options.dataField].length\n        ) {\n          this.updatePagination()\n        }\n      },\n      error: jqXHR => {\n        // abort ajax by multiple request\n        if (jqXHR && jqXHR.status === 0 && this._xhrAbort) {\n          this._xhrAbort = false\n          return\n        }\n\n        let data = []\n\n        if (this.options.sidePagination === 'server') {\n          data = {}\n          data[this.options.totalField] = 0\n          data[this.options.dataField] = []\n        }\n        this.load(data)\n        this.trigger('load-error', jqXHR && jqXHR.status, jqXHR)\n        if (!silent) {\n          this.hideLoading()\n        }\n      }\n    })\n\n    if (this.options.ajax) {\n      Utils.calculateObjectValue(this, this.options.ajax, [request], null)\n    } else {\n      if (this._xhr && this._xhr.readyState !== 4) {\n        this._xhrAbort = true\n        this._xhr.abort()\n      }\n      this._xhr = $.ajax(request)\n    }\n\n    return data\n  }\n\n  initSearchText () {\n    if (this.options.search) {\n      this.searchText = ''\n      if (this.options.searchText !== '') {\n        const $search = Utils.getSearchInput(this)\n\n        $search.val(this.options.searchText)\n        this.onSearch({ currentTarget: $search, firedByInitSearchText: true })\n      }\n    }\n  }\n\n  getCaret () {\n    this.$header.find('th').each((i, th) => {\n      $(th).find('.sortable').removeClass('desc asc')\n        .addClass($(th).data('field') === this.options.sortName ?\n          this.options.sortOrder : 'both')\n    })\n  }\n\n  updateSelected () {\n    const checkAll = this.$selectItem.filter(':enabled').length &&\n      this.$selectItem.filter(':enabled').length ===\n      this.$selectItem.filter(':enabled').filter(':checked').length\n\n    this.$selectAll.add(this.$selectAll_).prop('checked', checkAll)\n\n    this.$selectItem.each((i, el) => {\n      $(el).closest('tr')[$(el).prop('checked') ? 'addClass' : 'removeClass']('selected')\n    })\n  }\n\n  updateRows () {\n    this.$selectItem.each((i, el) => {\n      this.data[$(el).data('index')][this.header.stateField] = $(el).prop('checked')\n    })\n  }\n\n  resetRows () {\n    for (const row of this.data) {\n      this.$selectAll.prop('checked', false)\n      this.$selectItem.prop('checked', false)\n      if (this.header.stateField) {\n        row[this.header.stateField] = false\n      }\n    }\n    this.initHiddenRows()\n  }\n\n  trigger (_name, ...args) {\n    const name = `${_name}.bs.table`\n\n    this.options[BootstrapTable.EVENTS[name]](...[...args, this])\n    this.$el.trigger($.Event(name, { sender: this }), args)\n\n    this.options.onAll(name, ...[...args, this])\n    this.$el.trigger($.Event('all.bs.table', { sender: this }), [name, args])\n  }\n\n  resetHeader () {\n    // fix #61: the hidden table reset header bug.\n    // fix bug: get $el.css('width') error sometime (height = 500)\n    clearTimeout(this.timeoutId_)\n    this.timeoutId_ = setTimeout(() => this.fitHeader(), this.$el.is(':hidden') ? 100 : 0)\n  }\n\n  fitHeader () {\n    if (this.$el.is(':hidden')) {\n      this.timeoutId_ = setTimeout(() => this.fitHeader(), 100)\n      return\n    }\n\n    const fixedBody = this.$tableBody.get(0)\n    const scrollWidth = this.hasScrollBar &&\n    fixedBody.scrollHeight > fixedBody.clientHeight + this.$header.outerHeight() ?\n      Utils.getScrollBarWidth() : 0\n\n    this.$el.css('margin-top', -this.$header.outerHeight())\n\n    const focused = this.$tableHeader.find(':focus')\n\n    if (focused.length > 0) {\n      const $th = focused.parents('th')\n\n      if ($th.length > 0) {\n        const dataField = $th.attr('data-field')\n\n        if (dataField !== undefined) {\n          const $headerTh = this.$header.find(`[data-field='${dataField}']`)\n\n          if ($headerTh.length > 0) {\n            $headerTh.find(':input').addClass('focus-temp')\n          }\n        }\n      }\n    }\n\n    this.$header_ = this.$header.clone(true, true)\n    this.$selectAll_ = this.$header_.find('[name=\"btSelectAll\"]')\n    this.$tableHeader\n      .css('margin-right', scrollWidth)\n      .find('table').css('width', this.$el.outerWidth())\n      .html('').attr('class', this.$el.attr('class'))\n      .append(this.$header_)\n\n    this.$tableLoading.css('width', this.$el.outerWidth())\n\n    const focusedTemp = $('.focus-temp:visible:eq(0)')\n\n    if (focusedTemp.length > 0) {\n      focusedTemp.focus()\n      this.$header.find('.focus-temp').removeClass('focus-temp')\n    }\n\n    // fix bug: $.data() is not working as expected after $.append()\n    this.$header.find('th[data-field]').each((i, el) => {\n      this.$header_.find(Utils.sprintf('th[data-field=\"%s\"]', $(el).data('field'))).data($(el).data())\n    })\n\n    const visibleFields = this.getVisibleFields()\n    const $ths = this.$header_.find('th')\n    let $tr = this.$body.find('>tr:not(.no-records-found,.virtual-scroll-top)').eq(0)\n\n    while ($tr.length && $tr.find('>td[colspan]:not([colspan=\"1\"])').length) {\n      $tr = $tr.next()\n    }\n\n    const trLength = $tr.find('> *').length\n\n    $tr.find('> *').each((i, el) => {\n      const $this = $(el)\n\n      if (Utils.hasDetailViewIcon(this.options)) {\n        if (\n          i === 0 && this.options.detailViewAlign !== 'right' ||\n          i === trLength - 1 && this.options.detailViewAlign === 'right'\n        ) {\n          const $thDetail = $ths.filter('.detail')\n          const zoomWidth = $thDetail.innerWidth() - $thDetail.find('.fht-cell').width()\n\n          $thDetail.find('.fht-cell').width($this.innerWidth() - zoomWidth)\n          return\n        }\n      }\n\n      const index = i - Utils.getDetailViewIndexOffset(this.options)\n      let $th = this.$header_.find(Utils.sprintf('th[data-field=\"%s\"]', visibleFields[index]))\n\n      if ($th.length > 1) {\n        $th = $($ths[$this[0].cellIndex])\n      }\n\n      const zoomWidth = $th.innerWidth() - $th.find('.fht-cell').width()\n\n      $th.find('.fht-cell').width($this.innerWidth() - zoomWidth)\n    })\n\n    this.horizontalScroll()\n    this.trigger('post-header')\n  }\n\n  initFooter () {\n    if (!this.options.showFooter || this.options.cardView) { // do nothing\n      return\n    }\n\n    const data = this.getData()\n    const html = []\n    let detailTemplate = ''\n\n    if (Utils.hasDetailViewIcon(this.options)) {\n      detailTemplate = '<th class=\"detail\"><div class=\"th-inner\"></div><div class=\"fht-cell\"></div></th>'\n    }\n\n    if (detailTemplate && this.options.detailViewAlign !== 'right') {\n      html.push(detailTemplate)\n    }\n\n    for (const column of this.columns) {\n      let falign = ''\n      let valign = ''\n      const csses = []\n      let style = {}\n      let class_ = Utils.sprintf(' class=\"%s\"', column['class'])\n\n      if (\n        !column.visible ||\n        this.footerData && this.footerData.length > 0 && !(column.field in this.footerData[0])\n      ) {\n        continue\n      }\n\n      if (this.options.cardView && !column.cardVisible) {\n        return\n      }\n\n      falign = Utils.sprintf('text-align: %s; ', column.falign ? column.falign : column.align)\n      valign = Utils.sprintf('vertical-align: %s; ', column.valign)\n\n      style = Utils.calculateObjectValue(null, this.options.footerStyle, [column])\n\n      if (style && style.css) {\n        for (const [key, value] of Object.entries(style.css)) {\n          csses.push(`${key}: ${value}`)\n        }\n      }\n      if (style && style.classes) {\n        class_ = Utils.sprintf(' class=\"%s\"', column['class'] ?\n          [column['class'], style.classes].join(' ') : style.classes)\n      }\n\n      html.push('<th', class_, Utils.sprintf(' style=\"%s\"', falign + valign + csses.concat().join('; ')))\n      let colspan = 0\n\n      if (this.footerData && this.footerData.length > 0) {\n        colspan = this.footerData[0][`_${column.field}_colspan`] || 0\n      }\n      if (colspan) {\n        html.push(` colspan=\"${colspan}\" `)\n      }\n\n      html.push('>')\n      html.push('<div class=\"th-inner\">')\n\n      let value = ''\n\n      if (this.footerData && this.footerData.length > 0) {\n        value = this.footerData[0][column.field] || ''\n      }\n      html.push(Utils.calculateObjectValue(column, column.footerFormatter,\n        [data, value], value))\n\n      html.push('</div>')\n      html.push('<div class=\"fht-cell\"></div>')\n      html.push('</div>')\n      html.push('</th>')\n    }\n\n    if (detailTemplate && this.options.detailViewAlign === 'right') {\n      html.push(detailTemplate)\n    }\n\n    if (!this.options.height && !this.$tableFooter.length) {\n      this.$el.append('<tfoot><tr></tr></tfoot>')\n      this.$tableFooter = this.$el.find('tfoot')\n    }\n\n    if (!this.$tableFooter.find('tr').length) {\n      this.$tableFooter.html('<table><thead><tr></tr></thead></table>')\n    }\n\n    this.$tableFooter.find('tr').html(html.join(''))\n\n    this.trigger('post-footer', this.$tableFooter)\n  }\n\n  fitFooter () {\n    if (this.$el.is(':hidden')) {\n      setTimeout(() => this.fitFooter(), 100)\n      return\n    }\n\n    const fixedBody = this.$tableBody.get(0)\n    const scrollWidth = this.hasScrollBar &&\n      fixedBody.scrollHeight > fixedBody.clientHeight + this.$header.outerHeight() ?\n      Utils.getScrollBarWidth() : 0\n\n    this.$tableFooter\n      .css('margin-right', scrollWidth)\n      .find('table').css('width', this.$el.outerWidth())\n      .attr('class', this.$el.attr('class'))\n\n    const $ths = this.$tableFooter.find('th')\n    let $tr = this.$body.find('>tr:first-child:not(.no-records-found)')\n\n    $ths.find('.fht-cell').width('auto')\n\n    while ($tr.length && $tr.find('>td[colspan]:not([colspan=\"1\"])').length) {\n      $tr = $tr.next()\n    }\n\n    const trLength = $tr.find('> *').length\n\n    $tr.find('> *').each((i, el) => {\n      const $this = $(el)\n\n      if (Utils.hasDetailViewIcon(this.options)) {\n        if (\n          i === 0 && this.options.detailViewAlign === 'left' ||\n          i === trLength - 1 && this.options.detailViewAlign === 'right'\n        ) {\n          const $thDetail = $ths.filter('.detail')\n          const zoomWidth = $thDetail.innerWidth() - $thDetail.find('.fht-cell').width()\n\n          $thDetail.find('.fht-cell').width($this.innerWidth() - zoomWidth)\n          return\n        }\n      }\n\n      const $th = $ths.eq(i)\n      const zoomWidth = $th.innerWidth() - $th.find('.fht-cell').width()\n\n      $th.find('.fht-cell').width($this.innerWidth() - zoomWidth)\n    })\n\n    this.horizontalScroll()\n  }\n\n  horizontalScroll () {\n    // horizontal scroll event\n    // TODO: it's probably better improving the layout than binding to scroll event\n    this.$tableBody.off('scroll').on('scroll', () => {\n      const scrollLeft = this.$tableBody.scrollLeft()\n\n      if (this.options.showHeader && this.options.height) {\n        this.$tableHeader.scrollLeft(scrollLeft)\n      }\n\n      if (this.options.showFooter && !this.options.cardView) {\n        this.$tableFooter.scrollLeft(scrollLeft)\n      }\n\n      this.trigger('scroll-body', this.$tableBody)\n    })\n  }\n\n  getVisibleFields () {\n    const visibleFields = []\n\n    for (const field of this.header.fields) {\n      const column = this.columns[this.fieldsColumnsIndex[field]]\n\n      if (!column || !column.visible || this.options.cardView && !column.cardVisible) {\n        continue\n      }\n      visibleFields.push(field)\n    }\n    return visibleFields\n  }\n\n  initHiddenRows () {\n    this.hiddenRows = []\n  }\n\n  // PUBLIC FUNCTION DEFINITION\n  // =======================\n\n  getOptions () {\n    // deep copy and remove data\n    const options = Utils.extend({}, this.options)\n\n    delete options.data\n    return Utils.extend(true, {}, options)\n  }\n\n  refreshOptions (options) {\n    // If the objects are equivalent then avoid the call of destroy / init methods\n    if (Utils.compareObjects(this.options, options, true)) {\n      return\n    }\n    this.options = Utils.extend(this.options, options)\n    this.trigger('refresh-options', this.options)\n    this.destroy()\n    this.init()\n  }\n\n  getData (params) {\n    let data = this.options.data\n\n    if (\n      (\n        this.searchText ||\n        this.options.customSearch ||\n        this.options.sortName !== undefined ||\n        this.enableCustomSort || // Fix #4616: this.enableCustomSort is for extensions\n        !Utils.isEmptyObject(this.filterColumns) ||\n        typeof this.options.filterOptions.filterAlgorithm === 'function' ||\n        !Utils.isEmptyObject(this.filterColumnsPartial)\n      ) && (!params || !params.unfiltered)\n    ) {\n      data = this.data\n    }\n\n    if (params && !params.includeHiddenRows) {\n      const hiddenRows = this.getHiddenRows()\n\n      data = data.filter(row => Utils.findIndex(hiddenRows, row) === -1)\n    }\n\n    if (params && params.useCurrentPage) {\n      data = data.slice(this.pageFrom - 1, this.pageTo)\n    }\n\n    if (params && params.formatted) {\n      data.forEach(row => {\n        for (const [key, value] of Object.entries(row)) {\n          const column = this.columns[this.fieldsColumnsIndex[key]]\n\n          if (!column) {\n            return\n          }\n\n          row[key] = Utils.calculateObjectValue(column, this.header.formatters[column.fieldIndex], [value, row, row.index, column.field], value)\n        }\n      })\n    }\n\n    return data\n  }\n\n  getSelections () {\n    return (this.options.maintainMetaData ? this.options.data : this.data)\n      .filter(row => row[this.header.stateField] === true)\n  }\n\n  load (_data) {\n    let fixedScroll = false\n    let data = _data\n\n    // #431: support pagination\n    if (this.options.pagination && this.options.sidePagination === 'server') {\n      this.options.totalRows = data[this.options.totalField]\n      this.options.totalNotFiltered = data[this.options.totalNotFilteredField]\n      this.footerData = data[this.options.footerField] ? [data[this.options.footerField]] : undefined\n    }\n\n    fixedScroll = data.fixedScroll\n    data = Array.isArray(data) ? data : data[this.options.dataField]\n\n    this.initData(data)\n    this.initSearch()\n    this.initPagination()\n    this.initBody(fixedScroll)\n  }\n\n  append (data) {\n    this.initData(data, 'append')\n    this.initSearch()\n    this.initPagination()\n    this.initSort()\n    this.initBody(true)\n  }\n\n  prepend (data) {\n    this.initData(data, 'prepend')\n    this.initSearch()\n    this.initPagination()\n    this.initSort()\n    this.initBody(true)\n  }\n\n  remove (params) {\n    let removed = 0\n\n    for (let i = this.options.data.length - 1; i >= 0; i--) {\n\n      const row = this.options.data[i]\n      const value = Utils.getItemField(row, params.field, this.options.escape, row.escape)\n\n      if (value === undefined && params.field !== '$index') {\n        continue\n      }\n\n      if (\n        !row.hasOwnProperty(params.field) &&\n        params.field === '$index' &&\n        params.values.includes(i) ||\n        params.values.includes(value)\n      ) {\n        removed++\n\n        this.options.data.splice(i, 1)\n      }\n    }\n\n    if (!removed) {\n      return\n    }\n\n    if (this.options.sidePagination === 'server') {\n      this.options.totalRows -= removed\n      this.data = [...this.options.data]\n    }\n\n    this.initSearch()\n    this.initPagination()\n    this.initSort()\n    this.initBody(true)\n  }\n\n  removeAll () {\n    if (this.options.data.length > 0) {\n      this.options.data.splice(0, this.options.data.length)\n      this.initSearch()\n      this.initPagination()\n      this.initBody(true)\n    }\n  }\n\n  insertRow (params) {\n    if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n      return\n    }\n    this.options.data.splice(params.index, 0, params.row)\n    this.initSearch()\n    this.initPagination()\n    this.initSort()\n    this.initBody(true)\n  }\n\n  updateRow (params) {\n    const allParams = Array.isArray(params) ? params : [params]\n\n    for (const params of allParams) {\n      if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n        continue\n      }\n\n      if (params.hasOwnProperty('replace') && params.replace) {\n        this.options.data[params.index] = params.row\n      } else {\n        Utils.extend(this.options.data[params.index], params.row)\n      }\n    }\n\n    this.initSearch()\n    this.initPagination()\n    this.initSort()\n    this.initBody(true)\n  }\n\n  getRowByUniqueId (_id) {\n    const uniqueId = this.options.uniqueId\n    const len = this.options.data.length\n    let id = _id\n    let dataRow = null\n    let i\n    let row\n\n    for (i = len - 1; i >= 0; i--) {\n      row = this.options.data[i]\n      const rowUniqueId = Utils.getItemField(row, uniqueId, this.options.escape, row.escape)\n\n      if (rowUniqueId === undefined) {\n        continue\n      }\n\n      if (typeof rowUniqueId === 'string') {\n        id = id.toString()\n      } else if (typeof rowUniqueId === 'number') {\n        if (Number(rowUniqueId) === rowUniqueId && rowUniqueId % 1 === 0) {\n          id = parseInt(id, 10)\n        } else if (rowUniqueId === Number(rowUniqueId) && rowUniqueId !== 0) {\n          id = parseFloat(id)\n        }\n      }\n\n      if (rowUniqueId === id) {\n        dataRow = row\n        break\n      }\n    }\n\n    return dataRow\n  }\n\n  updateByUniqueId (params) {\n    const allParams = Array.isArray(params) ? params : [params]\n    let updatedUid = null\n\n    for (const params of allParams) {\n      if (!params.hasOwnProperty('id') || !params.hasOwnProperty('row')) {\n        continue\n      }\n\n      const rowId = this.options.data.indexOf(this.getRowByUniqueId(params.id))\n\n      if (rowId === -1) {\n        continue\n      }\n\n      if (params.hasOwnProperty('replace') && params.replace) {\n        this.options.data[rowId] = params.row\n      } else {\n        Utils.extend(this.options.data[rowId], params.row)\n      }\n      updatedUid = params.id\n    }\n\n    this.initSearch()\n    this.initPagination()\n    this.initSort()\n    this.initBody(true, updatedUid)\n  }\n\n  removeByUniqueId (id) {\n    const len = this.options.data.length\n    const row = this.getRowByUniqueId(id)\n\n    if (row) {\n      this.options.data.splice(this.options.data.indexOf(row), 1)\n    }\n\n    if (len === this.options.data.length) {\n      return\n    }\n\n    if (this.options.sidePagination === 'server') {\n      this.options.totalRows -= 1\n      this.data = [...this.options.data]\n    }\n\n    this.initSearch()\n    this.initPagination()\n    this.initBody(true)\n  }\n\n  _updateCellOnly (field, index) {\n    const rowHtml = this.initRow(this.options.data[index], index)\n    let fieldIndex = this.getVisibleFields().indexOf(field)\n\n    if (fieldIndex === -1) {\n      return\n    }\n\n    fieldIndex += Utils.getDetailViewIndexOffset(this.options)\n\n    this.$body.find(`>tr[data-index=${index}]`)\n      .find(`>td:eq(${fieldIndex})`)\n      .replaceWith($(rowHtml).find(`>td:eq(${fieldIndex})`))\n\n    this.initBodyEvent()\n    this.initFooter()\n    this.resetView()\n    this.updateSelected()\n  }\n\n  updateCell (params) {\n    if (!params.hasOwnProperty('index') ||\n      !params.hasOwnProperty('field') ||\n      !params.hasOwnProperty('value')) {\n      return\n    }\n    this.options.data[params.index][params.field] = params.value\n\n    if (params.reinit === false) {\n      this._updateCellOnly(params.field, params.index)\n      return\n    }\n    this.initSort()\n    this.initBody(true)\n  }\n\n  updateCellByUniqueId (params) {\n    const allParams = Array.isArray(params) ? params : [params]\n\n    allParams.forEach(({ id, field, value }) => {\n      const index = this.options.data.indexOf(this.getRowByUniqueId(id))\n\n      if (index === -1) {\n        return\n      }\n      this.options.data[index][field] = value\n    })\n\n    if (params.reinit === false) {\n      this._updateCellOnly(params.field,\n        this.options.data.indexOf(this.getRowByUniqueId(params.id)))\n      return\n    }\n    this.initSort()\n    this.initBody(true)\n  }\n\n  showRow (params) {\n    this._toggleRow(params, true)\n  }\n\n  hideRow (params) {\n    this._toggleRow(params, false)\n  }\n\n  _toggleRow (params, visible) {\n    let row\n\n    if (params.hasOwnProperty('index')) {\n      row = this.getData()[params.index]\n    } else if (params.hasOwnProperty('uniqueId')) {\n      row = this.getRowByUniqueId(params.uniqueId)\n    }\n\n    if (!row) {\n      return\n    }\n\n    const index = Utils.findIndex(this.hiddenRows, row)\n\n    if (!visible && index === -1) {\n      this.hiddenRows.push(row)\n    } else if (visible && index > -1) {\n      this.hiddenRows.splice(index, 1)\n    }\n\n    this.initBody(true)\n    this.initPagination()\n  }\n\n  getHiddenRows (show) {\n    if (show) {\n      this.initHiddenRows()\n      this.initBody(true)\n      this.initPagination()\n      return\n    }\n    const data = this.getData()\n    const rows = []\n\n    for (const row of data) {\n      if (this.hiddenRows.includes(row)) {\n        rows.push(row)\n      }\n    }\n    this.hiddenRows = rows\n    return rows\n  }\n\n  showColumn (field) {\n    const fields = Array.isArray(field) ? field : [field]\n\n    fields.forEach(field => {\n      this._toggleColumn(this.fieldsColumnsIndex[field], true, true)\n    })\n  }\n\n  hideColumn (field) {\n    const fields = Array.isArray(field) ? field : [field]\n\n    fields.forEach(field => {\n      this._toggleColumn(this.fieldsColumnsIndex[field], false, true)\n    })\n  }\n\n  _toggleColumn (index, checked, needUpdate) {\n    if (index === -1 || this.columns[index].visible === checked) {\n      return\n    }\n    this.columns[index].visible = checked\n    this.initHeader()\n    this.initSearch()\n    this.initPagination()\n    this.initBody()\n\n    if (this.options.showColumns) {\n      const $items = this.$toolbar.find('.keep-open input:not(\".toggle-all\")').prop('disabled', false)\n\n      if (needUpdate) {\n        $items.filter(Utils.sprintf('[value=\"%s\"]', index)).prop('checked', checked)\n      }\n\n      if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n        $items.filter(':checked').prop('disabled', true)\n      }\n    }\n  }\n\n  getVisibleColumns () {\n    return this.columns.filter(column => column.visible && !this.isSelectionColumn(column))\n  }\n\n  getHiddenColumns () {\n    return this.columns.filter(({ visible }) => !visible)\n  }\n\n  isSelectionColumn (column) {\n    return column.radio || column.checkbox\n  }\n\n  showAllColumns () {\n    this._toggleAllColumns(true)\n  }\n\n  hideAllColumns () {\n    this._toggleAllColumns(false)\n  }\n\n  _toggleAllColumns (visible) {\n    for (const column of this.columns.slice().reverse()) {\n      if (column.switchable) {\n        if (\n          !visible &&\n          this.options.showColumns &&\n          this.getVisibleColumns().filter(it => it.switchable).length === this.options.minimumCountColumns\n        ) {\n          continue\n        }\n        column.visible = visible\n      }\n    }\n\n    this.initHeader()\n    this.initSearch()\n    this.initPagination()\n    this.initBody()\n    if (this.options.showColumns) {\n      const $items = this.$toolbar.find('.keep-open input[type=\"checkbox\"]:not(\".toggle-all\")').prop('disabled', false)\n\n      if (visible) {\n        $items.prop('checked', visible)\n      } else {\n        $items.get().reverse().forEach(item => {\n          if ($items.filter(':checked').length > this.options.minimumCountColumns) {\n            $(item).prop('checked', visible)\n          }\n        })\n      }\n\n      if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n        $items.filter(':checked').prop('disabled', true)\n      }\n    }\n  }\n\n  mergeCells (options) {\n    const row = options.index\n    let col = this.getVisibleFields().indexOf(options.field)\n    const rowspan = options.rowspan || 1\n    const colspan = options.colspan || 1\n    let i\n    let j\n    const $tr = this.$body.find('>tr[data-index]')\n\n    col += Utils.getDetailViewIndexOffset(this.options)\n\n    const $td = $tr.eq(row).find('>td').eq(col)\n\n    if (row < 0 || col < 0 || row >= this.data.length) {\n      return\n    }\n\n    for (i = row; i < row + rowspan; i++) {\n      for (j = col; j < col + colspan; j++) {\n        $tr.eq(i).find('>td').eq(j).hide()\n      }\n    }\n\n    $td.attr('rowspan', rowspan).attr('colspan', colspan).show()\n  }\n\n  checkAll () {\n    this._toggleCheckAll(true)\n  }\n\n  uncheckAll () {\n    this._toggleCheckAll(false)\n  }\n\n  _toggleCheckAll (checked) {\n    const rowsBefore = this.getSelections()\n\n    this.$selectAll.add(this.$selectAll_).prop('checked', checked)\n    this.$selectItem.filter(':enabled').prop('checked', checked)\n    this.updateRows()\n    this.updateSelected()\n\n    const rowsAfter = this.getSelections()\n\n    if (checked) {\n      this.trigger('check-all', rowsAfter, rowsBefore)\n      return\n    }\n\n    this.trigger('uncheck-all', rowsAfter, rowsBefore)\n  }\n\n  checkInvert () {\n    const $items = this.$selectItem.filter(':enabled')\n    let checked = $items.filter(':checked')\n\n    $items.each((i, el) => {\n      $(el).prop('checked', !$(el).prop('checked'))\n    })\n    this.updateRows()\n    this.updateSelected()\n    this.trigger('uncheck-some', checked)\n    checked = this.getSelections()\n    this.trigger('check-some', checked)\n  }\n\n  check (index) {\n    this._toggleCheck(true, index)\n  }\n\n  uncheck (index) {\n    this._toggleCheck(false, index)\n  }\n\n  _toggleCheck (checked, index) {\n    const $el = this.$selectItem.filter(`[data-index=\"${index}\"]`)\n    const row = this.data[index]\n\n    if (\n      $el.is(':radio') ||\n      this.options.singleSelect ||\n      this.options.multipleSelectRow &&\n      !this.multipleSelectRowCtrlKey &&\n      !this.multipleSelectRowShiftKey\n    ) {\n      for (const r of this.options.data) {\n        r[this.header.stateField] = false\n      }\n      this.$selectItem.filter(':checked').not($el).prop('checked', false)\n    }\n\n    row[this.header.stateField] = checked\n\n    if (this.options.multipleSelectRow) {\n      if (this.multipleSelectRowShiftKey && this.multipleSelectRowLastSelectedIndex >= 0) {\n        const [fromIndex, toIndex] = this.multipleSelectRowLastSelectedIndex < index ?\n          [this.multipleSelectRowLastSelectedIndex, index] : [index, this.multipleSelectRowLastSelectedIndex]\n\n        for (let i = fromIndex + 1; i < toIndex; i++) {\n          this.data[i][this.header.stateField] = true\n          this.$selectItem.filter(`[data-index=\"${i}\"]`).prop('checked', true)\n        }\n      }\n\n      this.multipleSelectRowCtrlKey = false\n      this.multipleSelectRowShiftKey = false\n      this.multipleSelectRowLastSelectedIndex = checked ? index : -1\n    }\n\n    $el.prop('checked', checked)\n    this.updateSelected()\n    this.trigger(checked ? 'check' : 'uncheck', this.data[index], $el)\n  }\n\n  checkBy (obj) {\n    this._toggleCheckBy(true, obj)\n  }\n\n  uncheckBy (obj) {\n    this._toggleCheckBy(false, obj)\n  }\n\n  _toggleCheckBy (checked, obj) {\n    if (!obj.hasOwnProperty('field') || !obj.hasOwnProperty('values')) {\n      return\n    }\n\n    const rows = []\n\n    this.data.forEach((row, i) => {\n      if (!row.hasOwnProperty(obj.field)) {\n        return false\n      }\n      if (obj.values.includes(row[obj.field])) {\n        let $el = this.$selectItem.filter(':enabled')\n          .filter(Utils.sprintf('[data-index=\"%s\"]', i))\n        const onlyCurrentPage = obj.hasOwnProperty('onlyCurrentPage') ? obj.onlyCurrentPage : false\n\n        $el = checked ? $el.not(':checked') : $el.filter(':checked')\n\n        if (!$el.length && onlyCurrentPage) {\n          return\n        }\n\n        $el.prop('checked', checked)\n        row[this.header.stateField] = checked\n        rows.push(row)\n        this.trigger(checked ? 'check' : 'uncheck', row, $el)\n      }\n    })\n    this.updateSelected()\n    this.trigger(checked ? 'check-some' : 'uncheck-some', rows)\n  }\n\n  refresh (params) {\n    if (params && params.url) {\n      this.options.url = params.url\n    }\n    if (params && params.pageNumber) {\n      this.options.pageNumber = params.pageNumber\n    }\n    if (params && params.pageSize) {\n      this.options.pageSize = params.pageSize\n    }\n    this.trigger('refresh', this.initServer(params && params.silent,\n      params && params.query, params && params.url))\n  }\n\n  destroy () {\n    this.$el.insertBefore(this.$container)\n    $(this.options.toolbar).insertBefore(this.$el)\n    this.$container.next().remove()\n    this.$container.remove()\n    this.$el.html(this.$el_.html())\n      .css('margin-top', '0')\n      .attr('class', this.$el_.attr('class') || '') // reset the class\n\n    const resizeEvent = Utils.getEventName('resize.bootstrap-table', this.$el.attr('id'))\n\n    $(window).off(resizeEvent)\n  }\n\n  resetView (params) {\n    let padding = 0\n\n    if (params && params.height) {\n      this.options.height = params.height\n    }\n\n    this.$tableContainer.toggleClass('has-card-view', this.options.cardView)\n\n    if (this.options.height) {\n      const fixedBody = this.$tableBody.get(0)\n\n      this.hasScrollBar = fixedBody.scrollWidth > fixedBody.clientWidth\n    }\n\n    if (!this.options.cardView && this.options.showHeader && this.options.height) {\n      this.$tableHeader.show()\n      this.resetHeader()\n      padding += this.$header.outerHeight(true) + 1\n    } else {\n      this.$tableHeader.hide()\n      this.trigger('post-header')\n    }\n\n    if (!this.options.cardView && this.options.showFooter) {\n      this.$tableFooter.show()\n      this.fitFooter()\n      if (this.options.height) {\n        padding += this.$tableFooter.outerHeight(true)\n      }\n    }\n\n    if (this.$container.hasClass('fullscreen')) {\n      this.$tableContainer.css('height', '')\n      this.$tableContainer.css('width', '')\n    } else if (this.options.height) {\n      if (this.$tableBorder) {\n        this.$tableBorder.css('width', '')\n        this.$tableBorder.css('height', '')\n      }\n\n      const toolbarHeight = this.$toolbar.outerHeight(true)\n      const paginationHeight = this.$pagination.outerHeight(true)\n      const height = this.options.height - toolbarHeight - paginationHeight\n      const $bodyTable = this.$tableBody.find('>table')\n      const tableHeight = $bodyTable.outerHeight()\n\n      this.$tableContainer.css('height', `${height}px`)\n\n      if (this.$tableBorder && $bodyTable.is(':visible')) {\n        let tableBorderHeight = height - tableHeight - 2\n\n        if (this.hasScrollBar) {\n          tableBorderHeight -= Utils.getScrollBarWidth()\n        }\n        this.$tableBorder.css('width', `${$bodyTable.outerWidth()}px`)\n        this.$tableBorder.css('height', `${tableBorderHeight}px`)\n      }\n    }\n\n    if (this.options.cardView) {\n      // remove the element css\n      this.$el.css('margin-top', '0')\n      this.$tableContainer.css('padding-bottom', '0')\n      this.$tableFooter.hide()\n    } else {\n      // Assign the correct sortable arrow\n      this.getCaret()\n      this.$tableContainer.css('padding-bottom', `${padding}px`)\n    }\n\n    this.trigger('reset-view')\n  }\n\n  showLoading () {\n    this.$tableLoading.toggleClass('open', true)\n\n    let fontSize = this.options.loadingFontSize\n\n    if (this.options.loadingFontSize === 'auto') {\n      fontSize = this.$tableLoading.width() * 0.04\n      fontSize = Math.max(12, fontSize)\n      fontSize = Math.min(32, fontSize)\n      fontSize = `${fontSize}px`\n    }\n\n    this.$tableLoading.find('.loading-text').css('font-size', fontSize)\n  }\n\n  hideLoading () {\n    this.$tableLoading.toggleClass('open', false)\n  }\n\n  togglePagination () {\n    this.options.pagination = !this.options.pagination\n\n    const icon = this.options.showButtonIcons ? this.options.pagination ? this.options.icons.paginationSwitchDown : this.options.icons.paginationSwitchUp : ''\n    const text = this.options.showButtonText ? this.options.pagination ? this.options.formatPaginationSwitchUp() : this.options.formatPaginationSwitchDown() : ''\n\n    this.$toolbar.find('button[name=\"paginationSwitch\"]')\n      .html(`${Utils.sprintf(this.constants.html.icon, this.options.iconsPrefix, icon)} ${text}`)\n    this.updatePagination()\n    this.trigger('toggle-pagination', this.options.pagination)\n  }\n\n  toggleFullscreen () {\n    this.$el.closest('.bootstrap-table').toggleClass('fullscreen')\n    this.resetView()\n  }\n\n  toggleView () {\n    this.options.cardView = !this.options.cardView\n    this.initHeader()\n\n    const icon = this.options.showButtonIcons ? this.options.cardView ? this.options.icons.toggleOn : this.options.icons.toggleOff : ''\n    const text = this.options.showButtonText ? this.options.cardView ? this.options.formatToggleOff() : this.options.formatToggleOn() : ''\n\n    this.$toolbar.find('button[name=\"toggle\"]')\n      .html(`${Utils.sprintf(this.constants.html.icon, this.options.iconsPrefix, icon)} ${text}`)\n      .attr('aria-label', text)\n      .attr('title', text)\n\n    this.initBody()\n    this.trigger('toggle', this.options.cardView)\n  }\n\n  resetSearch (text) {\n    const $search = Utils.getSearchInput(this)\n\n    const textToUse = text || ''\n\n    $search.val(textToUse)\n    this.searchText = textToUse\n    this.onSearch({ currentTarget: $search }, false)\n  }\n\n  filterBy (columns, options) {\n    this.filterOptions = Utils.isEmptyObject(options) ? this.options.filterOptions : Utils.extend(this.options.filterOptions, options)\n    this.filterColumns = Utils.isEmptyObject(columns) ? {} : columns\n    this.options.pageNumber = 1\n    this.initSearch()\n    this.updatePagination()\n  }\n\n  scrollTo (params) {\n    let options = { unit: 'px', value: 0 }\n\n    if (typeof params === 'object') {\n      options = Object.assign(options, params)\n    } else if (typeof params === 'string' && params === 'bottom') {\n      options.value = this.$tableBody[0].scrollHeight\n    } else if (typeof params === 'string' || typeof params === 'number') {\n      options.value = params\n    }\n\n    let scrollTo = options.value\n\n    if (options.unit === 'rows') {\n      scrollTo = 0\n      this.$body.find(`> tr:lt(${options.value})`).each((i, el) => {\n        scrollTo += $(el).outerHeight(true)\n      })\n    }\n\n    this.$tableBody.scrollTop(scrollTo)\n  }\n\n  getScrollPosition () {\n    return this.$tableBody.scrollTop()\n  }\n\n  selectPage (page) {\n    if (page > 0 && page <= this.options.totalPages) {\n      this.options.pageNumber = page\n      this.updatePagination()\n    }\n  }\n\n  prevPage () {\n    if (this.options.pageNumber > 1) {\n      this.options.pageNumber--\n      this.updatePagination()\n    }\n  }\n\n  nextPage () {\n    if (this.options.pageNumber < this.options.totalPages) {\n      this.options.pageNumber++\n      this.updatePagination()\n    }\n  }\n\n  toggleDetailView (index, _columnDetailFormatter) {\n    const $tr = this.$body.find(Utils.sprintf('> tr[data-index=\"%s\"]', index))\n\n    if ($tr.next().is('tr.detail-view')) {\n      this.collapseRow(index)\n    } else {\n      this.expandRow(index, _columnDetailFormatter)\n    }\n\n    this.resetView()\n  }\n\n  expandRow (index, _columnDetailFormatter) {\n    const row = this.data[index]\n    const $tr = this.$body.find(Utils.sprintf('> tr[data-index=\"%s\"][data-has-detail-view]', index))\n\n    if (this.options.detailViewIcon) {\n      $tr.find('a.detail-icon').html(Utils.sprintf(this.constants.html.icon, this.options.iconsPrefix, this.options.icons.detailClose))\n    }\n\n    if ($tr.next().is('tr.detail-view')) {\n      return\n    }\n\n    $tr.after(Utils.sprintf('<tr class=\"detail-view\"><td colspan=\"%s\"></td></tr>', $tr.children('td').length))\n\n    const $element = $tr.next().find('td')\n\n    const detailFormatter = _columnDetailFormatter || this.options.detailFormatter\n    const content = Utils.calculateObjectValue(this.options, detailFormatter, [index, row, $element], '')\n\n    if ($element.length === 1) {\n      $element.append(content)\n    }\n\n    this.trigger('expand-row', index, row, $element)\n  }\n\n  expandRowByUniqueId (uniqueId) {\n    const row = this.getRowByUniqueId(uniqueId)\n\n    if (!row) {\n      return\n    }\n\n    this.expandRow(this.data.indexOf(row))\n  }\n\n  collapseRow (index) {\n    const row = this.data[index]\n    const $tr = this.$body.find(Utils.sprintf('> tr[data-index=\"%s\"][data-has-detail-view]', index))\n\n    if (!$tr.next().is('tr.detail-view')) {\n      return\n    }\n\n    if (this.options.detailViewIcon) {\n      $tr.find('a.detail-icon').html(Utils.sprintf(this.constants.html.icon, this.options.iconsPrefix, this.options.icons.detailOpen))\n    }\n\n    this.trigger('collapse-row', index, row, $tr.next())\n    $tr.next().remove()\n  }\n\n  collapseRowByUniqueId (uniqueId) {\n    const row = this.getRowByUniqueId(uniqueId)\n\n    if (!row) {\n      return\n    }\n\n    this.collapseRow(this.data.indexOf(row))\n  }\n\n  expandAllRows () {\n    const trs = this.$body.find('> tr[data-index][data-has-detail-view]')\n\n    for (let i = 0; i < trs.length; i++) {\n      this.expandRow($(trs[i]).data('index'))\n    }\n  }\n\n  collapseAllRows () {\n    const trs = this.$body.find('> tr[data-index][data-has-detail-view]')\n\n    for (let i = 0; i < trs.length; i++) {\n      this.collapseRow($(trs[i]).data('index'))\n    }\n  }\n\n  updateColumnTitle (params) {\n    if (!params.hasOwnProperty('field') || !params.hasOwnProperty('title')) {\n      return\n    }\n\n    this.columns[this.fieldsColumnsIndex[params.field]].title =\n      this.options.escape && this.options.escapeTitle ? Utils.escapeHTML(params.title) : params.title\n\n    if (this.columns[this.fieldsColumnsIndex[params.field]].visible) {\n      this.$header.find('th[data-field]').each((i, el) => {\n        if ($(el).data('field') === params.field) {\n          $($(el).find('.th-inner')[0]).text(params.title)\n          return false\n        }\n      })\n\n      this.resetView()\n    }\n  }\n\n  updateFormatText (formatName, text) {\n    if (!/^format/.test(formatName) || !this.options[formatName]) {\n      return\n    }\n    if (typeof text === 'string') {\n      this.options[formatName] = () => text\n    } else if (typeof text === 'function') {\n      this.options[formatName] = text\n    }\n    this.initToolbar()\n    this.initPagination()\n    this.initBody()\n  }\n}\n\nBootstrapTable.VERSION = Constants.VERSION\nBootstrapTable.DEFAULTS = Constants.DEFAULTS\nBootstrapTable.LOCALES = Constants.LOCALES\nBootstrapTable.COLUMN_DEFAULTS = Constants.COLUMN_DEFAULTS\nBootstrapTable.METHODS = Constants.METHODS\nBootstrapTable.EVENTS = Constants.EVENTS\n\n// BOOTSTRAP TABLE PLUGIN DEFINITION\n// =======================\n\n$.BootstrapTable = BootstrapTable\n$.fn.bootstrapTable = function (option, ...args) {\n  let value\n\n  this.each((i, el) => {\n    let data = $(el).data('bootstrap.table')\n\n    if (typeof option === 'string') {\n      if (!Constants.METHODS.includes(option)) {\n        throw new Error(`Unknown method: ${option}`)\n      }\n\n      if (!data) {\n        return\n      }\n\n      value = data[option](...args)\n\n      if (option === 'destroy') {\n        $(el).removeData('bootstrap.table')\n      }\n      return\n    }\n\n    if (data) {\n      console.warn('You cannot initialize the table more than once!')\n      return\n    }\n\n    const options = Utils.extend(true, {}, BootstrapTable.DEFAULTS, $(el).data(),\n      typeof option === 'object' && option)\n\n    data = new $.BootstrapTable(el, options)\n    $(el).data('bootstrap.table', data)\n    data.init()\n  })\n\n  return typeof value === 'undefined' ? this : value\n}\n\n$.fn.bootstrapTable.Constructor = BootstrapTable\n$.fn.bootstrapTable.theme = Constants.THEME\n$.fn.bootstrapTable.VERSION = Constants.VERSION\n$.fn.bootstrapTable.defaults = BootstrapTable.DEFAULTS\n$.fn.bootstrapTable.columnDefaults = BootstrapTable.COLUMN_DEFAULTS\n$.fn.bootstrapTable.events = BootstrapTable.EVENTS\n$.fn.bootstrapTable.locales = BootstrapTable.LOCALES\n$.fn.bootstrapTable.methods = BootstrapTable.METHODS\n$.fn.bootstrapTable.utils = Utils\n\n// BOOTSTRAP TABLE INIT\n// =======================\n\n$(() => {\n  $('[data-toggle=\"table\"]').bootstrapTable()\n})\n\nexport default BootstrapTable\n", "//@ts-nocheck\n/**\n * @author zhixin wen <wenzhixin2010@gmail.com>\n * version: 1.21.1\n * https://github.com/wenzhixin/bootstrap-table/\n */\n\n//import * as Popper from '@popperjs/core'\n//import jQuery from 'jquery'\n//import * as bootstrap from 'bootstrap'\n//@ts-ignore\nimport Constants from 'bootstrap-table/src/constants/index.js';\n//@ts-ignore\nimport Utils from 'bootstrap-table/src/utils/index.js';\n//@ts-ignore\nimport VirtualScroll from 'bootstrap-table/src/virtual-scroll/index.js';\n\nimport BootstrapTableOriginal from 'bootstrap-table/src/bootstrap-table.js';\n\nclass BootstrapTable extends BootstrapTableOriginal {\n    constructor(el, options) {\n        super(el, options);\n        this.options = options;\n        this.$el = $(el);\n        this.$el_ = this.$el.clone();\n        this.timeoutId_ = 0;\n        this.timeoutFooter_ = 0;\n    }\n\n    init() {\n        this.initConstants();\n        this.initLocale();\n\n        if (this.options.alternativeContainer) {\n            this.initAlternativeContainer();\n        } else {\n            this.initContainer();\n        }\n        this.initTable();\n        this.initHeader();\n        this.initData();\n        this.initHiddenRows();\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n        this.initSearchText();\n        this.initServer();\n    }\n\n    initConstants() {\n        const opts = this.options;\n\n        this.constants = Constants.CONSTANTS;\n        this.constants.theme = $.fn.bootstrapTable.theme;\n        this.constants.dataToggle = this.constants.html.dataToggle || 'data-toggle';\n\n        // init iconsPrefix and icons\n        const iconsPrefix = Utils.getIconsPrefix($.fn.bootstrapTable.theme);\n        const icons = Utils.getIcons(iconsPrefix);\n\n        if (typeof opts.icons === 'string') {\n            opts.icons = Utils.calculateObjectValue(null, opts.icons);\n        }\n\n        opts.iconsPrefix = opts.iconsPrefix || $.fn.bootstrapTable.defaults.iconsPrefix || iconsPrefix;\n        opts.icons = Object.assign(icons, $.fn.bootstrapTable.defaults.icons, opts.icons);\n\n        // init buttons class\n        const buttonsPrefix = opts.buttonsPrefix ? `${opts.buttonsPrefix}-` : '';\n\n        this.constants.buttonsClass = [\n            opts.buttonsPrefix,\n            buttonsPrefix + opts.buttonsClass,\n            Utils.sprintf(`${buttonsPrefix}%s`, opts.iconSize)\n        ].join(' ').trim();\n\n        this.buttons = Utils.calculateObjectValue(this, opts.buttons, [], {});\n        if (typeof this.buttons !== 'object') {\n            this.buttons = {};\n        }\n    }\n\n    initLocale() {\n        if (this.options.locale) {\n            const locales = $.fn.bootstrapTable.locales;\n            const parts = this.options.locale.split(/-|_/);\n\n            parts[0] = parts[0].toLowerCase();\n            if (parts[1]) {\n                parts[1] = parts[1].toUpperCase();\n            }\n\n            let localesToExtend = {};\n\n            if (locales[this.options.locale]) {\n                localesToExtend = locales[this.options.locale];\n            } else if (locales[parts.join('-')]) {\n                localesToExtend = locales[parts.join('-')];\n            } else if (locales[parts[0]]) {\n                localesToExtend = locales[parts[0]];\n            }\n\n            for (const [formatName, func] of Object.entries(localesToExtend)) {\n                if (this.options[formatName] !== BootstrapTable.DEFAULTS[formatName]) {\n                    continue;\n                }\n\n                this.options[formatName] = func;\n            }\n        }\n    }\n\n    initAlternativeContainer() {\n\n        const topPagination = ['top', 'both'].includes(this.options.paginationVAlign) ?\n            '<div class=\"fixed-table-pagination\"></div>' : '';\n        const bottomPagination = ['bottom', 'both'].includes(this.options.paginationVAlign) ?\n            '<div class=\"fixed-table-pagination float-end\"  style=\"width:calc(100% - 390px);\"></div>' : '';\n\n        const loadingTemplate = $.fn.bootstrapTable.utils.calculateObjectValue(this.options,\n            this.options.loadingTemplate, [this.options.formatLoadingMessage()]);\n\n        this.$container = $(`\n          <div class=\"bootstrap-table ${this.constants.theme}\">\n          <div class=\"justify-content-between flex toolbar_parent\">\n            <div class=\"fixed-table-toolbar\"\"></div>\n            ${topPagination}\n          </div>\n          <div class=\"fixed-table-container\">\n          <div class=\"fixed-table-header\"><table></table></div>\n          <div class=\"fixed-table-body\">\n          <div class=\"fixed-table-loading\">\n          ${loadingTemplate}\n          </div>\n          </div>\n          <div class=\"fixed-table-footer\"></div>\n          </div>\n          ${bottomPagination}\n          </div>\n        `);\n\n        this.$container.insertAfter(this.$el);\n        this.$tableContainer = this.$container.find('.fixed-table-container');\n        this.$tableHeader = this.$container.find('.fixed-table-header');\n        this.$tableBody = this.$container.find('.fixed-table-body');\n        this.$tableLoading = this.$container.find('.fixed-table-loading');\n        this.$tableFooter = this.$el.find('tfoot');\n        // checking if custom table-toolbar exists or not\n        if (this.options.buttonsToolbar) {\n            this.$toolbar = $('body').find(this.options.buttonsToolbar);\n        } else {\n            this.$toolbar = this.$container.find('.fixed-table-toolbar');\n        }\n        this.$pagination = this.$container.find('.fixed-table-pagination');\n\n        this.$tableBody.append(this.$el);\n        this.$container.after('<div class=\"clearfix\"></div>');\n\n        this.$el.addClass(this.options.classes);\n        this.$tableLoading.addClass(this.options.classes);\n\n        if (this.options.height) {\n            this.$tableContainer.addClass('fixed-height');\n\n            if (this.options.showFooter) {\n                this.$tableContainer.addClass('has-footer');\n            }\n\n            if (this.options.classes.split(' ').includes('table-bordered')) {\n                this.$tableBody.append('<div class=\"fixed-table-border\"></div>');\n                this.$tableBorder = this.$tableBody.find('.fixed-table-border');\n                this.$tableLoading.addClass('fixed-table-border');\n            }\n\n            this.$tableFooter = this.$container.find('.fixed-table-footer');\n        }\n    }\n\n    initTable() {\n        const columns = [];\n\n        this.$header = this.$el.find('>thead');\n        if (!this.$header.length) {\n            this.$header = $(`<thead class=\"${this.options.theadClasses}\"></thead>`).appendTo(this.$el);\n        } else if (this.options.theadClasses) {\n            this.$header.addClass(this.options.theadClasses);\n        }\n\n        this._headerTrClasses = [];\n        this._headerTrStyles = [];\n        this.$header.find('tr').each((i, el) => {\n            const $tr = $(el);\n            const column = [];\n\n            $tr.find('th').each((i, el) => {\n                const $th = $(el);\n\n                // #2014: getFieldIndex and elsewhere assume this is string, causes issues if not\n                if (typeof $th.data('field') !== 'undefined') {\n                    $th.data('field', `${$th.data('field')}`);\n                }\n                column.push($.extend({}, {\n                    title: $th.html(),\n                    class: $th.attr('class'),\n                    titleTooltip: $th.attr('title'),\n                    rowspan: $th.attr('rowspan') ? +$th.attr('rowspan') : undefined,\n                    colspan: $th.attr('colspan') ? +$th.attr('colspan') : undefined\n                }, $th.data()));\n            });\n            columns.push(column);\n\n            if ($tr.attr('class')) {\n                this._headerTrClasses.push($tr.attr('class'));\n            }\n            if ($tr.attr('style')) {\n                this._headerTrStyles.push($tr.attr('style'));\n            }\n        });\n\n        if (!Array.isArray(this.options.columns[0])) {\n            this.options.columns = [this.options.columns];\n        }\n\n        this.options.columns = $.extend(true, [], columns, this.options.columns);\n        this.columns = [];\n        this.fieldsColumnsIndex = [];\n\n        Utils.setFieldIndex(this.options.columns);\n\n        this.options.columns.forEach((columns, i) => {\n            columns.forEach((_column, j) => {\n                const column = $.extend({}, BootstrapTable.COLUMN_DEFAULTS, _column, { passed: _column });\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    this.columns[column.fieldIndex] = column;\n                    this.fieldsColumnsIndex[column.field] = column.fieldIndex;\n                }\n\n                this.options.columns[i][j] = column;\n            });\n        });\n\n        // if options.data is setting, do not process tbody and tfoot data\n        if (!this.options.data.length) {\n            const htmlData = Utils.trToData(this.columns, this.$el.find('>tbody>tr'));\n\n            if (htmlData.length) {\n                this.options.data = htmlData;\n                this.fromHtml = true;\n            }\n        }\n\n        if (!(this.options.pagination && this.options.sidePagination !== 'server')) {\n            this.footerData = Utils.trToData(this.columns, this.$el.find('>tfoot>tr'));\n        }\n\n        if (this.footerData) {\n            this.$el.find('tfoot').html('<tr></tr>');\n        }\n\n        if (!this.options.showFooter || this.options.cardView) {\n            this.$tableFooter.hide();\n        } else {\n            this.$tableFooter.show();\n        }\n    }\n\n    initHeader() {\n        const visibleColumns = {};\n        const headerHtml = [];\n\n        this.header = {\n            fields: [],\n            styles: [],\n            classes: [],\n            formatters: [],\n            detailFormatters: [],\n            events: [],\n            sorters: [],\n            sortNames: [],\n            cellStyles: [],\n            searchables: []\n        };\n\n        Utils.updateFieldGroup(this.options.columns, this.columns);\n\n        this.options.columns.forEach((columns, i) => {\n            const html = [];\n\n            html.push(`<tr${Utils.sprintf(' class=\"%s\"', this._headerTrClasses[i])} ${Utils.sprintf(' style=\"%s\"', this._headerTrStyles[i])}>`);\n\n            let detailViewTemplate = '';\n\n            if (i === 0 && Utils.hasDetailViewIcon(this.options)) {\n                const rowspan = this.options.columns.length > 1 ?\n                    ` rowspan=\"${this.options.columns.length}\"` : '';\n\n                detailViewTemplate = `<th class=\"detail\"${rowspan}>\n          <div class=\"fht-cell\"></div>\n          </th>`;\n            }\n\n            if (detailViewTemplate && this.options.detailViewAlign !== 'right') {\n                html.push(detailViewTemplate);\n            }\n\n            columns.forEach((column, j) => {\n                const class_ = Utils.sprintf(' class=\"%s\"', column['class']);\n                const unitWidth = column.widthUnit;\n                const width = parseFloat(column.width);\n\n                const columnHalign = column.halign ? column.halign : column.align;\n                const halign = Utils.sprintf('text-align: %s; ', columnHalign);\n                const align = Utils.sprintf('text-align: %s; ', column.align);\n                let style = Utils.sprintf('vertical-align: %s; ', column.valign);\n\n                style += Utils.sprintf('width: %s; ', (column.checkbox || column.radio) && !width ?\n                    (!column.showSelectTitle ? '36px' : undefined) :\n                    (width ? width + unitWidth : undefined));\n\n                if (typeof column.fieldIndex === 'undefined' && !column.visible) {\n                    return;\n                }\n\n                const headerStyle = Utils.calculateObjectValue(null, this.options.headerStyle, [column]);\n                const csses = [];\n                let classes = '';\n\n                if (headerStyle && headerStyle.css) {\n                    for (const [key, value] of Object.entries(headerStyle.css)) {\n                        csses.push(`${key}: ${value}`);\n                    }\n                }\n                if (headerStyle && headerStyle.classes) {\n                    classes = Utils.sprintf(' class=\"%s\"', column['class'] ?\n                        [column['class'], headerStyle.classes].join(' ') : headerStyle.classes);\n                }\n\n                if (typeof column.fieldIndex !== 'undefined') {\n                    this.header.fields[column.fieldIndex] = column.field;\n                    this.header.styles[column.fieldIndex] = align + style;\n                    this.header.classes[column.fieldIndex] = class_;\n                    this.header.formatters[column.fieldIndex] = column.formatter;\n                    this.header.detailFormatters[column.fieldIndex] = column.detailFormatter;\n                    this.header.events[column.fieldIndex] = column.events;\n                    this.header.sorters[column.fieldIndex] = column.sorter;\n                    this.header.sortNames[column.fieldIndex] = column.sortName;\n                    this.header.cellStyles[column.fieldIndex] = column.cellStyle;\n                    this.header.searchables[column.fieldIndex] = column.searchable;\n\n                    if (!column.visible) {\n                        return;\n                    }\n\n                    if (this.options.cardView && (!column.cardVisible)) {\n                        return;\n                    }\n\n                    visibleColumns[column.field] = column;\n                }\n\n                html.push(`<th${Utils.sprintf(' title=\"%s\"', column.titleTooltip)}`,\n                    column.checkbox || column.radio ?\n                        Utils.sprintf(' class=\"bs-checkbox %s\"', column['class'] || '') :\n                        classes || class_,\n                    Utils.sprintf(' style=\"%s\"', halign + style + csses.join('; ')),\n                    Utils.sprintf(' rowspan=\"%s\"', column.rowspan),\n                    Utils.sprintf(' colspan=\"%s\"', column.colspan),\n                    Utils.sprintf(' data-field=\"%s\"', column.field),\n                    // If `column` is not the first element of `this.options.columns[0]`, then className 'data-not-first-th' should be added.\n                    j === 0 && i > 0 ? ' data-not-first-th' : '',\n                    '>');\n\n                html.push(Utils.sprintf('<div class=\"th-inner %s\">',\n                    this.options.sortable && column.sortable ? `sortable${columnHalign === 'center' ? ' sortable-center' : ''} both` : ''));\n\n                let text = this.options.escape ? Utils.escapeHTML(column.title) : column.title;\n\n                const title = text;\n\n                if (column.checkbox) {\n                    text = '';\n                    if (!this.options.singleSelect && this.options.checkboxHeader) {\n                        text = '<label><input name=\"btSelectAll\" type=\"checkbox\" /><span></span></label>';\n                    }\n                    this.header.stateField = column.field;\n                }\n                if (column.radio) {\n                    text = '';\n                    this.header.stateField = column.field;\n                }\n                if (!text && column.showSelectTitle) {\n                    text += title;\n                }\n\n                html.push(text);\n                html.push('</div>');\n                html.push('<div class=\"fht-cell\"></div>');\n                html.push('</div>');\n                html.push('</th>');\n            });\n\n            if (detailViewTemplate && this.options.detailViewAlign === 'right') {\n                html.push(detailViewTemplate);\n            }\n\n            html.push('</tr>');\n\n            if (html.length > 3) {\n                headerHtml.push(html.join(''));\n            }\n        });\n\n        this.$header.html(headerHtml.join(''));\n        this.$header.find('th[data-field]').each((i, el) => {\n            $(el).data(visibleColumns[$(el).data('field')]);\n        });\n        this.$container.off('click', '.th-inner').on('click', '.th-inner', e => {\n            const $this = $(e.currentTarget);\n\n            if (this.options.detailView && !$this.parent().hasClass('bs-checkbox')) {\n                if ($this.closest('.bootstrap-table')[0] !== this.$container[0]) {\n                    return false;\n                }\n            }\n\n            if (this.options.sortable && $this.parent().data().sortable) {\n                this.onSort(e);\n            }\n        });\n\n        const resizeEvent = Utils.getEventName('resize.bootstrap-table', this.$el.attr('id'));\n\n        $(window).off(resizeEvent);\n        if (!this.options.showHeader || this.options.cardView) {\n            this.$header.hide();\n            this.$tableHeader.hide();\n            this.$tableLoading.css('top', 0);\n        } else {\n            this.$header.show();\n            this.$tableHeader.show();\n            this.$tableLoading.css('top', this.$header.outerHeight() + 1);\n            // Assign the correct sortable arrow\n            this.getCaret();\n            $(window).on(resizeEvent, () => this.resetView());\n        }\n\n        this.$selectAll = this.$header.find('[name=\"btSelectAll\"]');\n        this.$selectAll.off('click').on('click', e => {\n            e.stopPropagation();\n            const checked = $(e.currentTarget).prop('checked');\n\n            this[checked ? 'checkAll' : 'uncheckAll']();\n            this.updateSelected();\n        });\n    }\n\n    initData(data, type) {\n        if (type === 'append') {\n            this.options.data = this.options.data.concat(data);\n        } else if (type === 'prepend') {\n            this.options.data = [].concat(data).concat(this.options.data);\n        } else {\n            data = data || Utils.deepCopy(this.options.data);\n            this.options.data = Array.isArray(data) ? data : data[this.options.dataField];\n        }\n\n        this.data = [...this.options.data];\n\n        if (this.options.sortReset) {\n            this.unsortedData = [...this.data];\n        }\n\n        if (this.options.sidePagination === 'server') {\n            return;\n        }\n        this.initSort();\n    }\n\n    initSort() {\n        let name = this.options.sortName;\n        const order = this.options.sortOrder === 'desc' ? -1 : 1;\n        const index = this.header.fields.indexOf(this.options.sortName);\n        let timeoutId = 0;\n\n        if (index !== -1) {\n            if (this.options.sortStable) {\n                this.data.forEach((row, i) => {\n                    if (!row.hasOwnProperty('_position')) {\n                        row._position = i;\n                    }\n                });\n            }\n\n            if (this.options.customSort) {\n                Utils.calculateObjectValue(this.options, this.options.customSort, [\n                    this.options.sortName,\n                    this.options.sortOrder,\n                    this.data\n                ]);\n            } else {\n                this.data.sort((a, b) => {\n                    if (this.header.sortNames[index]) {\n                        name = this.header.sortNames[index];\n                    }\n                    const aa = Utils.getItemField(a, name, this.options.escape);\n                    const bb = Utils.getItemField(b, name, this.options.escape);\n                    const value = Utils.calculateObjectValue(this.header, this.header.sorters[index], [aa, bb, a, b]);\n\n                    if (value !== undefined) {\n                        if (this.options.sortStable && value === 0) {\n                            return order * (a._position - b._position);\n                        }\n                        return order * value;\n                    }\n\n                    return Utils.sort(aa, bb, order, this.options, a._position, b._position);\n                });\n            }\n\n            if (this.options.sortClass !== undefined) {\n                clearTimeout(timeoutId);\n                timeoutId = setTimeout(() => {\n                    this.$el.removeClass(this.options.sortClass);\n                    const index = this.$header.find(`[data-field=\"${this.options.sortName}\"]`).index();\n\n                    this.$el.find(`tr td:nth-child(${index + 1})`).addClass(this.options.sortClass);\n                }, 250);\n            }\n        } else if (this.options.sortReset) {\n            this.data = [...this.unsortedData];\n        }\n    }\n\n    onSort({ type, currentTarget }) {\n        const $this = type === 'keypress' ? $(currentTarget) : $(currentTarget).parent();\n        const $this_ = this.$header.find('th').eq($this.index());\n\n        this.$header.add(this.$header_).find('span.order').remove();\n\n        if (this.options.sortName === $this.data('field')) {\n            const currentSortOrder = this.options.sortOrder;\n\n            if (currentSortOrder === undefined) {\n                this.options.sortOrder = 'asc';\n            } else if (currentSortOrder === 'asc') {\n                this.options.sortOrder = 'desc';\n            } else if (this.options.sortOrder === 'desc') {\n                this.options.sortOrder = this.options.sortReset ? undefined : 'asc';\n            }\n\n            if (this.options.sortOrder === undefined) {\n                this.options.sortName = undefined;\n            }\n        } else {\n            this.options.sortName = $this.data('field');\n            if (this.options.rememberOrder) {\n                this.options.sortOrder = $this.data('order') === 'asc' ? 'desc' : 'asc';\n            } else {\n                this.options.sortOrder = this.columns[this.fieldsColumnsIndex[$this.data('field')]].sortOrder ||\n                    this.columns[this.fieldsColumnsIndex[$this.data('field')]].order;\n            }\n        }\n        this.trigger('sort', this.options.sortName, this.options.sortOrder);\n\n        $this.add($this_).data('order', this.options.sortOrder);\n\n        // Assign the correct sortable arrow\n        this.getCaret();\n\n        if (this.options.sidePagination === 'server' && this.options.serverSort) {\n            this.options.pageNumber = 1;\n            this.initServer(this.options.silentSort);\n            return;\n        }\n\n        this.initSort();\n        this.initBody();\n    }\n\n    initToolbar() {\n        const opts = this.options;\n        let html = [];\n        let timeoutId = 0;\n        let $keepOpen;\n        let switchableCount = 0;\n\n        if (this.$toolbar.find('.bs-bars').children().length) {\n            $('body').append($(opts.toolbar));\n        }\n        this.$toolbar.html('');\n\n        if (typeof opts.toolbar === 'string' || typeof opts.toolbar === 'object') {\n            $(Utils.sprintf('<div class=\"bs-bars %s-%s\"></div>', this.constants.classes.pull, opts.toolbarAlign))\n                .appendTo(this.$toolbar)\n                .append($(opts.toolbar));\n        }\n\n        // showColumns, showToggle, showRefresh\n        html = [`<div class=\"${[\n            'columns',\n            `columns-${opts.buttonsAlign}`,\n            this.constants.classes.buttonsGroup,\n            `${this.constants.classes.pull}-${opts.buttonsAlign}`\n        ].join(' ')}\">`];\n\n        if (typeof opts.buttonsOrder === 'string') {\n            opts.buttonsOrder = opts.buttonsOrder.replace(/\\[|\\]| |'/g, '').split(',');\n        }\n\n        this.buttons = Object.assign(this.buttons, {\n            paginationSwitch: {\n                text: opts.pagination ? opts.formatPaginationSwitchUp() : opts.formatPaginationSwitchDown(),\n                icon: opts.pagination ? opts.icons.paginationSwitchDown : opts.icons.paginationSwitchUp,\n                render: false,\n                event: this.togglePagination,\n                attributes: {\n                    'aria-label': opts.formatPaginationSwitch(),\n                    title: opts.formatPaginationSwitch()\n                }\n            },\n            refresh: {\n                text: opts.formatRefresh(),\n                icon: opts.icons.refresh,\n                render: false,\n                event: this.refresh,\n                attributes: {\n                    'aria-label': opts.formatRefresh(),\n                    title: opts.formatRefresh()\n                }\n            },\n            toggle: {\n                text: opts.formatToggleOn(),\n                icon: opts.icons.toggleOff,\n                render: false,\n                event: this.toggleView,\n                attributes: {\n                    'aria-label': opts.formatToggleOn(),\n                    title: opts.formatToggleOn()\n                }\n            },\n            fullscreen: {\n                text: opts.formatFullscreen(),\n                icon: opts.icons.fullscreen,\n                render: false,\n                event: this.toggleFullscreen,\n                attributes: {\n                    'aria-label': opts.formatFullscreen(),\n                    title: opts.formatFullscreen()\n                }\n            },\n            columns: {\n                render: false,\n                html: (() => {\n                    const html = [];\n\n                    html.push(`<div class=\"keep-open ${this.constants.classes.buttonsDropdown}\" title=\"${opts.formatColumns()}\">\n            <button class=\"${this.constants.buttonsClass} dropdown-toggle\" type=\"button\" ${this.constants.dataToggle}=\"dropdown\"\n            aria-label=\"${opts.formatColumns()}\" title=\"${opts.formatColumns()}\">\n            ${opts.showButtonIcons ? Utils.sprintf(this.constants.html.icon, opts.iconsPrefix, opts.icons.columns) : ''}\n            ${opts.showButtonText ? opts.formatColumns() : ''}\n            ${this.constants.html.dropdownCaret}\n            </button>\n            ${this.constants.html.toolbarDropdown[0]}`);\n\n                    if (opts.showColumnsSearch) {\n                        html.push(\n                            Utils.sprintf(this.constants.html.toolbarDropdownItem,\n                                Utils.sprintf('<input type=\"text\" class=\"%s\" name=\"columnsSearch\" placeholder=\"%s\" autocomplete=\"off\">', this.constants.classes.input, opts.formatSearch())\n                            )\n                        );\n                        html.push(this.constants.html.toolbarDropdownSeparator);\n                    }\n\n                    if (opts.showColumnsToggleAll) {\n                        const allFieldsVisible = this.getVisibleColumns().length === this.columns.filter(column => !this.isSelectionColumn(column)).length;\n\n                        html.push(\n                            Utils.sprintf(this.constants.html.toolbarDropdownItem,\n                                Utils.sprintf('<input type=\"checkbox\" class=\"toggle-all\" %s> <span>%s</span>',\n                                    allFieldsVisible ? 'checked=\"checked\"' : '', opts.formatColumnsToggleAll())\n                            )\n                        );\n\n                        html.push(this.constants.html.toolbarDropdownSeparator);\n                    }\n\n                    let visibleColumns = 0;\n\n                    this.columns.forEach(column => {\n                        if (column.visible) {\n                            visibleColumns++;\n                        }\n                    });\n\n                    this.columns.forEach((column, i) => {\n                        if (this.isSelectionColumn(column)) {\n                            return;\n                        }\n\n                        if (opts.cardView && !column.cardVisible) {\n                            return;\n                        }\n\n                        const checked = column.visible ? ' checked=\"checked\"' : '';\n                        const disabled = (visibleColumns <= opts.minimumCountColumns) && checked ? ' disabled=\"disabled\"' : '';\n\n                        if (column.switchable) {\n                            html.push(Utils.sprintf(this.constants.html.toolbarDropdownItem,\n                                Utils.sprintf('<input type=\"checkbox\" data-field=\"%s\" value=\"%s\"%s%s> <span>%s</span>',\n                                    column.field, i, checked, disabled, column.title)));\n                            switchableCount++;\n                        }\n                    });\n                    html.push(this.constants.html.toolbarDropdown[1], '</div>');\n                    return html.join('');\n                })\n            }\n        });\n\n        const buttonsHtml = {};\n\n        for (const [buttonName, buttonConfig] of Object.entries(this.buttons)) {\n            let buttonHtml;\n\n            if (buttonConfig.hasOwnProperty('html')) {\n                if (typeof buttonConfig.html === 'function') {\n                    buttonHtml = buttonConfig.html();\n                } else if (typeof buttonConfig.html === 'string') {\n                    buttonHtml = buttonConfig.html;\n                }\n            } else {\n                buttonHtml = `<button class=\"${this.constants.buttonsClass}\" type=\"button\" name=\"${buttonName}\"`;\n\n                if (buttonConfig.hasOwnProperty('attributes')) {\n                    for (const [attributeName, value] of Object.entries(buttonConfig.attributes)) {\n                        buttonHtml += ` ${attributeName}=\"${value}\"`;\n                    }\n                }\n\n                buttonHtml += '>';\n\n                if (opts.showButtonIcons && buttonConfig.hasOwnProperty('icon')) {\n                    buttonHtml += `${Utils.sprintf(this.constants.html.icon, opts.iconsPrefix, buttonConfig.icon)} `;\n                }\n\n                if (opts.showButtonText && buttonConfig.hasOwnProperty('text')) {\n                    buttonHtml += buttonConfig.text;\n                }\n\n                buttonHtml += '</button>';\n            }\n\n            buttonsHtml[buttonName] = buttonHtml;\n            const optionName = `show${buttonName.charAt(0).toUpperCase()}${buttonName.substring(1)}`;\n            const showOption = opts[optionName];\n\n            if ((\n                !buttonConfig.hasOwnProperty('render') ||\n                buttonConfig.hasOwnProperty('render') &&\n                buttonConfig.render) &&\n                (showOption === undefined || showOption === true)\n            ) {\n                opts[optionName] = true;\n            }\n\n            if (!opts.buttonsOrder.includes(buttonName)) {\n                opts.buttonsOrder.push(buttonName);\n            }\n        }\n\n        // Adding the button html to the final toolbar html when the showOption is true\n        for (const button of opts.buttonsOrder) {\n            const showOption = opts[`show${button.charAt(0).toUpperCase()}${button.substring(1)}`];\n\n            if (showOption) {\n                html.push(buttonsHtml[button]);\n            }\n        }\n\n        html.push('</div>');\n\n        // Fix #188: this.showToolbar is for extensions\n        if (this.showToolbar || html.length > 2) {\n            this.$toolbar.append(html.join(''));\n        }\n\n        for (const [buttonName, buttonConfig] of Object.entries(this.buttons)) {\n            if (buttonConfig.hasOwnProperty('event')) {\n                if (typeof buttonConfig.event === 'function' || typeof buttonConfig.event === 'string') {\n                    const event = typeof buttonConfig.event === 'string' ? window[buttonConfig.event] : buttonConfig.event;\n\n                    this.$toolbar.find(`button[name=\"${buttonName}\"]`)\n                        .off('click')\n                        .on('click', () => event.call(this));\n                    continue;\n                }\n\n                for (const [eventType, eventFunction] of Object.entries(buttonConfig.event)) {\n                    const event = typeof eventFunction === 'string' ? window[eventFunction] : eventFunction;\n\n                    this.$toolbar.find(`button[name=\"${buttonName}\"]`)\n                        .off(eventType)\n                        .on(eventType, () => event.call(this));\n                }\n            }\n        }\n\n        if (opts.showColumns) {\n            $keepOpen = this.$toolbar.find('.keep-open');\n            const $checkboxes = $keepOpen.find('input[type=\"checkbox\"]:not(\".toggle-all\")');\n            const $toggleAll = $keepOpen.find('input[type=\"checkbox\"].toggle-all');\n\n            if (switchableCount <= opts.minimumCountColumns) {\n                $keepOpen.find('input').prop('disabled', true);\n            }\n\n            $keepOpen.find('li, label').off('click').on('click', e => {\n                e.stopImmediatePropagation();\n            });\n\n            $checkboxes.off('click').on('click', ({ currentTarget }) => {\n                const $this = $(currentTarget);\n\n                this._toggleColumn($this.val(), $this.prop('checked'), false);\n                this.trigger('column-switch', $this.data('field'), $this.prop('checked'));\n                $toggleAll.prop('checked', $checkboxes.filter(':checked').length === this.columns.filter(column => !this.isSelectionColumn(column)).length);\n            });\n\n            $toggleAll.off('click').on('click', ({ currentTarget }) => {\n                this._toggleAllColumns($(currentTarget).prop('checked'));\n                this.trigger('column-switch-all', $(currentTarget).prop('checked'));\n            });\n\n            if (opts.showColumnsSearch) {\n                const $columnsSearch = $keepOpen.find('[name=\"columnsSearch\"]');\n                const $listItems = $keepOpen.find('.dropdown-item-marker');\n\n                $columnsSearch.on('keyup paste change', ({ currentTarget }) => {\n                    const $this = $(currentTarget);\n                    const searchValue = $this.val().toLowerCase();\n\n                    $listItems.show();\n                    $checkboxes.each((i, el) => {\n                        const $checkbox = $(el);\n                        const $listItem = $checkbox.parents('.dropdown-item-marker');\n                        const text = $listItem.text().toLowerCase();\n\n                        if (!text.includes(searchValue)) {\n                            $listItem.hide();\n                        }\n                    });\n                });\n            }\n        }\n        const handleInputEvent = $searchInput => {\n            const eventTriggers = 'keyup drop blur mouseup';\n\n            $searchInput.off(eventTriggers).on(eventTriggers, event => {\n                if (opts.searchOnEnterKey && event.keyCode !== 13) {\n                    return;\n                }\n\n                if ([37, 38, 39, 40].includes(event.keyCode)) {\n                    return;\n                }\n\n                clearTimeout(timeoutId); // doesn't matter if it's 0\n                timeoutId = setTimeout(() => {\n                    this.onSearch({ currentTarget: event.currentTarget });\n                }, opts.searchTimeOut);\n            });\n        };\n\n        // Fix #4516: this.showSearchClearButton is for extensions\n        if (\n            (opts.search || this.showSearchClearButton) &&\n            typeof opts.searchSelector !== 'string'\n        ) {\n            html = [];\n            const showSearchButton = Utils.sprintf(this.constants.html.searchButton,\n                this.constants.buttonsClass,\n                opts.formatSearch(),\n                opts.showButtonIcons ? Utils.sprintf(this.constants.html.icon, opts.iconsPrefix, opts.icons.search) : '',\n                opts.showButtonText ? opts.formatSearch() : ''\n            );\n            const showSearchClearButton = Utils.sprintf(this.constants.html.searchClearButton,\n                this.constants.buttonsClass,\n                opts.formatClearSearch(),\n                opts.showButtonIcons ? Utils.sprintf(this.constants.html.icon, opts.iconsPrefix, opts.icons.clearSearch) : '',\n                opts.showButtonText ? opts.formatClearSearch() : ''\n            );\n            const searchInputHtml = `<input class=\"${this.constants.classes.input}\n        ${Utils.sprintf(' %s%s', this.constants.classes.inputPrefix, opts.iconSize)}\n        search-input\" type=\"search\" placeholder=\"${opts.formatSearch()}\" autocomplete=\"off\">`;\n            let searchInputFinalHtml = searchInputHtml;\n\n            if (opts.showSearchButton || opts.showSearchClearButton) {\n                const buttonsHtml = (opts.showSearchButton ? showSearchButton : '') +\n                    (opts.showSearchClearButton ? showSearchClearButton : '');\n\n                searchInputFinalHtml = opts.search ? Utils.sprintf(this.constants.html.inputGroup,\n                    searchInputHtml, buttonsHtml) : buttonsHtml;\n            }\n\n            html.push(Utils.sprintf(`\n        <div class=\"${this.constants.classes.pull}-${opts.searchAlign} search ${this.constants.classes.inputGroup}\">\n          %s\n        </div>\n      `, searchInputFinalHtml));\n\n            this.$toolbar.append(html.join(''));\n            const $searchInput = Utils.getSearchInput(this);\n\n            if (opts.showSearchButton) {\n                this.$toolbar.find('.search button[name=search]').off('click').on('click', () => {\n                    clearTimeout(timeoutId); // doesn't matter if it's 0\n                    timeoutId = setTimeout(() => {\n                        this.onSearch({ currentTarget: $searchInput });\n                    }, opts.searchTimeOut);\n                });\n\n                if (opts.searchOnEnterKey) {\n                    handleInputEvent($searchInput);\n                }\n            } else {\n                handleInputEvent($searchInput);\n            }\n\n            if (opts.showSearchClearButton) {\n                this.$toolbar.find('.search button[name=clearSearch]').click(() => {\n                    this.resetSearch();\n                });\n            }\n        } else if (typeof opts.searchSelector === 'string') {\n            const $searchInput = Utils.getSearchInput(this);\n\n            handleInputEvent($searchInput);\n        }\n    }\n\n    onSearch({ currentTarget, firedByInitSearchText } = {}, overwriteSearchText = true) {\n        if (currentTarget !== undefined && $(currentTarget).length && overwriteSearchText) {\n            const text = $(currentTarget).val().trim();\n\n            if (this.options.trimOnSearch && $(currentTarget).val() !== text) {\n                $(currentTarget).val(text);\n            }\n\n            if (this.searchText === text) {\n                return;\n            }\n\n            const $searchInput = Utils.getSearchInput(this);\n            const $currentTarget = currentTarget instanceof jQuery ? currentTarget : $(currentTarget);\n\n            if ($currentTarget.is($searchInput) || $currentTarget.hasClass('search-input')) {\n                this.searchText = text;\n                this.options.searchText = text;\n            }\n        }\n\n        if (!firedByInitSearchText && !this.options.cookie) {\n            this.options.pageNumber = 1;\n        }\n        this.initSearch();\n        if (firedByInitSearchText) {\n            if (this.options.sidePagination === 'client') {\n                this.updatePagination();\n            }\n        } else {\n            this.updatePagination();\n        }\n        this.trigger('search', this.searchText);\n    }\n\n    initSearch() {\n        this.filterOptions = this.filterOptions || this.options.filterOptions;\n        if (this.options.sidePagination !== 'server') {\n            if (this.options.customSearch) {\n                this.data = Utils.calculateObjectValue(this.options, this.options.customSearch,\n                    [this.options.data, this.searchText, this.filterColumns]);\n\n                if (this.options.sortReset) {\n                    this.unsortedData = [...this.data];\n                }\n\n                this.initSort();\n                return;\n            }\n\n            const rawSearchText = this.searchText && (this.fromHtml ? Utils.escapeHTML(this.searchText) : this.searchText);\n            let searchText = rawSearchText ? rawSearchText.toLowerCase() : '';\n            const f = Utils.isEmptyObject(this.filterColumns) ? null : this.filterColumns;\n\n            if (this.options.searchAccentNeutralise) {\n                searchText = Utils.normalizeAccent(searchText);\n            }\n\n            // Check filter\n            if (typeof this.filterOptions.filterAlgorithm === 'function') {\n                this.data = this.options.data.filter(item => this.filterOptions.filterAlgorithm.apply(null, [item, f]));\n            } else if (typeof this.filterOptions.filterAlgorithm === 'string') {\n                this.data = f ? this.options.data.filter(item => {\n                    const filterAlgorithm = this.filterOptions.filterAlgorithm;\n\n                    if (filterAlgorithm === 'and') {\n                        for (const key in f) {\n                            if (\n                                (Array.isArray(f[key]) &&\n                                    !f[key].includes(item[key])) ||\n                                (!Array.isArray(f[key]) &&\n                                    item[key] !== f[key])\n                            ) {\n                                return false;\n                            }\n                        }\n                    } else if (filterAlgorithm === 'or') {\n                        let match = false;\n\n                        for (const key in f) {\n                            if (\n                                (Array.isArray(f[key]) &&\n                                    f[key].includes(item[key])) ||\n                                (!Array.isArray(f[key]) &&\n                                    item[key] === f[key])\n                            ) {\n                                match = true;\n                            }\n                        }\n\n                        return match;\n                    }\n\n                    return true;\n                }) : [...this.options.data];\n            }\n\n            const visibleFields = this.getVisibleFields();\n\n            this.data = searchText ? this.data.filter((item, i) => {\n                for (let j = 0; j < this.header.fields.length; j++) {\n                    if (!this.header.searchables[j] || (this.options.visibleSearch && visibleFields.indexOf(this.header.fields[j]) === -1)) {\n                        continue;\n                    }\n\n                    const key = Utils.isNumeric(this.header.fields[j]) ? parseInt(this.header.fields[j], 10) : this.header.fields[j];\n                    const column = this.columns[this.fieldsColumnsIndex[key]];\n                    let value;\n\n                    if (typeof key === 'string') {\n                        value = item;\n                        const props = key.split('.');\n\n                        for (let i = 0; i < props.length; i++) {\n                            if (value[props[i]] !== null) {\n                                value = value[props[i]];\n                            } else {\n                                value = null;\n                                break;\n                            }\n                        }\n                    } else {\n                        value = item[key];\n                    }\n\n                    if (this.options.searchAccentNeutralise) {\n                        value = Utils.normalizeAccent(value);\n                    }\n\n                    // Fix #142: respect searchFormatter boolean\n                    if (column && column.searchFormatter) {\n                        value = Utils.calculateObjectValue(column,\n                            this.header.formatters[j], [value, item, i, column.field], value);\n                    }\n\n                    if (typeof value === 'string' || typeof value === 'number') {\n                        if (\n                            this.options.strictSearch && (`${value}`).toLowerCase() === searchText ||\n                            (this.options.regexSearch && Utils.regexCompare(value, rawSearchText))\n                        ) {\n                            return true;\n                        }\n\n                        const largerSmallerEqualsRegex = /(?:(<=|=>|=<|>=|>|<)(?:\\s+)?(-?\\d+)?|(-?\\d+)?(\\s+)?(<=|=>|=<|>=|>|<))/gm;\n                        const matches = largerSmallerEqualsRegex.exec(this.searchText);\n                        let comparisonCheck = false;\n\n                        if (matches) {\n                            const operator = matches[1] || `${matches[5]}l`;\n                            const comparisonValue = matches[2] || matches[3];\n                            const int = parseInt(value, 10);\n                            const comparisonInt = parseInt(comparisonValue, 10);\n\n                            switch (operator) {\n                                case '>':\n                                case '<l':\n                                    comparisonCheck = int > comparisonInt;\n                                    break;\n                                case '<':\n                                case '>l':\n                                    comparisonCheck = int < comparisonInt;\n                                    break;\n                                case '<=':\n                                case '=<':\n                                case '>=l':\n                                case '=>l':\n                                    comparisonCheck = int <= comparisonInt;\n                                    break;\n                                case '>=':\n                                case '=>':\n                                case '<=l':\n                                case '=<l':\n                                    comparisonCheck = int >= comparisonInt;\n                                    break;\n                                default:\n                                    break;\n                            }\n                        }\n\n                        if (comparisonCheck || (`${value}`).toLowerCase().includes(searchText)) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            }) : this.data;\n\n            if (this.options.sortReset) {\n                this.unsortedData = [...this.data];\n            }\n\n            this.initSort();\n        }\n    }\n\n    initPagination() {\n        const opts = this.options;\n\n        if (!opts.pagination) {\n            this.$pagination.hide();\n            return;\n        }\n        this.$pagination.show();\n\n        const html = [];\n        let allSelected = false;\n        let i;\n        let from;\n        let to;\n        let $pageList;\n        let $pre;\n        let $next;\n        let $number;\n        const data = this.getData({ includeHiddenRows: false });\n        let pageList = opts.pageList;\n\n        if (typeof pageList === 'string') {\n            pageList = pageList.replace(/\\[|\\]| /g, '').toLowerCase().split(',');\n        }\n\n        pageList = pageList.map(value => {\n            if (typeof value === 'string') {\n                return (value.toLowerCase() === opts.formatAllRows().toLowerCase() ||\n                    ['all', 'unlimited'].includes(value.toLowerCase())) ? opts.formatAllRows() : +value;\n            }\n            return value;\n        });\n\n        this.paginationParts = opts.paginationParts;\n        if (typeof this.paginationParts === 'string') {\n            this.paginationParts = this.paginationParts.replace(/\\[|\\]| |'/g, '').split(',');\n        }\n\n        if (opts.sidePagination !== 'server') {\n            opts.totalRows = data.length;\n        }\n\n        this.totalPages = 0;\n        if (opts.totalRows) {\n            if (opts.pageSize === opts.formatAllRows()) {\n                opts.pageSize = opts.totalRows;\n                allSelected = true;\n            }\n\n            this.totalPages = ~~((opts.totalRows - 1) / opts.pageSize) + 1;\n\n            opts.totalPages = this.totalPages;\n        }\n        if (this.totalPages > 0 && opts.pageNumber > this.totalPages) {\n            opts.pageNumber = this.totalPages;\n        }\n\n        this.pageFrom = (opts.pageNumber - 1) * opts.pageSize + 1;\n        this.pageTo = opts.pageNumber * opts.pageSize;\n        if (this.pageTo > opts.totalRows) {\n            this.pageTo = opts.totalRows;\n        }\n\n        if (this.options.pagination && this.options.sidePagination !== 'server') {\n            this.options.totalNotFiltered = this.options.data.length;\n        }\n\n        if (!this.options.showExtendedPagination) {\n            this.options.totalNotFiltered = undefined;\n        }\n\n        if (this.paginationParts.includes('pageInfo') || this.paginationParts.includes('pageInfoShort') || this.paginationParts.includes('pageSize')) {\n            html.push(`<div class=\"${this.constants.classes.pull}-${opts.paginationDetailHAlign} pagination-detail\">`);\n        }\n\n        if (this.paginationParts.includes('pageInfo') || this.paginationParts.includes('pageInfoShort')) {\n            const paginationInfo = this.paginationParts.includes('pageInfoShort') ? opts.formatDetailPagination(opts.totalRows) : opts.formatShowingRows(this.pageFrom, this.pageTo, opts.totalRows, opts.totalNotFiltered);\n\n            html.push(`<span class=\"pagination-info\">\n      ${paginationInfo}\n      </span>`);\n        }\n\n        if (this.paginationParts.includes('pageSize')) {\n            html.push('<div class=\"page-list\">');\n\n            const pageNumber = [\n                `<div class=\"${this.constants.classes.paginationDropdown}\">\n        <button class=\"${this.constants.buttonsClass} dropdown-toggle\" type=\"button\" ${this.constants.dataToggle}=\"dropdown\">\n        <span class=\"page-size\">\n        ${allSelected ? opts.formatAllRows() : opts.pageSize}\n        </span>\n        ${this.constants.html.dropdownCaret}\n        </button>\n        ${this.constants.html.pageDropdown[0]}`\n            ];\n\n            pageList.forEach((page, i) => {\n                if (!opts.smartDisplay || i === 0 || pageList[i - 1] < opts.totalRows || page === opts.formatAllRows()) {\n                    let active;\n\n                    if (allSelected) {\n                        active = page === opts.formatAllRows() ? this.constants.classes.dropdownActive : '';\n                    } else {\n                        active = page === opts.pageSize ? this.constants.classes.dropdownActive : '';\n                    }\n                    pageNumber.push(Utils.sprintf(this.constants.html.pageDropdownItem, active, page));\n                }\n            });\n            pageNumber.push(`${this.constants.html.pageDropdown[1]}</div>`);\n\n            html.push(opts.formatRecordsPerPage(pageNumber.join('')));\n        }\n\n        if (this.paginationParts.includes('pageInfo') || this.paginationParts.includes('pageInfoShort') || this.paginationParts.includes('pageSize')) {\n            html.push('</div></div>');\n        }\n\n        if (this.paginationParts.includes('pageList')) {\n            html.push(`<div class=\"${this.constants.classes.pull}-${opts.paginationHAlign} pagination\">`,\n                Utils.sprintf(this.constants.html.pagination[0], Utils.sprintf(' pagination-%s', opts.iconSize)),\n                Utils.sprintf(this.constants.html.paginationItem, ' page-pre', opts.formatSRPaginationPreText(), opts.paginationPreText));\n\n            if (this.totalPages < opts.paginationSuccessivelySize) {\n                from = 1;\n                to = this.totalPages;\n            } else {\n                from = opts.pageNumber - opts.paginationPagesBySide;\n                to = from + (opts.paginationPagesBySide * 2);\n            }\n\n            if (opts.pageNumber < (opts.paginationSuccessivelySize - 1)) {\n                to = opts.paginationSuccessivelySize;\n            }\n\n            if (opts.paginationSuccessivelySize > this.totalPages - from) {\n                from = from - (opts.paginationSuccessivelySize - (this.totalPages - from)) + 1;\n            }\n\n            if (from < 1) {\n                from = 1;\n            }\n\n            if (to > this.totalPages) {\n                to = this.totalPages;\n            }\n\n            const middleSize = Math.round(opts.paginationPagesBySide / 2);\n            const pageItem = (i, classes = '') => Utils.sprintf(this.constants.html.paginationItem,\n                classes + (i === opts.pageNumber ? ` ${this.constants.classes.paginationActive}` : ''), opts.formatSRPaginationPageText(i), i);\n\n            if (from > 1) {\n                let max = opts.paginationPagesBySide;\n\n                if (max >= from) max = from - 1;\n                for (i = 1; i <= max; i++) {\n                    html.push(pageItem(i));\n                }\n                if ((from - 1) === max + 1) {\n                    i = from - 1;\n                    html.push(pageItem(i));\n                } else if ((from - 1) > max) {\n                    if (\n                        (from - opts.paginationPagesBySide * 2) > opts.paginationPagesBySide &&\n                        opts.paginationUseIntermediate\n                    ) {\n                        i = Math.round(((from - middleSize) / 2) + middleSize);\n                        html.push(pageItem(i, ' page-intermediate'));\n                    } else {\n                        html.push(Utils.sprintf(this.constants.html.paginationItem,\n                            ' page-first-separator disabled', '', '...'));\n                    }\n                }\n            }\n\n            for (i = from; i <= to; i++) {\n                html.push(pageItem(i));\n            }\n\n            if (this.totalPages > to) {\n                let min = this.totalPages - (opts.paginationPagesBySide - 1);\n\n                if (to >= min) min = to + 1;\n                if ((to + 1) === min - 1) {\n                    i = to + 1;\n                    html.push(pageItem(i));\n                } else if (min > (to + 1)) {\n                    if (\n                        (this.totalPages - to) > opts.paginationPagesBySide * 2 &&\n                        opts.paginationUseIntermediate\n                    ) {\n                        i = Math.round(((this.totalPages - middleSize - to) / 2) + to);\n                        html.push(pageItem(i, ' page-intermediate'));\n                    } else {\n                        html.push(Utils.sprintf(this.constants.html.paginationItem,\n                            ' page-last-separator disabled', '', '...'));\n                    }\n                }\n\n                for (i = min; i <= this.totalPages; i++) {\n                    html.push(pageItem(i));\n                }\n            }\n\n            html.push(Utils.sprintf(this.constants.html.paginationItem, ' page-next', opts.formatSRPaginationNextText(), opts.paginationNextText));\n            html.push(this.constants.html.pagination[1], '</div>');\n        }\n        this.$pagination.html(html.join(''));\n\n        const dropupClass = ['bottom', 'both'].includes(opts.paginationVAlign) ?\n            ` ${this.constants.classes.dropup}` : '';\n\n        this.$pagination.last().find('.page-list > div').addClass(dropupClass);\n\n        if (!opts.onlyInfoPagination) {\n            $pageList = this.$pagination.find('.page-list a');\n            $pre = this.$pagination.find('.page-pre');\n            $next = this.$pagination.find('.page-next');\n            $number = this.$pagination.find('.page-item').not('.page-next, .page-pre, .page-last-separator, .page-first-separator');\n\n            if (this.totalPages <= 1) {\n                this.$pagination.find('div.pagination').hide();\n            }\n\n            if (opts.smartDisplay) {\n                if (pageList.length < 2 || opts.totalRows <= pageList[0]) {\n                    this.$pagination.find('div.page-list').hide();\n                }\n            }\n\n            // when data is empty, hide the pagination\n            this.$pagination[this.getData().length ? 'show' : 'hide']();\n\n            if (!opts.paginationLoop) {\n                if (opts.pageNumber === 1) {\n                    $pre.addClass('disabled');\n                }\n                if (opts.pageNumber === this.totalPages) {\n                    $next.addClass('disabled');\n                }\n            }\n\n            if (allSelected) {\n                opts.pageSize = opts.formatAllRows();\n            }\n            // removed the events for last and first, onPageNumber executeds the same logic\n            $pageList.off('click').on('click', e => this.onPageListChange(e));\n            $pre.off('click').on('click', e => this.onPagePre(e));\n            $next.off('click').on('click', e => this.onPageNext(e));\n            $number.off('click').on('click', e => this.onPageNumber(e));\n        }\n    }\n\n    updatePagination(event) {\n        // Fix #171: IE disabled button can be clicked bug.\n        if (event && $(event.currentTarget).hasClass('disabled')) {\n            return;\n        }\n\n        if (!this.options.maintainMetaData) {\n            this.resetRows();\n        }\n\n        this.initPagination();\n\n        this.trigger('page-change', this.options.pageNumber, this.options.pageSize);\n\n        if (this.options.sidePagination === 'server') {\n            this.initServer();\n        } else {\n            this.initBody();\n        }\n    }\n\n    onPageListChange(event) {\n        event.preventDefault();\n        const $this = $(event.currentTarget);\n\n        $this.parent().addClass(this.constants.classes.dropdownActive)\n            .siblings().removeClass(this.constants.classes.dropdownActive);\n        this.options.pageSize = $this.text().toUpperCase() === this.options.formatAllRows().toUpperCase() ?\n            this.options.formatAllRows() : +$this.text();\n        this.$toolbar.find('.page-size').text(this.options.pageSize);\n\n        this.updatePagination(event);\n        return false;\n    }\n\n    onPagePre(event) {\n        if ($(event.target).hasClass('disabled')) {\n            return;\n        }\n        event.preventDefault();\n        if ((this.options.pageNumber - 1) === 0) {\n            this.options.pageNumber = this.options.totalPages;\n        } else {\n            this.options.pageNumber--;\n        }\n        this.updatePagination(event);\n        return false;\n    }\n\n    onPageNext(event) {\n        if ($(event.target).hasClass('disabled')) {\n            return;\n        }\n        event.preventDefault();\n        if ((this.options.pageNumber + 1) > this.options.totalPages) {\n            this.options.pageNumber = 1;\n        } else {\n            this.options.pageNumber++;\n        }\n        this.updatePagination(event);\n        return false;\n    }\n\n    onPageNumber(event) {\n        event.preventDefault();\n        if (this.options.pageNumber === +$(event.currentTarget).text()) {\n            return;\n        }\n        this.options.pageNumber = +$(event.currentTarget).text();\n        this.updatePagination(event);\n        return false;\n    }\n\n    // eslint-disable-next-line no-unused-vars\n    initRow(item, i, data, trFragments) {\n        const html = [];\n        let style = {};\n        const csses = [];\n        let data_ = '';\n        let attributes = {};\n        const htmlAttributes = [];\n\n        if (Utils.findIndex(this.hiddenRows, item) > -1) {\n            return;\n        }\n\n        style = Utils.calculateObjectValue(this.options, this.options.rowStyle, [item, i], style);\n\n        if (style && style.css) {\n            for (const [key, value] of Object.entries(style.css)) {\n                csses.push(`${key}: ${value}`);\n            }\n        }\n\n        attributes = Utils.calculateObjectValue(this.options,\n            this.options.rowAttributes, [item, i], attributes);\n\n        if (attributes) {\n            for (const [key, value] of Object.entries(attributes)) {\n                htmlAttributes.push(`${key}=\"${Utils.escapeHTML(value)}\"`);\n            }\n        }\n\n        if (item._data && !Utils.isEmptyObject(item._data)) {\n            for (const [k, v] of Object.entries(item._data)) {\n                // ignore data-index\n                if (k === 'index') {\n                    return;\n                }\n                data_ += ` data-${k}='${typeof v === 'object' ? JSON.stringify(v) : v}'`;\n            }\n        }\n\n        html.push('<tr',\n            Utils.sprintf(' %s', htmlAttributes.length ? htmlAttributes.join(' ') : undefined),\n            Utils.sprintf(' id=\"%s\"', Array.isArray(item) ? undefined : item._id),\n            Utils.sprintf(' class=\"%s\"', style.classes || (Array.isArray(item) ? undefined : item._class)),\n            Utils.sprintf(' style=\"%s\"', Array.isArray(item) ? undefined : item._style),\n            ` data-index=\"${i}\"`,\n            Utils.sprintf(' data-uniqueid=\"%s\"', Utils.getItemField(item, this.options.uniqueId, false)),\n            Utils.sprintf(' data-has-detail-view=\"%s\"', (this.options.detailView && Utils.calculateObjectValue(null, this.options.detailFilter, [i, item])) ? 'true' : undefined),\n            Utils.sprintf('%s', data_),\n            '>'\n        );\n\n        if (this.options.cardView) {\n            html.push(`<td colspan=\"${this.header.fields.length}\"><div class=\"card-views\">`);\n        }\n\n        let detailViewTemplate = '';\n\n        if (Utils.hasDetailViewIcon(this.options)) {\n            detailViewTemplate = '<td>';\n\n            if (Utils.calculateObjectValue(null, this.options.detailFilter, [i, item])) {\n                detailViewTemplate += `\n          <a class=\"detail-icon\" href=\"#\">\n          ${Utils.sprintf(this.constants.html.icon, this.options.iconsPrefix, this.options.icons.detailOpen)}\n          </a>\n        `;\n            }\n\n            detailViewTemplate += '</td>';\n        }\n\n        if (detailViewTemplate && this.options.detailViewAlign !== 'right') {\n            html.push(detailViewTemplate);\n        }\n\n        this.header.fields.forEach((field, j) => {\n            const column = this.columns[j];\n            let text = '';\n            const value_ = Utils.getItemField(item, field, this.options.escape, column.escape);\n            let value = '';\n            let type = '';\n            let cellStyle = {};\n            let id_ = '';\n            let class_ = this.header.classes[j];\n            let style_ = '';\n            let styleToAdd_ = '';\n            let data_ = '';\n            let rowspan_ = '';\n            let colspan_ = '';\n            let title_ = '';\n\n            if ((this.fromHtml || this.autoMergeCells) && typeof value_ === 'undefined') {\n                if ((!column.checkbox) && (!column.radio)) {\n                    return;\n                }\n            }\n\n            if (!column.visible) {\n                return;\n            }\n\n            if (this.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            // Style concat\n            if (csses.concat([this.header.styles[j]]).length) {\n                styleToAdd_ += `${csses.concat([this.header.styles[j]]).join('; ')}`;\n            }\n            if (item[`_${field}_style`]) {\n                styleToAdd_ += `${item[`_${field}_style`]}`;\n            }\n\n            if (styleToAdd_) {\n                style_ = ` style=\"${styleToAdd_}\"`;\n            }\n            // Style concat\n\n            // handle id and class of td\n            if (item[`_${field}_id`]) {\n                id_ = Utils.sprintf(' id=\"%s\"', item[`_${field}_id`]);\n            }\n            if (item[`_${field}_class`]) {\n                class_ = Utils.sprintf(' class=\"%s\"', item[`_${field}_class`]);\n            }\n            if (item[`_${field}_rowspan`]) {\n                rowspan_ = Utils.sprintf(' rowspan=\"%s\"', item[`_${field}_rowspan`]);\n            }\n            if (item[`_${field}_colspan`]) {\n                colspan_ = Utils.sprintf(' colspan=\"%s\"', item[`_${field}_colspan`]);\n            }\n            if (item[`_${field}_title`]) {\n                title_ = Utils.sprintf(' title=\"%s\"', item[`_${field}_title`]);\n            }\n            cellStyle = Utils.calculateObjectValue(this.header,\n                this.header.cellStyles[j], [value_, item, i, field], cellStyle);\n            if (cellStyle.classes) {\n                class_ = ` class=\"${cellStyle.classes}\"`;\n            }\n            if (cellStyle.css) {\n                const csses_ = [];\n\n                for (const [key, value] of Object.entries(cellStyle.css)) {\n                    csses_.push(`${key}: ${value}`);\n                }\n                style_ = ` style=\"${csses_.concat(this.header.styles[j]).join('; ')}\"`;\n            }\n\n            value = Utils.calculateObjectValue(column,\n                this.header.formatters[j], [value_, item, i, field], value_);\n\n            if (!(column.checkbox || column.radio)) {\n                value = typeof value === 'undefined' || value === null ?\n                    this.options.undefinedText : value;\n            }\n\n            if (column.searchable && this.searchText && this.options.searchHighlight && !(column.checkbox || column.radio)) {\n                let defValue = '';\n                let searchText = this.searchText.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n\n                if (this.options.searchAccentNeutralise) {\n                    const indexRegex = new RegExp(`${Utils.normalizeAccent(searchText)}`, 'gmi');\n                    const match = indexRegex.exec(Utils.normalizeAccent(value));\n\n                    if (match) {\n                        searchText = value.substring(match.index, match.index + searchText.length);\n                    }\n                }\n\n                const regExp = new RegExp(`(${searchText})`, 'gim');\n                const marker = '<mark>$1</mark>';\n                const isHTML = value && /<(?=.*? .*?\\/ ?>|br|hr|input|!--|wbr)[a-z]+.*?>|<([a-z]+).*?<\\/\\1>/i.test(value);\n\n                if (isHTML) {\n                    // value can contains a HTML tags\n                    let textContent = new DOMParser().parseFromString(value.toString(), 'text/html').documentElement.textContent;\n                    const textReplaced = textContent.replace(regExp, marker);\n\n                    textContent = textContent.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n                    defValue = value.replace(new RegExp(`(>\\\\s*)(${textContent})(\\\\s*)`, 'gm'), `$1${textReplaced}$3`);\n                } else {\n                    // but usually not\n                    defValue = value.toString().replace(regExp, marker);\n                }\n                value = Utils.calculateObjectValue(column, column.searchHighlightFormatter, [value, this.searchText], defValue);\n            }\n\n            if (item[`_${field}_data`] && !Utils.isEmptyObject(item[`_${field}_data`])) {\n                for (const [k, v] of Object.entries(item[`_${field}_data`])) {\n                    // ignore data-index\n                    if (k === 'index') {\n                        return;\n                    }\n                    data_ += ` data-${k}=\"${v}\"`;\n                }\n            }\n\n            if (column.checkbox || column.radio) {\n                type = column.checkbox ? 'checkbox' : type;\n                type = column.radio ? 'radio' : type;\n\n                const c = column['class'] || '';\n                const isChecked = Utils.isObject(value) && value.hasOwnProperty('checked') ?\n                    value.checked : (value === true || value_) && value !== false;\n                const isDisabled = !column.checkboxEnabled || (value && value.disabled);\n\n                text = [\n                    this.options.cardView ?\n                        `<div class=\"card-view ${c}\">` :\n                        `<td class=\"bs-checkbox ${c}\"${class_}${style_}>`,\n                    `<label>\n            <input\n            data-index=\"${i}\"\n            name=\"${this.options.selectItemName}\"\n            type=\"${type}\"\n            ${Utils.sprintf('value=\"%s\"', item[this.options.idField])}\n            ${Utils.sprintf('checked=\"%s\"', isChecked ? 'checked' : undefined)}\n            ${Utils.sprintf('disabled=\"%s\"', isDisabled ? 'disabled' : undefined)} />\n            <span></span>\n            </label>`,\n                    this.header.formatters[j] && typeof value === 'string' ? value : '',\n                    this.options.cardView ? '</div>' : '</td>'\n                ].join('');\n\n                item[this.header.stateField] = value === true || (!!value_ || (value && value.checked));\n            } else if (this.options.cardView) {\n                const cardTitle = this.options.showHeader ?\n                    `<span class=\"card-view-title ${cellStyle.classes || ''}\"${style_}>${Utils.getFieldTitle(this.columns, field)}</span>` : '';\n\n                text = `<div class=\"card-view\">${cardTitle}<span class=\"card-view-value ${cellStyle.classes || ''}\"${style_}>${value}</span></div>`;\n\n                if (this.options.smartDisplay && value === '') {\n                    text = '<div class=\"card-view\"></div>';\n                }\n            } else {\n                text = `<td${id_}${class_}${style_}${data_}${rowspan_}${colspan_}${title_}>${value}</td>`;\n            }\n\n            html.push(text);\n        });\n\n        if (detailViewTemplate && this.options.detailViewAlign === 'right') {\n            html.push(detailViewTemplate);\n        }\n\n        if (this.options.cardView) {\n            html.push('</div></td>');\n        }\n        html.push('</tr>');\n\n        return html.join('');\n    }\n\n    initBody(fixedScroll, updatedUid) {\n        const data = this.getData();\n\n        this.trigger('pre-body', data);\n\n        this.$body = this.$el.find('>tbody');\n        if (!this.$body.length) {\n            this.$body = $('<tbody></tbody>').appendTo(this.$el);\n        }\n\n        // Fix #389 Bootstrap-table-flatJSON is not working\n        if (!this.options.pagination || this.options.sidePagination === 'server') {\n            this.pageFrom = 1;\n            this.pageTo = data.length;\n        }\n\n        const rows = [];\n        const trFragments = $(document.createDocumentFragment());\n        let hasTr = false;\n        const toExpand = [];\n\n        this.autoMergeCells = Utils.checkAutoMergeCells(data.slice(this.pageFrom - 1, this.pageTo));\n\n        for (let i = this.pageFrom - 1; i < this.pageTo; i++) {\n            const item = data[i];\n            let tr = this.initRow(item, i, data, trFragments);\n\n            hasTr = hasTr || !!tr;\n            if (tr && typeof tr === 'string') {\n\n                const uniqueId = this.options.uniqueId;\n\n                if (uniqueId && item.hasOwnProperty(uniqueId)) {\n                    const itemUniqueId = item[uniqueId];\n\n                    const oldTr = this.$body.find(Utils.sprintf('> tr[data-uniqueid=\"%s\"][data-has-detail-view]', itemUniqueId));\n                    const oldTrNext = oldTr.next();\n\n                    if (oldTrNext.is('tr.detail-view')) {\n\n                        toExpand.push(i);\n\n                        if (!updatedUid || itemUniqueId !== updatedUid) {\n                            tr += oldTrNext[0].outerHTML;\n                        }\n                    }\n                }\n\n                if (!this.options.virtualScroll) {\n                    trFragments.append(tr);\n                } else {\n                    rows.push(tr);\n                }\n            }\n        }\n\n        // show no records\n        if (!hasTr) {\n            this.$body.html(`<tr class=\"no-records-found\">${Utils.sprintf('<td colspan=\"%s\">%s</td>',\n                this.getVisibleFields().length + Utils.getDetailViewIndexOffset(this.options),\n                this.options.formatNoMatches())}</tr>`);\n        } else if (!this.options.virtualScroll) {\n            this.$body.html(trFragments);\n        } else {\n            if (this.virtualScroll) {\n                this.virtualScroll.destroy();\n            }\n            this.virtualScroll = new VirtualScroll({\n                rows,\n                fixedScroll,\n                scrollEl: this.$tableBody[0],\n                contentEl: this.$body[0],\n                itemHeight: this.options.virtualScrollItemHeight,\n                callback: (startIndex, endIndex) => {\n                    this.fitHeader();\n                    this.initBodyEvent();\n                    this.trigger('virtual-scroll', startIndex, endIndex);\n                }\n            });\n        }\n\n        toExpand.forEach(index => { this.expandRow(index); });\n\n        if (!fixedScroll) {\n            this.scrollTo(0);\n        }\n\n        this.initBodyEvent();\n        this.initFooter();\n        this.resetView();\n        this.updateSelected();\n\n        if (this.options.sidePagination !== 'server') {\n            this.options.totalRows = data.length;\n        }\n\n        this.trigger('post-body', data);\n    }\n\n    initBodyEvent() {\n        // click to select by column\n        this.$body.find('> tr[data-index] > td').off('click dblclick').on('click dblclick', e => {\n            const $td = $(e.currentTarget);\n\n            if (\n                $td.find('.detail-icon').length ||\n                $td.index() - Utils.getDetailViewIndexOffset(this.options) < 0\n            ) {\n                return;\n            }\n\n            const $tr = $td.parent();\n            const $cardViewArr = $(e.target).parents('.card-views').children();\n            const $cardViewTarget = $(e.target).parents('.card-view');\n            const rowIndex = $tr.data('index');\n            const item = this.data[rowIndex];\n            const index = this.options.cardView ? $cardViewArr.index($cardViewTarget) : $td[0].cellIndex;\n            const fields = this.getVisibleFields();\n            const field = fields[index - Utils.getDetailViewIndexOffset(this.options)];\n            const column = this.columns[this.fieldsColumnsIndex[field]];\n            const value = Utils.getItemField(item, field, this.options.escape, column.escape);\n\n            this.trigger(e.type === 'click' ? 'click-cell' : 'dbl-click-cell', field, value, item, $td);\n            this.trigger(e.type === 'click' ? 'click-row' : 'dbl-click-row', item, $tr, field);\n\n            // if click to select - then trigger the checkbox/radio click\n            if (\n                e.type === 'click' &&\n                this.options.clickToSelect &&\n                column.clickToSelect &&\n                !Utils.calculateObjectValue(this.options, this.options.ignoreClickToSelectOn, [e.target])\n            ) {\n                const $selectItem = $tr.find(Utils.sprintf('[name=\"%s\"]', this.options.selectItemName));\n\n                if ($selectItem.length) {\n                    $selectItem[0].click();\n                }\n            }\n\n            if (e.type === 'click' && this.options.detailViewByClick) {\n                this.toggleDetailView(rowIndex, this.header.detailFormatters[this.fieldsColumnsIndex[field]]);\n            }\n        }).off('mousedown').on('mousedown', e => {\n            // https://github.com/jquery/jquery/issues/1741\n            this.multipleSelectRowCtrlKey = e.ctrlKey || e.metaKey;\n            this.multipleSelectRowShiftKey = e.shiftKey;\n        });\n\n        this.$body.find('> tr[data-index] > td > .detail-icon').off('click').on('click', e => {\n            e.preventDefault();\n            this.toggleDetailView($(e.currentTarget).parent().parent().data('index'));\n            return false;\n        });\n\n        this.$selectItem = this.$body.find(Utils.sprintf('[name=\"%s\"]', this.options.selectItemName));\n        this.$selectItem.off('click').on('click', e => {\n            e.stopImmediatePropagation();\n\n            const $this = $(e.currentTarget);\n\n            this._toggleCheck($this.prop('checked'), $this.data('index'));\n        });\n\n        this.header.events.forEach((_events, i) => {\n            let events = _events;\n\n            if (!events) {\n                return;\n            }\n            // fix bug, if events is defined with namespace\n            if (typeof events === 'string') {\n                events = Utils.calculateObjectValue(null, events);\n            }\n\n            if (!events) {\n                throw new Error(`Unknown event in the scope: ${_events}`);\n            }\n\n            const field = this.header.fields[i];\n            let fieldIndex = this.getVisibleFields().indexOf(field);\n\n            if (fieldIndex === -1) {\n                return;\n            }\n\n            fieldIndex += Utils.getDetailViewIndexOffset(this.options);\n\n            for (const key in events) {\n                if (!events.hasOwnProperty(key)) {\n                    continue;\n                }\n                const event = events[key];\n\n                this.$body.find('>tr:not(.no-records-found)').each((i, tr) => {\n                    const $tr = $(tr);\n                    const $td = $tr.find(this.options.cardView ? '.card-views>.card-view' : '>td').eq(fieldIndex);\n                    const index = key.indexOf(' ');\n                    const name = key.substring(0, index);\n                    const el = key.substring(index + 1);\n\n                    $td.find(el).off(name).on(name, e => {\n                        const index = $tr.data('index');\n                        const row = this.data[index];\n                        const value = row[field];\n\n                        event.apply(this, [e, value, row, index]);\n                    });\n                });\n            }\n        });\n    }\n\n    initServer(silent, query, url) {\n        let data = {};\n        const index = this.header.fields.indexOf(this.options.sortName);\n\n        let params = {\n            searchText: this.searchText,\n            sortName: this.options.sortName,\n            sortOrder: this.options.sortOrder\n        };\n\n        if (this.header.sortNames[index]) {\n            params.sortName = this.header.sortNames[index];\n        }\n\n        if (this.options.pagination && this.options.sidePagination === 'server') {\n            params.pageSize = this.options.pageSize === this.options.formatAllRows() ?\n                this.options.totalRows : this.options.pageSize;\n            params.pageNumber = this.options.pageNumber;\n        }\n\n        if (!(url || this.options.url) && !this.options.ajax) {\n            return;\n        }\n\n        if (this.options.queryParamsType === 'limit') {\n            params = {\n                search: params.searchText,\n                sort: params.sortName,\n                order: params.sortOrder\n            };\n\n            if (this.options.pagination && this.options.sidePagination === 'server') {\n                params.offset = this.options.pageSize === this.options.formatAllRows() ?\n                    0 : this.options.pageSize * (this.options.pageNumber - 1);\n                params.limit = this.options.pageSize;\n                if (params.limit === 0 || this.options.pageSize === this.options.formatAllRows()) {\n                    delete params.limit;\n                }\n            }\n        }\n\n        if (\n            this.options.search &&\n            this.options.sidePagination === 'server' &&\n            this.columns.filter(column => !column.searchable).length\n        ) {\n            params.searchable = [];\n\n            for (const column of this.columns) {\n                if (\n                    !column.checkbox &&\n                    column.searchable &&\n                    (\n                        this.options.visibleSearch &&\n                        column.visible ||\n                        !this.options.visibleSearch\n                    )\n                ) {\n                    params.searchable.push(column.field);\n                }\n            }\n        }\n\n        if (!(Utils.isEmptyObject(this.filterColumnsPartial))) {\n            params.filter = JSON.stringify(this.filterColumnsPartial, null);\n        }\n\n        $.extend(params, query || {});\n\n        data = Utils.calculateObjectValue(this.options, this.options.queryParams, [params], data);\n\n        // false to stop request\n        if (data === false) {\n            return;\n        }\n\n        if (!silent) {\n            this.showLoading();\n        }\n        const request = $.extend({}, Utils.calculateObjectValue(null, this.options.ajaxOptions), {\n            type: this.options.method,\n            url: url || this.options.url,\n            data: this.options.contentType === 'application/json' && this.options.method === 'post' ?\n                JSON.stringify(data) : data,\n            cache: this.options.cache,\n            contentType: this.options.contentType,\n            dataType: this.options.dataType,\n            success: (_res, textStatus, jqXHR) => {\n                const res = Utils.calculateObjectValue(this.options,\n                    this.options.responseHandler, [_res, jqXHR], _res);\n\n                this.load(res);\n                this.trigger('load-success', res, jqXHR && jqXHR.status, jqXHR);\n                if (!silent) {\n                    this.hideLoading();\n                }\n\n                if (\n                    this.options.sidePagination === 'server' &&\n                    this.options.pageNumber > 1 &&\n                    res[this.options.totalField] > 0 &&\n                    !res[this.options.dataField].length\n                ) {\n                    this.updatePagination();\n                }\n            },\n            error: jqXHR => {\n                // abort ajax by multiple request\n                if (jqXHR && jqXHR.status === 0 && this._xhrAbort) {\n                    this._xhrAbort = false;\n                    return;\n                }\n\n                let data = [];\n\n                if (this.options.sidePagination === 'server') {\n                    data = {};\n                    data[this.options.totalField] = 0;\n                    data[this.options.dataField] = [];\n                }\n                this.load(data);\n                this.trigger('load-error', jqXHR && jqXHR.status, jqXHR);\n                if (!silent) {\n                    this.hideLoading();\n                }\n            }\n        });\n\n        if (this.options.ajax) {\n            Utils.calculateObjectValue(this, this.options.ajax, [request], null);\n        } else {\n            if (this._xhr && this._xhr.readyState !== 4) {\n                this._xhrAbort = true;\n                this._xhr.abort();\n            }\n            this._xhr = $.ajax(request);\n        }\n\n        return data;\n    }\n\n    initSearchText() {\n        if (this.options.search) {\n            this.searchText = '';\n            if (this.options.searchText !== '') {\n                const $search = Utils.getSearchInput(this);\n\n                $search.val(this.options.searchText);\n                this.onSearch({ currentTarget: $search, firedByInitSearchText: true });\n            }\n        }\n    }\n\n    getCaret() {\n        this.$header.find('th').each((i, th) => {\n            $(th).find('.sortable').removeClass('desc asc')\n                .addClass($(th).data('field') === this.options.sortName ?\n                    this.options.sortOrder : 'both');\n        });\n    }\n\n    updateSelected() {\n        const checkAll = this.$selectItem.filter(':enabled').length &&\n            this.$selectItem.filter(':enabled').length ===\n            this.$selectItem.filter(':enabled').filter(':checked').length;\n\n        this.$selectAll.add(this.$selectAll_).prop('checked', checkAll);\n\n        this.$selectItem.each((i, el) => {\n            $(el).closest('tr')[$(el).prop('checked') ? 'addClass' : 'removeClass']('selected');\n        });\n    }\n\n    updateRows() {\n        this.$selectItem.each((i, el) => {\n            this.data[$(el).data('index')][this.header.stateField] = $(el).prop('checked');\n        });\n    }\n\n    resetRows() {\n        for (const row of this.data) {\n            this.$selectAll.prop('checked', false);\n            this.$selectItem.prop('checked', false);\n            if (this.header.stateField) {\n                row[this.header.stateField] = false;\n            }\n        }\n        this.initHiddenRows();\n    }\n\n    trigger(_name, ...args) {\n        const name = `${_name}.bs.table`;\n\n        this.options[BootstrapTable.EVENTS[name]](...[...args, this]);\n        this.$el.trigger($.Event(name, { sender: this }), args);\n\n        this.options.onAll(name, ...[...args, this]);\n        this.$el.trigger($.Event('all.bs.table', { sender: this }), [name, args]);\n    }\n\n    resetHeader() {\n        // fix #61: the hidden table reset header bug.\n        // fix bug: get $el.css('width') error sometime (height = 500)\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(() => this.fitHeader(), this.$el.is(':hidden') ? 100 : 0);\n    }\n\n    fitHeader() {\n        if (this.$el.is(':hidden')) {\n            this.timeoutId_ = setTimeout(() => this.fitHeader(), 100);\n            return;\n        }\n\n        const fixedBody = this.$tableBody.get(0);\n        const scrollWidth = this.hasScrollBar &&\n            fixedBody.scrollHeight > fixedBody.clientHeight + this.$header.outerHeight() ?\n            Utils.getScrollBarWidth() : 0;\n\n        this.$el.css('margin-top', -this.$header.outerHeight());\n\n        const focused = $(':focus');\n\n        if (focused.length > 0) {\n            const $th = focused.parents('th');\n\n            if ($th.length > 0) {\n                const dataField = $th.attr('data-field');\n\n                if (dataField !== undefined) {\n                    const $headerTh = this.$header.find(`[data-field='${dataField}']`);\n\n                    if ($headerTh.length > 0) {\n                        $headerTh.find(':input').addClass('focus-temp');\n                    }\n                }\n            }\n        }\n\n        this.$header_ = this.$header.clone(true, true);\n        this.$selectAll_ = this.$header_.find('[name=\"btSelectAll\"]');\n        this.$tableHeader\n            .css('margin-right', scrollWidth)\n            .find('table').css('width', this.$el.outerWidth())\n            .html('').attr('class', this.$el.attr('class'))\n            .append(this.$header_);\n\n        this.$tableLoading.css('width', this.$el.outerWidth());\n\n        const focusedTemp = $('.focus-temp:visible:eq(0)');\n\n        if (focusedTemp.length > 0) {\n            focusedTemp.focus();\n            this.$header.find('.focus-temp').removeClass('focus-temp');\n        }\n\n        // fix bug: $.data() is not working as expected after $.append()\n        this.$header.find('th[data-field]').each((i, el) => {\n            this.$header_.find(Utils.sprintf('th[data-field=\"%s\"]', $(el).data('field'))).data($(el).data());\n        });\n\n        const visibleFields = this.getVisibleFields();\n        const $ths = this.$header_.find('th');\n        let $tr = this.$body.find('>tr:not(.no-records-found,.virtual-scroll-top)').eq(0);\n\n        while ($tr.length && $tr.find('>td[colspan]:not([colspan=\"1\"])').length) {\n            $tr = $tr.next();\n        }\n\n        const trLength = $tr.find('> *').length;\n\n        $tr.find('> *').each((i, el) => {\n            const $this = $(el);\n\n            if (Utils.hasDetailViewIcon(this.options)) {\n                if (\n                    i === 0 && this.options.detailViewAlign !== 'right' ||\n                    i === trLength - 1 && this.options.detailViewAlign === 'right'\n                ) {\n                    const $thDetail = $ths.filter('.detail');\n                    const zoomWidth = $thDetail.innerWidth() - $thDetail.find('.fht-cell').width();\n\n                    $thDetail.find('.fht-cell').width($this.innerWidth() - zoomWidth);\n                    return;\n                }\n            }\n\n            const index = i - Utils.getDetailViewIndexOffset(this.options);\n            let $th = this.$header_.find(Utils.sprintf('th[data-field=\"%s\"]', visibleFields[index]));\n\n            if ($th.length > 1) {\n                $th = $($ths[$this[0].cellIndex]);\n            }\n\n            const zoomWidth = $th.innerWidth() - $th.find('.fht-cell').width();\n\n            $th.find('.fht-cell').width($this.innerWidth() - zoomWidth);\n        });\n\n        this.horizontalScroll();\n        this.trigger('post-header');\n    }\n\n    initFooter() {\n        if (!this.options.showFooter || this.options.cardView) { // do nothing\n            return;\n        }\n\n        const data = this.getData();\n        const html = [];\n        let detailTemplate = '';\n\n        if (Utils.hasDetailViewIcon(this.options)) {\n            detailTemplate = '<th class=\"detail\"><div class=\"th-inner\"></div><div class=\"fht-cell\"></div></th>';\n        }\n\n        if (detailTemplate && this.options.detailViewAlign !== 'right') {\n            html.push(detailTemplate);\n        }\n\n        for (const column of this.columns) {\n            let falign = '';\n            let valign = '';\n            const csses = [];\n            let style = {};\n            let class_ = Utils.sprintf(' class=\"%s\"', column['class']);\n\n            if (\n                !column.visible ||\n                (this.footerData && this.footerData.length > 0 && !(column.field in this.footerData[0]))\n            ) {\n                continue;\n            }\n\n            if (this.options.cardView && (!column.cardVisible)) {\n                return;\n            }\n\n            falign = Utils.sprintf('text-align: %s; ', column.falign ? column.falign : column.align);\n            valign = Utils.sprintf('vertical-align: %s; ', column.valign);\n\n            style = Utils.calculateObjectValue(null, this.options.footerStyle, [column]);\n\n            if (style && style.css) {\n                for (const [key, value] of Object.entries(style.css)) {\n                    csses.push(`${key}: ${value}`);\n                }\n            }\n            if (style && style.classes) {\n                class_ = Utils.sprintf(' class=\"%s\"', column['class'] ?\n                    [column['class'], style.classes].join(' ') : style.classes);\n            }\n\n            html.push('<th', class_, Utils.sprintf(' style=\"%s\"', falign + valign + csses.concat().join('; ')));\n            let colspan = 0;\n\n            if (this.footerData && this.footerData.length > 0) {\n                colspan = this.footerData[0][`_${column.field}_colspan`] || 0;\n            }\n            if (colspan) {\n                html.push(` colspan=\"${colspan}\" `);\n            }\n\n            html.push('>');\n            html.push('<div class=\"th-inner\">');\n\n            let value = '';\n\n            if (this.footerData && this.footerData.length > 0) {\n                value = this.footerData[0][column.field] || '';\n            }\n            html.push(Utils.calculateObjectValue(column, column.footerFormatter,\n                [data, value], value));\n\n            html.push('</div>');\n            html.push('<div class=\"fht-cell\"></div>');\n            html.push('</div>');\n            html.push('</th>');\n        }\n\n        if (detailTemplate && this.options.detailViewAlign === 'right') {\n            html.push(detailTemplate);\n        }\n\n        if (!this.options.height && !this.$tableFooter.length) {\n            this.$el.append('<tfoot><tr></tr></tfoot>');\n            this.$tableFooter = this.$el.find('tfoot');\n        }\n\n        if (!this.$tableFooter.find('tr').length) {\n            this.$tableFooter.html('<table><thead><tr></tr></thead></table>');\n        }\n\n        this.$tableFooter.find('tr').html(html.join(''));\n\n        this.trigger('post-footer', this.$tableFooter);\n    }\n\n    fitFooter() {\n        if (this.$el.is(':hidden')) {\n            setTimeout(() => this.fitFooter(), 100);\n            return;\n        }\n\n        const fixedBody = this.$tableBody.get(0);\n        const scrollWidth = this.hasScrollBar &&\n            fixedBody.scrollHeight > fixedBody.clientHeight + this.$header.outerHeight() ?\n            Utils.getScrollBarWidth() : 0;\n\n        this.$tableFooter\n            .css('margin-right', scrollWidth)\n            .find('table').css('width', this.$el.outerWidth())\n            .attr('class', this.$el.attr('class'));\n\n        const $ths = this.$tableFooter.find('th');\n        let $tr = this.$body.find('>tr:first-child:not(.no-records-found)');\n\n        $ths.find('.fht-cell').width('auto');\n\n        while ($tr.length && $tr.find('>td[colspan]:not([colspan=\"1\"])').length) {\n            $tr = $tr.next();\n        }\n\n        const trLength = $tr.find('> *').length;\n\n        $tr.find('> *').each((i, el) => {\n            const $this = $(el);\n\n            if (Utils.hasDetailViewIcon(this.options)) {\n                if (\n                    i === 0 && this.options.detailViewAlign === 'left' ||\n                    i === trLength - 1 && this.options.detailViewAlign === 'right'\n                ) {\n                    const $thDetail = $ths.filter('.detail');\n                    const zoomWidth = $thDetail.innerWidth() - $thDetail.find('.fht-cell').width();\n\n                    $thDetail.find('.fht-cell').width($this.innerWidth() - zoomWidth);\n                    return;\n                }\n            }\n\n            const $th = $ths.eq(i);\n            const zoomWidth = $th.innerWidth() - $th.find('.fht-cell').width();\n\n            $th.find('.fht-cell').width($this.innerWidth() - zoomWidth);\n        });\n\n        this.horizontalScroll();\n    }\n\n    horizontalScroll() {\n        // horizontal scroll event\n        // TODO: it's probably better improving the layout than binding to scroll event\n        this.$tableBody.off('scroll').on('scroll', () => {\n            const scrollLeft = this.$tableBody.scrollLeft();\n\n            if (this.options.showHeader && this.options.height) {\n                this.$tableHeader.scrollLeft(scrollLeft);\n            }\n\n            if (this.options.showFooter && !this.options.cardView) {\n                this.$tableFooter.scrollLeft(scrollLeft);\n            }\n\n            this.trigger('scroll-body', this.$tableBody);\n        });\n    }\n\n    getVisibleFields() {\n        const visibleFields = [];\n\n        for (const field of this.header.fields) {\n            const column = this.columns[this.fieldsColumnsIndex[field]];\n\n            if (!column || !column.visible || (this.options.cardView && !column.cardVisible)) {\n                continue;\n            }\n            visibleFields.push(field);\n        }\n        return visibleFields;\n    }\n\n    initHiddenRows() {\n        this.hiddenRows = [];\n    }\n\n    // PUBLIC FUNCTION DEFINITION\n    // =======================\n\n    getOptions() {\n        // deep copy and remove data\n        const options = $.extend({}, this.options);\n\n        delete options.data;\n        return $.extend(true, {}, options);\n    }\n\n    refreshOptions(options) {\n        // If the objects are equivalent then avoid the call of destroy / init methods\n        if (Utils.compareObjects(this.options, options, true)) {\n            return;\n        }\n        this.options = $.extend(this.options, options);\n        this.trigger('refresh-options', this.options);\n        this.destroy();\n        this.init();\n    }\n\n    getData(params) {\n        let data = this.options.data;\n\n        if (\n            (\n                this.searchText ||\n                this.options.customSearch ||\n                this.options.sortName !== undefined ||\n                this.enableCustomSort || // Fix #4616: this.enableCustomSort is for extensions\n                !Utils.isEmptyObject(this.filterColumns) ||\n                typeof this.options.filterOptions.filterAlgorithm === 'function' ||\n                !Utils.isEmptyObject(this.filterColumnsPartial)\n            ) && (!params || !params.unfiltered)\n        ) {\n            data = this.data;\n        }\n\n        if (params && params.useCurrentPage) {\n            data = data.slice(this.pageFrom - 1, this.pageTo);\n        }\n\n        if (params && !params.includeHiddenRows) {\n            const hiddenRows = this.getHiddenRows();\n\n            data = data.filter(row => Utils.findIndex(hiddenRows, row) === -1);\n        }\n\n        if (params && params.formatted) {\n            data.forEach(row => {\n                for (const [key, value] of Object.entries(row)) {\n                    const column = this.columns[this.fieldsColumnsIndex[key]];\n\n                    if (!column) {\n                        return;\n                    }\n\n                    row[key] = Utils.calculateObjectValue(column, this.header.formatters[column.fieldIndex], [value, row, row.index, column.field], value);\n                }\n            });\n        }\n\n        return data;\n    }\n\n    getSelections() {\n        return (this.options.maintainMetaData ? this.options.data : this.data)\n            .filter(row => row[this.header.stateField] === true);\n    }\n\n    load(_data) {\n        let fixedScroll = false;\n        let data = _data;\n\n        // #431: support pagination\n        if (this.options.pagination && this.options.sidePagination === 'server') {\n            this.options.totalRows = data[this.options.totalField];\n            this.options.totalNotFiltered = data[this.options.totalNotFilteredField];\n            this.footerData = data[this.options.footerField] ? [data[this.options.footerField]] : undefined;\n        }\n\n        fixedScroll = data.fixedScroll;\n        data = Array.isArray(data) ? data : data[this.options.dataField];\n\n        this.initData(data);\n        this.initSearch();\n        this.initPagination();\n        this.initBody(fixedScroll);\n    }\n\n    append(data) {\n        this.initData(data, 'append');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    }\n\n    prepend(data) {\n        this.initData(data, 'prepend');\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    }\n\n    remove(params) {\n        let removed = 0;\n\n        for (let i = this.options.data.length - 1; i >= 0; i--) {\n\n            const row = this.options.data[i];\n            const value = Utils.getItemField(row, params.field, this.options.escape, row.escape);\n\n            if (value === undefined && params.field !== '$index') {\n                continue;\n            }\n\n            if (\n                !row.hasOwnProperty(params.field) &&\n                params.field === '$index' &&\n                params.values.includes(i) ||\n                params.values.includes(value)\n            ) {\n                removed++;\n\n                this.options.data.splice(i, 1);\n            }\n        }\n\n        if (!removed) {\n            return;\n        }\n\n        if (this.options.sidePagination === 'server') {\n            this.options.totalRows -= removed;\n            this.data = [...this.options.data];\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    }\n\n    removeAll() {\n        if (this.options.data.length > 0) {\n            this.options.data.splice(0, this.options.data.length);\n            this.initSearch();\n            this.initPagination();\n            this.initBody(true);\n        }\n    }\n\n    insertRow(params) {\n        if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n            return;\n        }\n        this.options.data.splice(params.index, 0, params.row);\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    }\n\n    updateRow(params) {\n        const allParams = Array.isArray(params) ? params : [params];\n\n        for (const params of allParams) {\n            if (!params.hasOwnProperty('index') || !params.hasOwnProperty('row')) {\n                continue;\n            }\n\n            if (params.hasOwnProperty('replace') && params.replace) {\n                this.options.data[params.index] = params.row;\n            } else {\n                $.extend(this.options.data[params.index], params.row);\n            }\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true);\n    }\n\n    getRowByUniqueId(_id) {\n        const uniqueId = this.options.uniqueId;\n        const len = this.options.data.length;\n        let id = _id;\n        let dataRow = null;\n        let i;\n        let row;\n\n        for (i = len - 1; i >= 0; i--) {\n            row = this.options.data[i];\n            const rowUniqueId = Utils.getItemField(row, uniqueId, this.options.escape, row.escape);\n\n            if (rowUniqueId === undefined) {\n                continue;\n            }\n\n            if (typeof rowUniqueId === 'string') {\n                id = id.toString();\n            } else if (typeof rowUniqueId === 'number') {\n                if ((Number(rowUniqueId) === rowUniqueId) && (rowUniqueId % 1 === 0)) {\n                    id = parseInt(id, 10);\n                } else if ((rowUniqueId === Number(rowUniqueId)) && (rowUniqueId !== 0)) {\n                    id = parseFloat(id);\n                }\n            }\n\n            if (rowUniqueId === id) {\n                dataRow = row;\n                break;\n            }\n        }\n\n        return dataRow;\n    }\n\n    updateByUniqueId(params) {\n        const allParams = Array.isArray(params) ? params : [params];\n        let updatedUid = null;\n\n        for (const params of allParams) {\n            if (!params.hasOwnProperty('id') || !params.hasOwnProperty('row')) {\n                continue;\n            }\n\n            const rowId = this.options.data.indexOf(this.getRowByUniqueId(params.id));\n\n            if (rowId === -1) {\n                continue;\n            }\n\n            if (params.hasOwnProperty('replace') && params.replace) {\n                this.options.data[rowId] = params.row;\n            } else {\n                $.extend(this.options.data[rowId], params.row);\n            }\n            updatedUid = params.id;\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initSort();\n        this.initBody(true, updatedUid);\n    }\n\n    removeByUniqueId(id) {\n        const len = this.options.data.length;\n        const row = this.getRowByUniqueId(id);\n\n        if (row) {\n            this.options.data.splice(this.options.data.indexOf(row), 1);\n        }\n\n        if (len === this.options.data.length) {\n            return;\n        }\n\n        if (this.options.sidePagination === 'server') {\n            this.options.totalRows -= 1;\n            this.data = [...this.options.data];\n        }\n\n        this.initSearch();\n        this.initPagination();\n        this.initBody(true);\n    }\n\n    _updateCellOnly(field, index) {\n        const rowHtml = this.initRow(this.options.data[index], index);\n        let fieldIndex = this.getVisibleFields().indexOf(field);\n\n        if (fieldIndex === -1) {\n            return;\n        }\n\n        fieldIndex += Utils.getDetailViewIndexOffset(this.options);\n\n        this.$body.find(`>tr[data-index=${index}]`)\n            .find(`>td:eq(${fieldIndex})`)\n            .replaceWith($(rowHtml).find(`>td:eq(${fieldIndex})`));\n\n        this.initBodyEvent();\n        this.initFooter();\n        this.resetView();\n        this.updateSelected();\n    }\n\n    updateCell(params) {\n        if (!params.hasOwnProperty('index') ||\n            !params.hasOwnProperty('field') ||\n            !params.hasOwnProperty('value')) {\n            return;\n        }\n        this.options.data[params.index][params.field] = params.value;\n\n        if (params.reinit === false) {\n            this._updateCellOnly(params.field, params.index);\n            return;\n        }\n        this.initSort();\n        this.initBody(true);\n    }\n\n    updateCellByUniqueId(params) {\n        const allParams = Array.isArray(params) ? params : [params];\n\n        allParams.forEach(({ id, field, value }) => {\n            const index = this.options.data.indexOf(this.getRowByUniqueId(id));\n\n            if (index === -1) {\n                return;\n            }\n            this.options.data[index][field] = value;\n        });\n\n        if (params.reinit === false) {\n            this._updateCellOnly(params.field,\n                this.options.data.indexOf(this.getRowByUniqueId(params.id)));\n            return;\n        }\n        this.initSort();\n        this.initBody(true);\n    }\n\n    showRow(params) {\n        this._toggleRow(params, true);\n    }\n\n    hideRow(params) {\n        this._toggleRow(params, false);\n    }\n\n    _toggleRow(params, visible) {\n        let row;\n\n        if (params.hasOwnProperty('index')) {\n            row = this.getData()[params.index];\n        } else if (params.hasOwnProperty('uniqueId')) {\n            row = this.getRowByUniqueId(params.uniqueId);\n        }\n\n        if (!row) {\n            return;\n        }\n\n        const index = Utils.findIndex(this.hiddenRows, row);\n\n        if (!visible && index === -1) {\n            this.hiddenRows.push(row);\n        } else if (visible && index > -1) {\n            this.hiddenRows.splice(index, 1);\n        }\n\n        this.initBody(true);\n        this.initPagination();\n    }\n\n    getHiddenRows(show) {\n        if (show) {\n            this.initHiddenRows();\n            this.initBody(true);\n            this.initPagination();\n            return;\n        }\n        const data = this.getData();\n        const rows = [];\n\n        for (const row of data) {\n            if (this.hiddenRows.includes(row)) {\n                rows.push(row);\n            }\n        }\n        this.hiddenRows = rows;\n        return rows;\n    }\n\n    showColumn(field) {\n        const fields = Array.isArray(field) ? field : [field];\n\n        fields.forEach(field => {\n            this._toggleColumn(this.fieldsColumnsIndex[field], true, true);\n        });\n    }\n\n    hideColumn(field) {\n        const fields = Array.isArray(field) ? field : [field];\n\n        fields.forEach(field => {\n            this._toggleColumn(this.fieldsColumnsIndex[field], false, true);\n        });\n    }\n\n    _toggleColumn(index, checked, needUpdate) {\n        if (index === -1 || this.columns[index].visible === checked) {\n            return;\n        }\n        this.columns[index].visible = checked;\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n\n        if (this.options.showColumns) {\n            const $items = this.$toolbar.find('.keep-open input:not(\".toggle-all\")').prop('disabled', false);\n\n            if (needUpdate) {\n                $items.filter(Utils.sprintf('[value=\"%s\"]', index)).prop('checked', checked);\n            }\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    }\n\n    getVisibleColumns() {\n        return this.columns.filter(column => column.visible && !this.isSelectionColumn(column));\n    }\n\n    getHiddenColumns() {\n        return this.columns.filter(({ visible }) => !visible);\n    }\n\n    isSelectionColumn(column) {\n        return column.radio || column.checkbox;\n    }\n\n    showAllColumns() {\n        this._toggleAllColumns(true);\n    }\n\n    hideAllColumns() {\n        this._toggleAllColumns(false);\n    }\n\n    _toggleAllColumns(visible) {\n        for (const column of this.columns.slice().reverse()) {\n            if (column.switchable) {\n                if (\n                    !visible &&\n                    this.options.showColumns &&\n                    this.getVisibleColumns().filter(it => it.switchable).length === this.options.minimumCountColumns\n                ) {\n                    continue;\n                }\n                column.visible = visible;\n            }\n        }\n\n        this.initHeader();\n        this.initSearch();\n        this.initPagination();\n        this.initBody();\n        if (this.options.showColumns) {\n            const $items = this.$toolbar.find('.keep-open input[type=\"checkbox\"]:not(\".toggle-all\")').prop('disabled', false);\n\n            if (visible) {\n                $items.prop('checked', visible);\n            } else {\n                $items.get().reverse().forEach(item => {\n                    if ($items.filter(':checked').length > this.options.minimumCountColumns) {\n                        $(item).prop('checked', visible);\n                    }\n                });\n            }\n\n            if ($items.filter(':checked').length <= this.options.minimumCountColumns) {\n                $items.filter(':checked').prop('disabled', true);\n            }\n        }\n    }\n\n    mergeCells(options) {\n        const row = options.index;\n        let col = this.getVisibleFields().indexOf(options.field);\n        const rowspan = options.rowspan || 1;\n        const colspan = options.colspan || 1;\n        let i;\n        let j;\n        const $tr = this.$body.find('>tr[data-index]');\n\n        col += Utils.getDetailViewIndexOffset(this.options);\n\n        const $td = $tr.eq(row).find('>td').eq(col);\n\n        if (row < 0 || col < 0 || row >= this.data.length) {\n            return;\n        }\n\n        for (i = row; i < row + rowspan; i++) {\n            for (j = col; j < col + colspan; j++) {\n                $tr.eq(i).find('>td').eq(j).hide();\n            }\n        }\n\n        $td.attr('rowspan', rowspan).attr('colspan', colspan).show();\n    }\n\n    checkAll() {\n        this._toggleCheckAll(true);\n    }\n\n    uncheckAll() {\n        this._toggleCheckAll(false);\n    }\n\n    _toggleCheckAll(checked) {\n        const rowsBefore = this.getSelections();\n\n        this.$selectAll.add(this.$selectAll_).prop('checked', checked);\n        this.$selectItem.filter(':enabled').prop('checked', checked);\n        this.updateRows();\n        this.updateSelected();\n\n        const rowsAfter = this.getSelections();\n\n        if (checked) {\n            this.trigger('check-all', rowsAfter, rowsBefore);\n            return;\n        }\n\n        this.trigger('uncheck-all', rowsAfter, rowsBefore);\n    }\n\n    checkInvert() {\n        const $items = this.$selectItem.filter(':enabled');\n        let checked = $items.filter(':checked');\n\n        $items.each((i, el) => {\n            $(el).prop('checked', !$(el).prop('checked'));\n        });\n        this.updateRows();\n        this.updateSelected();\n        this.trigger('uncheck-some', checked);\n        checked = this.getSelections();\n        this.trigger('check-some', checked);\n    }\n\n    check(index) {\n        this._toggleCheck(true, index);\n    }\n\n    uncheck(index) {\n        this._toggleCheck(false, index);\n    }\n\n    _toggleCheck(checked, index) {\n        const $el = this.$selectItem.filter(`[data-index=\"${index}\"]`);\n        const row = this.data[index];\n\n        if (\n            $el.is(':radio') ||\n            this.options.singleSelect ||\n            this.options.multipleSelectRow &&\n            !this.multipleSelectRowCtrlKey &&\n            !this.multipleSelectRowShiftKey\n        ) {\n            for (const r of this.options.data) {\n                r[this.header.stateField] = false;\n            }\n            this.$selectItem.filter(':checked').not($el).prop('checked', false);\n        }\n\n        row[this.header.stateField] = checked;\n\n        if (this.options.multipleSelectRow) {\n            if (this.multipleSelectRowShiftKey && this.multipleSelectRowLastSelectedIndex >= 0) {\n                const [fromIndex, toIndex] = this.multipleSelectRowLastSelectedIndex < index ?\n                    [this.multipleSelectRowLastSelectedIndex, index] : [index, this.multipleSelectRowLastSelectedIndex];\n\n                for (let i = fromIndex + 1; i < toIndex; i++) {\n                    this.data[i][this.header.stateField] = true;\n                    this.$selectItem.filter(`[data-index=\"${i}\"]`).prop('checked', true);\n                }\n            }\n\n            this.multipleSelectRowCtrlKey = false;\n            this.multipleSelectRowShiftKey = false;\n            this.multipleSelectRowLastSelectedIndex = checked ? index : -1;\n        }\n\n        $el.prop('checked', checked);\n        this.updateSelected();\n        this.trigger(checked ? 'check' : 'uncheck', this.data[index], $el);\n    }\n\n    checkBy(obj) {\n        this._toggleCheckBy(true, obj);\n    }\n\n    uncheckBy(obj) {\n        this._toggleCheckBy(false, obj);\n    }\n\n    _toggleCheckBy(checked, obj) {\n        if (!obj.hasOwnProperty('field') || !obj.hasOwnProperty('values')) {\n            return;\n        }\n\n        const rows = [];\n\n        this.data.forEach((row, i) => {\n            if (!row.hasOwnProperty(obj.field)) {\n                return false;\n            }\n            if (obj.values.includes(row[obj.field])) {\n                let $el = this.$selectItem.filter(':enabled')\n                    .filter(Utils.sprintf('[data-index=\"%s\"]', i));\n                const onlyCurrentPage = obj.hasOwnProperty('onlyCurrentPage') ? obj.onlyCurrentPage : false;\n\n                $el = checked ? $el.not(':checked') : $el.filter(':checked');\n\n                if (!$el.length && onlyCurrentPage) {\n                    return;\n                }\n\n                $el.prop('checked', checked);\n                row[this.header.stateField] = checked;\n                rows.push(row);\n                this.trigger(checked ? 'check' : 'uncheck', row, $el);\n            }\n        });\n        this.updateSelected();\n        this.trigger(checked ? 'check-some' : 'uncheck-some', rows);\n    }\n\n    refresh(params) {\n        if (params && params.url) {\n            this.options.url = params.url;\n        }\n        if (params && params.pageNumber) {\n            this.options.pageNumber = params.pageNumber;\n        }\n        if (params && params.pageSize) {\n            this.options.pageSize = params.pageSize;\n        }\n        this.trigger('refresh', this.initServer(params && params.silent,\n            params && params.query, params && params.url));\n    }\n\n    destroy() {\n        this.$el.insertBefore(this.$container);\n        $(this.options.toolbar).insertBefore(this.$el);\n        this.$container.next().remove();\n        this.$container.remove();\n        this.$el.html(this.$el_.html())\n            .css('margin-top', '0')\n            .attr('class', this.$el_.attr('class') || ''); // reset the class\n\n        const resizeEvent = Utils.getEventName('resize.bootstrap-table', this.$el.attr('id'));\n\n        $(window).off(resizeEvent);\n    }\n\n    resetView(params) {\n        let padding = 0;\n\n        if (params && params.height) {\n            this.options.height = params.height;\n        }\n\n        this.$tableContainer.toggleClass('has-card-view', this.options.cardView);\n\n        if (this.options.height) {\n            const fixedBody = this.$tableBody.get(0);\n\n            this.hasScrollBar = fixedBody.scrollWidth > fixedBody.clientWidth;\n        }\n\n        if (!this.options.cardView && this.options.showHeader && this.options.height) {\n            this.$tableHeader.show();\n            this.resetHeader();\n            padding += this.$header.outerHeight(true) + 1;\n        } else {\n            this.$tableHeader.hide();\n            this.trigger('post-header');\n        }\n\n        if (!this.options.cardView && this.options.showFooter) {\n            this.$tableFooter.show();\n            this.fitFooter();\n            if (this.options.height) {\n                padding += this.$tableFooter.outerHeight(true);\n            }\n        }\n\n        if (this.$container.hasClass('fullscreen')) {\n            this.$tableContainer.css('height', '');\n            this.$tableContainer.css('width', '');\n        } else if (this.options.height) {\n            if (this.$tableBorder) {\n                this.$tableBorder.css('width', '');\n                this.$tableBorder.css('height', '');\n            }\n\n            const toolbarHeight = this.$toolbar.outerHeight(true);\n            const paginationHeight = this.$pagination.outerHeight(true);\n            const height = this.options.height - toolbarHeight - paginationHeight;\n            const $bodyTable = this.$tableBody.find('>table');\n            const tableHeight = $bodyTable.outerHeight();\n\n            this.$tableContainer.css('height', `${height}px`);\n\n            if (this.$tableBorder && $bodyTable.is(':visible')) {\n                let tableBorderHeight = height - tableHeight - 2;\n\n                if (this.hasScrollBar) {\n                    tableBorderHeight -= Utils.getScrollBarWidth();\n                }\n                this.$tableBorder.css('width', `${$bodyTable.outerWidth()}px`);\n                this.$tableBorder.css('height', `${tableBorderHeight}px`);\n            }\n        }\n\n        if (this.options.cardView) {\n            // remove the element css\n            this.$el.css('margin-top', '0');\n            this.$tableContainer.css('padding-bottom', '0');\n            this.$tableFooter.hide();\n        } else {\n            // Assign the correct sortable arrow\n            this.getCaret();\n            this.$tableContainer.css('padding-bottom', `${padding}px`);\n        }\n\n        this.trigger('reset-view');\n    }\n\n    showLoading() {\n        this.$tableLoading.toggleClass('open', true);\n\n        let fontSize = this.options.loadingFontSize;\n\n        if (this.options.loadingFontSize === 'auto') {\n            fontSize = this.$tableLoading.width() * 0.04;\n            fontSize = Math.max(12, fontSize);\n            fontSize = Math.min(32, fontSize);\n            fontSize = `${fontSize}px`;\n        }\n\n        this.$tableLoading.find('.loading-text').css('font-size', fontSize);\n    }\n\n    hideLoading() {\n        this.$tableLoading.toggleClass('open', false);\n    }\n\n    togglePagination() {\n        this.options.pagination = !this.options.pagination;\n\n        const icon = this.options.showButtonIcons ? this.options.pagination ? this.options.icons.paginationSwitchDown : this.options.icons.paginationSwitchUp : '';\n        const text = this.options.showButtonText ? this.options.pagination ? this.options.formatPaginationSwitchUp() : this.options.formatPaginationSwitchDown() : '';\n\n        this.$toolbar.find('button[name=\"paginationSwitch\"]')\n            .html(`${Utils.sprintf(this.constants.html.icon, this.options.iconsPrefix, icon)} ${text}`);\n        this.updatePagination();\n        this.trigger('toggle-pagination', this.options.pagination);\n    }\n\n    toggleFullscreen() {\n        this.$el.closest('.bootstrap-table').toggleClass('fullscreen');\n        this.resetView();\n    }\n\n    toggleView() {\n        this.options.cardView = !this.options.cardView;\n        this.initHeader();\n\n        const icon = this.options.showButtonIcons ? this.options.cardView ? this.options.icons.toggleOn : this.options.icons.toggleOff : '';\n        const text = this.options.showButtonText ? this.options.cardView ? this.options.formatToggleOff() : this.options.formatToggleOn() : '';\n\n        this.$toolbar.find('button[name=\"toggle\"]')\n            .html(`${Utils.sprintf(this.constants.html.icon, this.options.iconsPrefix, icon)} ${text}`)\n            .attr('aria-label', text)\n            .attr('title', text);\n\n        this.initBody();\n        this.trigger('toggle', this.options.cardView);\n    }\n\n    resetSearch(text) {\n        const $search = Utils.getSearchInput(this);\n\n        const textToUse = text || '';\n\n        $search.val(textToUse);\n        this.searchText = textToUse;\n        this.onSearch({ currentTarget: $search }, false);\n    }\n\n    filterBy(columns, options) {\n        this.filterOptions = Utils.isEmptyObject(options) ? this.options.filterOptions : $.extend(this.options.filterOptions, options);\n        this.filterColumns = Utils.isEmptyObject(columns) ? {} : columns;\n        this.options.pageNumber = 1;\n        this.initSearch();\n        this.updatePagination();\n    }\n\n    scrollTo(params) {\n        let options = { unit: 'px', value: 0 };\n\n        if (typeof params === 'object') {\n            options = Object.assign(options, params);\n        } else if (typeof params === 'string' && params === 'bottom') {\n            options.value = this.$tableBody[0].scrollHeight;\n        } else if (typeof params === 'string' || typeof params === 'number') {\n            options.value = params;\n        }\n\n        let scrollTo = options.value;\n\n        if (options.unit === 'rows') {\n            scrollTo = 0;\n            this.$body.find(`> tr:lt(${options.value})`).each((i, el) => {\n                scrollTo += $(el).outerHeight(true);\n            });\n        }\n\n        this.$tableBody.scrollTop(scrollTo);\n    }\n\n    getScrollPosition() {\n        return this.$tableBody.scrollTop();\n    }\n\n    selectPage(page) {\n        if (page > 0 && page <= this.options.totalPages) {\n            this.options.pageNumber = page;\n            this.updatePagination();\n        }\n    }\n\n    prevPage() {\n        if (this.options.pageNumber > 1) {\n            this.options.pageNumber--;\n            this.updatePagination();\n        }\n    }\n\n    nextPage() {\n        if (this.options.pageNumber < this.options.totalPages) {\n            this.options.pageNumber++;\n            this.updatePagination();\n        }\n    }\n\n    toggleDetailView(index, _columnDetailFormatter) {\n        const $tr = this.$body.find(Utils.sprintf('> tr[data-index=\"%s\"]', index));\n\n        if ($tr.next().is('tr.detail-view')) {\n            this.collapseRow(index);\n        } else {\n            this.expandRow(index, _columnDetailFormatter);\n        }\n\n        this.resetView();\n    }\n\n    expandRow(index, _columnDetailFormatter) {\n        const row = this.data[index];\n        const $tr = this.$body.find(Utils.sprintf('> tr[data-index=\"%s\"][data-has-detail-view]', index));\n\n        if (this.options.detailViewIcon) {\n            $tr.find('a.detail-icon').html(Utils.sprintf(this.constants.html.icon, this.options.iconsPrefix, this.options.icons.detailClose));\n        }\n\n        if ($tr.next().is('tr.detail-view')) {\n            return;\n        }\n\n        $tr.after(Utils.sprintf('<tr class=\"detail-view\"><td colspan=\"%s\"></td></tr>', $tr.children('td').length));\n\n        const $element = $tr.next().find('td');\n\n        const detailFormatter = _columnDetailFormatter || this.options.detailFormatter;\n        const content = Utils.calculateObjectValue(this.options, detailFormatter, [index, row, $element], '');\n\n        if ($element.length === 1) {\n            $element.append(content);\n        }\n\n        this.trigger('expand-row', index, row, $element);\n    }\n\n    expandRowByUniqueId(uniqueId) {\n        const row = this.getRowByUniqueId(uniqueId);\n\n        if (!row) {\n            return;\n        }\n\n        this.expandRow(this.data.indexOf(row));\n    }\n\n    collapseRow(index) {\n        const row = this.data[index];\n        const $tr = this.$body.find(Utils.sprintf('> tr[data-index=\"%s\"][data-has-detail-view]', index));\n\n        if (!$tr.next().is('tr.detail-view')) {\n            return;\n        }\n\n        if (this.options.detailViewIcon) {\n            $tr.find('a.detail-icon').html(Utils.sprintf(this.constants.html.icon, this.options.iconsPrefix, this.options.icons.detailOpen));\n        }\n\n        this.trigger('collapse-row', index, row, $tr.next());\n        $tr.next().remove();\n    }\n\n    collapseRowByUniqueId(uniqueId) {\n        const row = this.getRowByUniqueId(uniqueId);\n\n        if (!row) {\n            return;\n        }\n\n        this.collapseRow(this.data.indexOf(row));\n    }\n\n    expandAllRows() {\n        const trs = this.$body.find('> tr[data-index][data-has-detail-view]');\n\n        for (let i = 0; i < trs.length; i++) {\n            this.expandRow($(trs[i]).data('index'));\n        }\n    }\n\n    collapseAllRows() {\n        const trs = this.$body.find('> tr[data-index][data-has-detail-view]');\n\n        for (let i = 0; i < trs.length; i++) {\n            this.collapseRow($(trs[i]).data('index'));\n        }\n    }\n\n    updateColumnTitle(params) {\n        if (!params.hasOwnProperty('field') || !params.hasOwnProperty('title')) {\n            return;\n        }\n\n        this.columns[this.fieldsColumnsIndex[params.field]].title =\n            this.options.escape ? Utils.escapeHTML(params.title) : params.title;\n\n        if (this.columns[this.fieldsColumnsIndex[params.field]].visible) {\n            this.$header.find('th[data-field]').each((i, el) => {\n                if ($(el).data('field') === params.field) {\n                    $($(el).find('.th-inner')[0]).text(params.title);\n                    return false;\n                }\n            });\n\n            this.resetView();\n        }\n    }\n\n    updateFormatText(formatName, text) {\n        if (!/^format/.test(formatName) || !this.options[formatName]) {\n            return;\n        }\n        if (typeof text === 'string') {\n            this.options[formatName] = () => text;\n        } else if (typeof text === 'function') {\n            this.options[formatName] = text;\n        }\n        this.initToolbar();\n        this.initPagination();\n        this.initBody();\n    }\n}\n\nBootstrapTable.VERSION = Constants.VERSION;\nBootstrapTable.DEFAULTS = Constants.DEFAULTS;\nBootstrapTable.LOCALES = Constants.LOCALES;\nBootstrapTable.COLUMN_DEFAULTS = Constants.COLUMN_DEFAULTS;\nBootstrapTable.METHODS = Constants.METHODS;\nBootstrapTable.EVENTS = Constants.EVENTS;\n\n// BOOTSTRAP TABLE PLUGIN DEFINITION\n// =======================\n\n$.BootstrapTable = BootstrapTable;\n$.fn.bootstrapTable = function (option, ...args) {\n    let value;\n\n    this.each((i, el) => {\n        let data = $(el).data('bootstrap.table');\n        const options = $.extend({}, BootstrapTable.DEFAULTS, $(el).data(),\n            typeof option === 'object' && option);\n\n        if (typeof option === 'string') {\n            if (!Constants.METHODS.includes(option)) {\n                throw new Error(`Unknown method: ${option}`);\n            }\n\n            if (!data) {\n                return;\n            }\n\n            value = data[option](...args);\n\n            if (option === 'destroy') {\n                $(el).removeData('bootstrap.table');\n            }\n        }\n\n        if (!data) {\n            data = new $.BootstrapTable(el, options);\n            $(el).data('bootstrap.table', data);\n            data.init();\n        }\n    });\n\n    return typeof value === 'undefined' ? this : value;\n};\n\n$.fn.bootstrapTable.Constructor = BootstrapTable;\n$.fn.bootstrapTable.theme = Constants.THEME;\n$.fn.bootstrapTable.VERSION = Constants.VERSION;\n$.fn.bootstrapTable.defaults = BootstrapTable.DEFAULTS;\n$.fn.bootstrapTable.columnDefaults = BootstrapTable.COLUMN_DEFAULTS;\n$.fn.bootstrapTable.events = BootstrapTable.EVENTS;\n$.fn.bootstrapTable.locales = BootstrapTable.LOCALES;\n$.fn.bootstrapTable.methods = BootstrapTable.METHODS;\n$.fn.bootstrapTable.utils = Utils;\n\n// BOOTSTRAP TABLE INIT\n// =======================\n\n$(() => {\n    $('[data-toggle=\"table\"]').bootstrapTable();\n});\n\nexport default BootstrapTable;\n", "/**\n * @author zhixin wen <wenzhixin2010@gmail.com>\n * extensions: https://github.com/hhurz/tableExport.jquery.plugin\n */\n\nconst Utils = $.fn.bootstrapTable.utils\n\nconst TYPE_NAME = {\n  json: 'JSON',\n  xml: 'XML',\n  png: 'PNG',\n  csv: 'CSV',\n  txt: 'TXT',\n  sql: 'SQL',\n  doc: 'MS-Word',\n  excel: 'MS-Excel',\n  xlsx: 'MS-Excel (OpenXML)',\n  powerpoint: 'MS-Powerpoint',\n  pdf: 'PDF'\n}\n\nObject.assign($.fn.bootstrapTable.defaults, {\n  showExport: false,\n  exportDataType: 'basic', // basic, all, selected\n  exportTypes: ['json', 'xml', 'csv', 'txt', 'sql', 'excel'],\n  exportOptions: {},\n  exportFooter: false\n})\n\nObject.assign($.fn.bootstrapTable.columnDefaults, {\n  forceExport: false,\n  forceHide: false\n})\n\nObject.assign($.fn.bootstrapTable.defaults.icons, {\n  export: {\n    bootstrap3: 'glyphicon-export icon-share',\n    bootstrap5: 'bi-download',\n    materialize: 'file_download',\n    'bootstrap-table': 'icon-download'\n  }[$.fn.bootstrapTable.theme] || 'fa-download'\n})\n\nObject.assign($.fn.bootstrapTable.locales, {\n  formatExport () {\n    return 'Export data'\n  }\n})\nObject.assign($.fn.bootstrapTable.defaults, $.fn.bootstrapTable.locales)\n\n$.fn.bootstrapTable.methods.push('exportTable')\n\nObject.assign($.fn.bootstrapTable.defaults, {\n  // eslint-disable-next-line no-unused-vars\n  onExportSaved (exportedRows) {\n    return false\n  },\n  onExportStarted () {\n    return false\n  }\n})\n\nObject.assign($.fn.bootstrapTable.events, {\n  'export-saved.bs.table': 'onExportSaved',\n  'export-started.bs.table': 'onExportStarted'\n})\n\n$.BootstrapTable = class extends $.BootstrapTable {\n  initToolbar (...args) {\n    const o = this.options\n    let exportTypes = o.exportTypes\n\n    this.showToolbar = this.showToolbar || o.showExport\n\n    if (this.options.showExport) {\n\n      if (typeof exportTypes === 'string') {\n        const types = exportTypes.slice(1, -1).replace(/ /g, '').split(',')\n\n        exportTypes = types.map(t => t.slice(1, -1))\n      }\n\n      if (typeof o.exportOptions === 'string') {\n        o.exportOptions = Utils.calculateObjectValue(null, o.exportOptions)\n      }\n\n      this.$export = this.$toolbar.find('>.columns div.export')\n      if (this.$export.length) {\n        this.updateExportButton()\n        return\n      }\n\n      this.buttons = Object.assign(this.buttons, {\n        export: {\n          html:\n            () => {\n              if (exportTypes.length === 1) {\n                return `\n                  <div class=\"export ${this.constants.classes.buttonsDropdown}\"\n                  data-type=\"${exportTypes[0]}\">\n                  <button class=\"${this.constants.buttonsClass}\"\n                  aria-label=\"${o.formatExport()}\"\n                  type=\"button\"\n                  title=\"${o.formatExport()}\">\n                  ${o.showButtonIcons ? Utils.sprintf(this.constants.html.icon, o.iconsPrefix, o.icons.export) : ''}\n                  ${o.showButtonText ? o.formatExport() : ''}\n                  </button>\n                  </div>\n                `\n              }\n\n              const html = []\n\n              html.push(`\n                <div class=\"export ${this.constants.classes.buttonsDropdown}\">\n                <button class=\"${this.constants.buttonsClass} dropdown-toggle\"\n                aria-label=\"${o.formatExport()}\"\n                ${this.constants.dataToggle}=\"dropdown\"\n                type=\"button\"\n                title=\"${o.formatExport()}\">\n                ${o.showButtonIcons ? Utils.sprintf(this.constants.html.icon, o.iconsPrefix, o.icons.export) : ''}\n                ${o.showButtonText ? o.formatExport() : ''}\n                ${this.constants.html.dropdownCaret}\n                </button>\n                ${this.constants.html.toolbarDropdown[0]}\n              `)\n\n              for (const type of exportTypes) {\n                if (TYPE_NAME.hasOwnProperty(type)) {\n                  const $item = $(Utils.sprintf(this.constants.html.pageDropdownItem, '', TYPE_NAME[type]))\n\n                  $item.attr('data-type', type)\n                  html.push($item.prop('outerHTML'))\n                }\n              }\n\n              html.push(this.constants.html.toolbarDropdown[1], '</div>')\n              return html.join('')\n            }\n        }\n      })\n    }\n\n    super.initToolbar(...args)\n    this.$export = this.$toolbar.find('>.columns div.export')\n\n    if (!this.options.showExport) {\n      return\n    }\n\n    this.updateExportButton()\n    let $exportButtons = this.$export.find('[data-type]')\n\n    if (exportTypes.length === 1) {\n      $exportButtons = this.$export\n    }\n\n    $exportButtons.click(e => {\n      e.preventDefault()\n\n      this.exportTable({\n        type: $(e.currentTarget).data('type')\n      })\n    })\n    this.handleToolbar()\n  }\n\n  handleToolbar () {\n    if (!this.$export) {\n      return\n    }\n\n    if (super.handleToolbar) {\n      super.handleToolbar()\n    }\n  }\n\n  exportTable (options) {\n    const o = this.options\n    const stateField = this.header.stateField\n    const isCardView = o.cardView\n\n    const doExport = callback => {\n      this.trigger('export-started')\n      if (stateField) {\n        this.hideColumn(stateField)\n      }\n      if (isCardView) {\n        this.toggleView()\n      }\n\n      this.columns.forEach(row => {\n        if (row.forceHide) {\n          this.hideColumn(row.field)\n        }\n      })\n\n      const data = this.getData()\n\n      if (o.detailView && o.detailViewIcon) {\n        const detailViewIndex = o.detailViewAlign === 'left' ? 0 : this.getVisibleFields().length + Utils.getDetailViewIndexOffset(this.options)\n\n        o.exportOptions.ignoreColumn = [detailViewIndex].concat(o.exportOptions.ignoreColumn || [])\n      }\n\n      if (o.exportFooter && o.height) {\n        const $footerRow = this.$tableFooter.find('tr').first()\n        const footerData = {}\n        const footerHtml = []\n\n        $.each($footerRow.children(), (index, footerCell) => {\n          const footerCellHtml = $(footerCell).children('.th-inner').first().html()\n\n          footerData[this.columns[index].field] = footerCellHtml === '&nbsp;' ? null : footerCellHtml\n\n          // grab footer cell text into cell index-based array\n          footerHtml.push(footerCellHtml)\n        })\n\n        this.$body.append(this.$body.children().last()[0].outerHTML)\n        const $lastTableRow = this.$body.children().last()\n\n        $.each($lastTableRow.children(), (index, lastTableRowCell) => {\n          $(lastTableRowCell).html(footerHtml[index])\n        })\n      }\n\n      const hiddenColumns = this.getHiddenColumns()\n\n      hiddenColumns.forEach(row => {\n        if (row.forceExport) {\n          this.showColumn(row.field)\n        }\n      })\n\n      if (typeof o.exportOptions.fileName === 'function') {\n        options.fileName = o.exportOptions.fileName()\n      }\n\n      this.$el.tableExport(Utils.extend({\n        onAfterSaveToFile: () => {\n          if (o.exportFooter) {\n            this.load(data)\n          }\n\n          if (stateField) {\n            this.showColumn(stateField)\n          }\n          if (isCardView) {\n            this.toggleView()\n          }\n\n          hiddenColumns.forEach(row => {\n            if (row.forceExport) {\n              this.hideColumn(row.field)\n            }\n          })\n\n          this.columns.forEach(row => {\n            if (row.forceHide) {\n              this.showColumn(row.field)\n            }\n          })\n\n          if (callback) callback()\n        }\n      }, o.exportOptions, options))\n    }\n\n    if (o.exportDataType === 'all' && o.pagination) {\n      const eventName = o.sidePagination === 'server' ?\n        'post-body.bs.table' : 'page-change.bs.table'\n      const virtualScroll = this.options.virtualScroll\n\n      this.$el.one(eventName, () => {\n        setTimeout(() => {\n          doExport(() => {\n            this.options.virtualScroll = virtualScroll\n            this.togglePagination()\n          })\n        }, 0)\n      })\n      this.options.virtualScroll = false\n      this.togglePagination()\n      this.trigger('export-saved', this.getData())\n    } else if (o.exportDataType === 'selected') {\n      let data = this.getData()\n      let selectedData = this.getSelections()\n      const pagination = o.pagination\n\n      if (!selectedData.length) {\n        return\n      }\n\n      if (o.sidePagination === 'server') {\n        data = {\n          total: o.totalRows,\n          [this.options.dataField]: data\n        }\n        selectedData = {\n          total: selectedData.length,\n          [this.options.dataField]: selectedData\n        }\n      }\n\n      this.load(selectedData)\n      if (pagination) {\n        this.togglePagination()\n      }\n      doExport(() => {\n        if (pagination) {\n          this.togglePagination()\n        }\n        this.load(data)\n      })\n      this.trigger('export-saved', selectedData)\n    } else {\n      doExport()\n      this.trigger('export-saved', this.getData(true))\n    }\n  }\n\n  updateSelected () {\n    super.updateSelected()\n    this.updateExportButton()\n  }\n\n  updateExportButton () {\n    if (this.options.exportDataType === 'selected') {\n      this.$export.find('> button')\n        .prop('disabled', !this.getSelections().length)\n    }\n  }\n}\n", "/**\n * @author: Dennis Hern\u00E1ndez\n * @update zhixin wen <wenzhixin2010@gmail.com>\n */\n\nconst debounce = (func, wait) => {\n  let timeout = 0\n\n  return (...args) => {\n    const later = () => {\n      timeout = 0\n      func(...args)\n    }\n\n    clearTimeout(timeout)\n    timeout = setTimeout(later, wait)\n  }\n}\n\nObject.assign($.fn.bootstrapTable.defaults, {\n  mobileResponsive: false,\n  minWidth: 562,\n  minHeight: undefined,\n  heightThreshold: 100, // just slightly larger than mobile chrome's auto-hiding toolbar\n  checkOnInit: true,\n  columnsHidden: []\n})\n\n$.BootstrapTable = class extends $.BootstrapTable {\n  init (...args) {\n    super.init(...args)\n\n    if (!this.options.mobileResponsive || !this.options.minWidth) {\n      return\n    }\n\n    if (this.options.minWidth < 100 && this.options.resizable) {\n      console.warn('The minWidth when the resizable extension is active should be greater or equal than 100')\n      this.options.minWidth = 100\n    }\n\n    let old = {\n      width: $(window).width(),\n      height: $(window).height()\n    }\n\n    $(window).on('resize orientationchange', debounce(() => {\n      // reset view if height has only changed by at least the threshold.\n      const width = $(window).width()\n      const height = $(window).height()\n      const $activeElement = $(document.activeElement)\n\n      if ($activeElement.length && ['INPUT', 'SELECT', 'TEXTAREA'].includes($activeElement.prop('nodeName'))) {\n        return\n      }\n\n      if (\n        Math.abs(old.height - height) > this.options.heightThreshold ||\n        old.width !== width\n      ) {\n        this.changeView(width, height)\n        old = {\n          width,\n          height\n        }\n      }\n    }, 200))\n\n    if (this.options.checkOnInit) {\n      const width = $(window).width()\n      const height = $(window).height()\n\n      this.changeView(width, height)\n      old = {\n        width,\n        height\n      }\n    }\n  }\n\n  conditionCardView () {\n    this.changeTableView(false)\n    this.showHideColumns(false)\n  }\n\n  conditionFullView () {\n    this.changeTableView(true)\n    this.showHideColumns(true)\n  }\n\n  changeTableView (cardViewState) {\n    this.options.cardView = cardViewState\n    this.toggleView()\n  }\n\n  showHideColumns (checked) {\n    if (this.options.columnsHidden.length > 0) {\n      this.columns.forEach(column => {\n        if (this.options.columnsHidden.includes(column.field)) {\n          if (column.visible !== checked) {\n            this._toggleColumn(this.fieldsColumnsIndex[column.field], checked, true)\n          }\n        }\n      })\n    }\n  }\n\n  changeView (width, height) {\n    if (this.options.minHeight) {\n      if (width <= this.options.minWidth && height <= this.options.minHeight) {\n        this.conditionCardView()\n      } else if (width > this.options.minWidth && height > this.options.minHeight) {\n        this.conditionFullView()\n      }\n    } else if (width <= this.options.minWidth) {\n      this.conditionCardView()\n    } else if (width > this.options.minWidth) {\n      this.conditionFullView()\n    }\n\n    this.resetView()\n  }\n}\n", "/**\n * @author: Jewway\n * @update zhixin wen <wenzhixin2010@gmail.com>\n */\n\n$.fn.bootstrapTable.methods.push('changeTitle')\n$.fn.bootstrapTable.methods.push('changeLocale')\n\n$.BootstrapTable = class extends $.BootstrapTable {\n\n  changeTitle (locale) {\n    $.each(this.options.columns, (idx, columnList) => {\n      $.each(columnList, (idx, column) => {\n        if (column.field) {\n          column.title = locale[column.field]\n        }\n      })\n    })\n    this.initHeader()\n    this.initBody()\n    this.initToolbar()\n  }\n\n  changeLocale (localeId) {\n    this.options.locale = localeId\n    this.initLocale()\n    this.initPagination()\n    this.initBody()\n    this.initToolbar()\n  }\n}\n", "/**\n * @author vincent loh <vincent.ml@gmail.com>\n * @update J Manuel Corona <jmcg92@gmail.com>\n * @update zhixin wen <wenzhixin2010@gmail.com>\n */\n\nconst Utils = $.fn.bootstrapTable.utils\n\nObject.assign($.fn.bootstrapTable.defaults, {\n  stickyHeader: false,\n  stickyHeaderOffsetY: 0,\n  stickyHeaderOffsetLeft: 0,\n  stickyHeaderOffsetRight: 0\n})\n\n$.BootstrapTable = class extends $.BootstrapTable {\n  initHeader (...args) {\n    super.initHeader(...args)\n\n    if (!this.options.stickyHeader) {\n      return\n    }\n\n    this.$tableBody.find('.sticky-header-container,.sticky_anchor_begin,.sticky_anchor_end').remove()\n\n    this.$el.before('<div class=\"sticky-header-container\"></div>')\n    this.$el.before('<div class=\"sticky_anchor_begin\"></div>')\n    this.$el.after('<div class=\"sticky_anchor_end\"></div>')\n    this.$header.addClass('sticky-header')\n\n    // clone header just once, to be used as sticky header\n    // deep clone header, using source header affects tbody>td width\n    this.$stickyContainer = this.$tableBody.find('.sticky-header-container')\n    this.$stickyBegin = this.$tableBody.find('.sticky_anchor_begin')\n    this.$stickyEnd = this.$tableBody.find('.sticky_anchor_end')\n    this.$stickyHeader = this.$header.clone(true, true)\n\n    // render sticky on window scroll or resize\n    const resizeEvent = Utils.getEventName('resize.sticky-header-table', this.$el.attr('id'))\n    const scrollEvent = Utils.getEventName('scroll.sticky-header-table', this.$el.attr('id'))\n\n    $(window).off(resizeEvent).on(resizeEvent, () => this.renderStickyHeader())\n    $(window).off(scrollEvent).on(scrollEvent, () => this.renderStickyHeader())\n    this.$tableBody.off('scroll').on('scroll', () => this.matchPositionX())\n  }\n\n  onColumnSearch ({ currentTarget, keyCode }) {\n    super.onColumnSearch({ currentTarget, keyCode })\n    this.renderStickyHeader()\n  }\n\n  resetView (...args) {\n    super.resetView(...args)\n\n    $('.bootstrap-table.fullscreen').off('scroll')\n      .on('scroll', () => this.renderStickyHeader())\n  }\n\n  getCaret (...args) {\n    super.getCaret(...args)\n\n    if (this.$stickyHeader) {\n      const $ths = this.$stickyHeader.find('th')\n\n      this.$header.find('th').each((i, th) => {\n        $ths.eq(i).find('.sortable').attr('class', $(th).find('.sortable').attr('class'))\n      })\n    }\n  }\n\n  horizontalScroll () {\n    super.horizontalScroll()\n    this.$tableBody.on('scroll', () => this.matchPositionX())\n  }\n\n  renderStickyHeader () {\n    const that = this\n\n    this.$stickyHeader = this.$header.clone(true, true)\n\n    if (this.options.filterControl) {\n      $(this.$stickyHeader).off('keyup change mouseup').on('keyup change mouse', function (e) {\n        const $target = $(e.target)\n        const value = $target.val()\n        const field = $target.parents('th').data('field')\n        const $coreTh = that.$header.find(`th[data-field=\"${field}\"]`)\n\n        if ($target.is('input')) {\n          $coreTh.find('input').val(value)\n        } else if ($target.is('select')) {\n          const $select = $coreTh.find('select')\n\n          $select.find('option[selected]').removeAttr('selected')\n          $select.find(`option[value=\"${value}\"]`).attr('selected', true)\n        }\n\n        that.triggerSearch()\n      })\n    }\n\n    const top = $(window).scrollTop()\n    // top anchor scroll position, minus header height\n    const start = this.$stickyBegin.offset().top - this.options.stickyHeaderOffsetY\n    // bottom anchor scroll position, minus header height, minus sticky height\n    const end = this.$stickyEnd.offset().top - this.options.stickyHeaderOffsetY - this.$header.height()\n\n    // show sticky when top anchor touches header, and when bottom anchor not exceeded\n    if (top > start && top <= end) {\n      // ensure clone and source column widths are the same\n      this.$stickyHeader.find('tr').each((indexRows, rows) => {\n        const columns = $(rows).find('th')\n\n        columns.each((indexColumns, celd) => {\n          $(celd).css('min-width', this.$header.find(`tr:eq(${indexRows})`).find(`th:eq(${indexColumns})`).css('width'))\n        })\n      })\n      // match bootstrap table style\n      this.$stickyContainer.show().addClass('fix-sticky fixed-table-container')\n      // stick it in position\n      const coords = this.$tableBody[0].getBoundingClientRect()\n      let width = '100%'\n      let stickyHeaderOffsetLeft = this.options.stickyHeaderOffsetLeft\n      let stickyHeaderOffsetRight = this.options.stickyHeaderOffsetRight\n\n      if (!stickyHeaderOffsetLeft) {\n        stickyHeaderOffsetLeft = coords.left\n      }\n      if (!stickyHeaderOffsetRight) {\n        width = `${coords.width}px`\n      }\n      if (this.$el.closest('.bootstrap-table').hasClass('fullscreen')) {\n        stickyHeaderOffsetLeft = 0\n        stickyHeaderOffsetRight = 0\n        width = '100%'\n      }\n      this.$stickyContainer.css('top', `${this.options.stickyHeaderOffsetY}px`)\n      this.$stickyContainer.css('left', `${stickyHeaderOffsetLeft}px`)\n      this.$stickyContainer.css('right', `${stickyHeaderOffsetRight}px`)\n      this.$stickyContainer.css('width', `${width}`)\n      // create scrollable container for header\n      this.$stickyTable = $('<table/>')\n      this.$stickyTable.addClass(this.options.classes)\n      // append cloned header to dom\n      this.$stickyContainer.html(this.$stickyTable.append(this.$stickyHeader))\n      // match clone and source header positions when left-right scroll\n      this.matchPositionX()\n    } else {\n      this.$stickyContainer.removeClass('fix-sticky').hide()\n    }\n  }\n\n  matchPositionX () {\n    this.$stickyContainer.scrollLeft(this.$tableBody.scrollLeft())\n  }\n}\n", "/**\n * @author: aperez <aperez@datadec.es>\n * @version: v2.0.0\n *\n * @update Dennis Hern\u00E1ndez\n * @update zhixin wen <wenzhixin2010@gmail.com>\n */\n\nconst Utils = $.fn.bootstrapTable.utils\n\nconst theme = {\n  bootstrap3: {\n    icons: {\n      advancedSearchIcon: 'glyphicon-chevron-down'\n    },\n    classes: {},\n    html: {\n      modal: `\n        <div id=\"avdSearchModal_%s\"  class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog modal-xs\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n                <h4 class=\"modal-title\">%s</h4>\n              </div>\n              <div class=\"modal-body modal-body-custom\">\n                <div class=\"container-fluid\" id=\"avdSearchModalContent_%s\"\n                  style=\"padding-right: 0px; padding-left: 0px;\" >\n                </div>\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" id=\"btnCloseAvd_%s\" class=\"btn btn-%s\">%s</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      `\n    }\n  },\n  bootstrap4: {\n    icons: {\n      advancedSearchIcon: 'fa-chevron-down'\n    },\n    classes: {},\n    html: {\n      modal: `\n        <div id=\"avdSearchModal_%s\"  class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog modal-xs\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                <h4 class=\"modal-title\">%s</h4>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n              <div class=\"modal-body modal-body-custom\">\n                <div class=\"container-fluid\" id=\"avdSearchModalContent_%s\"\n                  style=\"padding-right: 0; padding-left: 0;\" >\n                </div>\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" id=\"btnCloseAvd_%s\" class=\"btn btn-%s\">%s</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      `\n    }\n  },\n  bootstrap5: {\n    icons: {\n      advancedSearchIcon: 'bi-chevron-down'\n    },\n    classes: {\n      formGroup: 'mb-3'\n    },\n    html: {\n      modal: `\n        <div id=\"avdSearchModal_%s\" class=\"modal fade\" tabindex=\"-1\" aria-labelledby=\"mySmallModalLabel\" aria-hidden=\"true\">\n          <div class=\"modal-dialog modal-xs\">\n            <div class=\"modal-content\">\n              <div class=\"modal-header\">\n                <h5 class=\"modal-title\">%s</h5>\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n              </div>\n              <div class=\"modal-body modal-body-custom\">\n                <div class=\"container-fluid\" id=\"avdSearchModalContent_%s\"\n                  style=\"padding-right: 0; padding-left: 0;\" >\n                </div>\n              </div>\n              <div class=\"modal-footer\">\n                <button type=\"button\" id=\"btnCloseAvd_%s\" class=\"btn btn-%s\">%s</button>\n              </div>\n            </div>\n          </div>\n        </div>\n      `\n    }\n  },\n  bulma: {\n    icons: {\n      advancedSearchIcon: 'fa-chevron-down'\n    },\n    classes: {},\n    html: {\n      modal: `\n        <div class=\"modal\" id=\"avdSearchModal_%s\">\n          <div class=\"modal-background\"></div>\n          <div class=\"modal-card\">\n            <header class=\"modal-card-head\">\n              <p class=\"modal-card-title\">%s</p>\n              <button class=\"delete\" aria-label=\"close\"></button>\n            </header>\n            <section class=\"modal-card-body\" id=\"avdSearchModalContent_%s\"></section>\n            <footer class=\"modal-card-foot\">\n              <button class=\"button\" id=\"btnCloseAvd_%s\" data-close=\"btn btn-%s\">%s</button>\n            </footer>\n          </div>\n        </div>\n      `\n    }\n  },\n  foundation: {\n    icons: {\n      advancedSearchIcon: 'fa-chevron-down'\n    },\n    classes: {},\n    html: {\n      modal: `\n        <div class=\"reveal\" id=\"avdSearchModal_%s\" data-reveal>\n          <h1>%s</h1>\n          <div id=\"avdSearchModalContent_%s\">\n\n          </div>\n          <button class=\"close-button\" data-close aria-label=\"Close modal\" type=\"button\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n\n          <button id=\"btnCloseAvd_%s\" class=\"%s\" type=\"button\">%s</button>\n        </div>\n      `\n    }\n  },\n  materialize: {\n    icons: {\n      advancedSearchIcon: 'expand_more'\n    },\n    classes: {},\n    html: {\n      modal: `\n        <div id=\"avdSearchModal_%s\" class=\"modal\">\n          <div class=\"modal-content\">\n            <h4>%s</h4>\n            <div id=\"avdSearchModalContent_%s\">\n\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <a href=\"javascript:void(0)\"\" id=\"btnCloseAvd_%s\" class=\"modal-close waves-effect waves-green btn-flat %s\">%s</a>\n          </div>\n        </div>\n      `\n    }\n  },\n  semantic: {\n    icons: {\n      advancedSearchIcon: 'fa-chevron-down'\n    },\n    classes: {},\n    html: {\n      modal: `\n        <div class=\"ui modal\" id=\"avdSearchModal_%s\">\n          <i class=\"close icon\"></i>\n          <div class=\"header\">\n            %s\n          </div>\n          <div class=\"image content ui form\" id=\"avdSearchModalContent_%s\"></div>\n          <div class=\"actions\">\n            <div id=\"btnCloseAvd_%s\" class=\"ui black deny button %s\">%s</div>\n          </div>\n        </div>\n      `\n    }\n  }\n}[$.fn.bootstrapTable.theme]\n\nObject.assign($.fn.bootstrapTable.defaults, {\n  advancedSearch: false,\n  idForm: 'advancedSearch',\n  actionForm: '',\n  idTable: undefined,\n  // eslint-disable-next-line no-unused-vars\n  onColumnAdvancedSearch (field, text) {\n    return false\n  }\n})\n\nObject.assign($.fn.bootstrapTable.defaults.icons, {\n  advancedSearchIcon: theme.icons.advancedSearchIcon\n})\n\nObject.assign($.fn.bootstrapTable.events, {\n  'column-advanced-search.bs.table': 'onColumnAdvancedSearch'\n})\n\nObject.assign($.fn.bootstrapTable.locales, {\n  formatAdvancedSearch () {\n    return 'Advanced search'\n  },\n  formatAdvancedCloseButton () {\n    return 'Close'\n  }\n})\n\nObject.assign($.fn.bootstrapTable.defaults, $.fn.bootstrapTable.locales)\n\n$.BootstrapTable = class extends $.BootstrapTable {\n  initToolbar () {\n    const o = this.options\n\n    this.showToolbar = this.showToolbar ||\n      o.search &&\n      o.advancedSearch &&\n      o.idTable\n\n    if (o.search && o.advancedSearch && o.idTable) {\n      this.buttons = Object.assign(this.buttons, {\n        advancedSearch: {\n          text: this.options.formatAdvancedSearch(),\n          icon: this.options.icons.advancedSearchIcon,\n          event: this.showAvdSearch,\n          attributes: {\n            'aria-label': this.options.formatAdvancedSearch(),\n            title: this.options.formatAdvancedSearch()\n          }\n        }\n      })\n    }\n\n    super.initToolbar()\n  }\n\n  showAvdSearch () {\n    const o = this.options\n    const modalSelector = `#avdSearchModal_${o.idTable}`\n\n    if ($(modalSelector).length <= 0) {\n      $('body').append(Utils.sprintf(theme.html.modal, o.idTable, o.formatAdvancedSearch(), o.idTable, o.idTable, o.buttonsClass, o.formatAdvancedCloseButton()))\n\n      let timeoutId = 0\n\n      $(`#avdSearchModalContent_${o.idTable}`).append(this.createFormAvd().join(''))\n\n      $(`#${o.idForm}`).off('keyup blur', 'input').on('keyup blur', 'input', e => {\n        if (o.sidePagination === 'server') {\n          this.onColumnAdvancedSearch(e)\n        } else {\n          clearTimeout(timeoutId)\n          timeoutId = setTimeout(() => {\n            this.onColumnAdvancedSearch(e)\n          }, o.searchTimeOut)\n        }\n      })\n\n      $(`#btnCloseAvd_${o.idTable}`).click(() => this.hideModal())\n\n      if ($.fn.bootstrapTable.theme === 'bulma') {\n        $(modalSelector).find('.delete').off('click').on('click', () => this.hideModal())\n      }\n\n      this.showModal()\n    } else {\n      this.showModal()\n    }\n  }\n\n  showModal () {\n    const modalSelector = `#avdSearchModal_${this.options.idTable}`\n\n    if ($.inArray($.fn.bootstrapTable.theme, ['bootstrap3', 'bootstrap4']) !== -1) {\n      $(modalSelector).modal()\n    } else if ($.fn.bootstrapTable.theme === 'bootstrap5') {\n      if (!this.toolbarModal) {\n      //   eslint-disable-next-line no-undef\n        this.toolbarModal = new bootstrap.Modal(document.getElementById(`avdSearchModal_${this.options.idTable}`), {})\n      }\n      this.toolbarModal.show()\n    } else if ($.fn.bootstrapTable.theme === 'bulma') {\n      $(modalSelector).toggleClass('is-active')\n    } else if ($.fn.bootstrapTable.theme === 'foundation') {\n      if (!this.toolbarModal) {\n        // eslint-disable-next-line no-undef\n        this.toolbarModal = new Foundation.Reveal($(modalSelector))\n      }\n      this.toolbarModal.open()\n    } else if ($.fn.bootstrapTable.theme === 'materialize') {\n      $(modalSelector).modal()\n      $(modalSelector).modal('open')\n    } else if ($.fn.bootstrapTable.theme === 'semantic') {\n      $(modalSelector).modal('show')\n    }\n\n  }\n\n  hideModal () {\n    const $closeModalButton = $(`#avdSearchModal_${this.options.idTable}`)\n    const modalSelector = `#avdSearchModal_${this.options.idTable}`\n\n    if ($.inArray($.fn.bootstrapTable.theme, ['bootstrap3', 'bootstrap4']) !== -1) {\n      $closeModalButton.modal('hide')\n    } else if ($.fn.bootstrapTable.theme === 'bootstrap5') {\n      this.toolbarModal.hide()\n    } else if ($.fn.bootstrapTable.theme === 'bulma') {\n      $('html').toggleClass('is-clipped')\n      $(modalSelector).toggleClass('is-active')\n    } else if ($.fn.bootstrapTable.theme === 'foundation') {\n      this.toolbarModal.close()\n    } else if ($.fn.bootstrapTable.theme === 'materialize') {\n      $(modalSelector).modal('open')\n    } else if ($.fn.bootstrapTable.theme === 'semantic') {\n      $(modalSelector).modal('close')\n    }\n\n    if (this.options.sidePagination === 'server') {\n      this.options.pageNumber = 1\n      this.updatePagination()\n      this.trigger('column-advanced-search', this.filterColumnsPartial)\n    }\n  }\n\n\n  createFormAvd () {\n    const o = this.options\n    const html = [`<form class=\"form-horizontal\" id=\"${o.idForm}\" action=\"${o.actionForm}\">`]\n\n    for (const column of this.columns) {\n      if (!column.checkbox && column.visible && column.searchable) {\n        html.push(`\n          <div class=\"form-group row ${theme.classes.formGroup || ''}\">\n            <label class=\"col-sm-4 control-label\">${column.title}</label>\n            <div class=\"col-sm-6\">\n              <input type=\"text\" class=\"form-control ${this.constants.classes.input}\" name=\"${column.field}\" placeholder=\"${column.title}\" id=\"${column.field}\">\n            </div>\n          </div>\n        `)\n      }\n    }\n\n    html.push('</form>')\n\n    return html\n  }\n\n  initSearch () {\n    super.initSearch()\n\n    if (!this.options.advancedSearch || this.options.sidePagination === 'server') {\n      return\n    }\n\n    const fp = $.isEmptyObject(this.filterColumnsPartial) ? null : this.filterColumnsPartial\n\n    this.data = fp ? this.data.filter((item, i) => {\n      for (const [key, v] of Object.entries(fp)) {\n        const fval = v.toLowerCase()\n        let value = item[key]\n        const index = this.header.fields.indexOf(key)\n\n        value = Utils.calculateObjectValue(this.header,\n          this.header.formatters[index], [value, item, i], value)\n\n        if (\n          !(index !== -1 &&\n          (typeof value === 'string' || typeof value === 'number') &&\n          `${value}`.toLowerCase().includes(fval))\n        ) {\n          return false\n        }\n      }\n      return true\n    }) : this.data\n    this.unsortedData = [...this.data]\n  }\n\n  onColumnAdvancedSearch (e) {\n    const text = $(e.currentTarget).val().trim()\n    const $field = $(e.currentTarget)[0].id\n\n    if ($.isEmptyObject(this.filterColumnsPartial)) {\n      this.filterColumnsPartial = {}\n    }\n    if (text) {\n      this.filterColumnsPartial[$field] = text\n    } else {\n      delete this.filterColumnsPartial[$field]\n    }\n\n    if (this.options.sidePagination !== 'server') {\n      this.options.pageNumber = 1\n      this.initSearch()\n      this.updatePagination()\n      this.trigger('column-advanced-search', $field, text)\n    }\n  }\n}\n", "/**\n * @author: Dennis Hern\u00E1ndez\n * @update zhixin wen <wenzhixin2010@gmail.com>\n */\nconst Utils = $.fn.bootstrapTable.utils\nconst UtilsCookie = {\n  cookieIds: {\n    sortOrder: 'bs.table.sortOrder',\n    sortName: 'bs.table.sortName',\n    sortPriority: 'bs.table.sortPriority',\n    pageNumber: 'bs.table.pageNumber',\n    pageList: 'bs.table.pageList',\n    columns: 'bs.table.columns',\n    hiddenColumns: 'bs.table.hiddenColumns',\n    cardView: 'bs.table.cardView',\n    searchText: 'bs.table.searchText',\n    reorderColumns: 'bs.table.reorderColumns',\n    filterControl: 'bs.table.filterControl',\n    filterBy: 'bs.table.filterBy'\n  },\n  getCurrentHeader (that) {\n    return that.options.height ? that.$tableHeader : that.$header\n  },\n  getCurrentSearchControls (that) {\n    return that.options.height ? 'table select, table input' : 'select, input'\n  },\n  isCookieSupportedByBrowser () {\n    return navigator.cookieEnabled\n  },\n  isCookieEnabled (that, cookieName) {\n    return that.options.cookiesEnabled.includes(cookieName)\n  },\n  setCookie (that, cookieName, cookieValue) {\n    if (\n      !that.options.cookie ||\n      !UtilsCookie.isCookieEnabled(that, cookieName)\n    ) {\n      return\n    }\n\n    return that._storage.setItem(`${that.options.cookieIdTable}.${cookieName}`, cookieValue)\n  },\n  getCookie (that, cookieName) {\n    if (\n      !cookieName ||\n      !UtilsCookie.isCookieEnabled(that, cookieName)\n    ) {\n      return null\n    }\n\n    return that._storage.getItem(`${that.options.cookieIdTable}.${cookieName}`)\n  },\n  deleteCookie (that, cookieName) {\n    return that._storage.removeItem(`${that.options.cookieIdTable}.${cookieName}`)\n  },\n  calculateExpiration (cookieExpire) {\n    const time = cookieExpire.replace(/[0-9]*/, '') // s,mi,h,d,m,y\n\n    cookieExpire = cookieExpire.replace(/[A-Za-z]{1,2}/, '') // number\n\n    switch (time.toLowerCase()) {\n      case 's':\n        cookieExpire = +cookieExpire\n        break\n      case 'mi':\n        cookieExpire *= 60\n        break\n      case 'h':\n        cookieExpire = cookieExpire * 60 * 60\n        break\n      case 'd':\n        cookieExpire = cookieExpire * 24 * 60 * 60\n        break\n      case 'm':\n        cookieExpire = cookieExpire * 30 * 24 * 60 * 60\n        break\n      case 'y':\n        cookieExpire = cookieExpire * 365 * 24 * 60 * 60\n        break\n      default:\n        cookieExpire = undefined\n        break\n    }\n    if (!cookieExpire) {\n      return ''\n    }\n    const d = new Date()\n\n    d.setTime(d.getTime() + cookieExpire * 1000)\n    return d.toGMTString()\n  },\n  initCookieFilters (bootstrapTable) {\n    setTimeout(() => {\n      const parsedCookieFilters = JSON.parse(\n        UtilsCookie.getCookie(bootstrapTable, UtilsCookie.cookieIds.filterControl))\n\n      if (!bootstrapTable._filterControlValuesLoaded && parsedCookieFilters) {\n        const cachedFilters = {}\n        const header = UtilsCookie.getCurrentHeader(bootstrapTable)\n        const searchControls = UtilsCookie.getCurrentSearchControls(bootstrapTable)\n\n        const applyCookieFilters = (element, filteredCookies) => {\n          filteredCookies.forEach(cookie => {\n            const value = element.value.toString()\n            const text = cookie.text\n\n            if (\n              text === '' ||\n              element.type === 'radio' &&\n              value !== text\n            ) {\n              return\n            }\n\n            if (\n              element.tagName === 'INPUT' &&\n              element.type === 'radio' &&\n              value === text\n            ) {\n              element.checked = true\n              cachedFilters[cookie.field] = text\n            } else if (element.tagName === 'INPUT') {\n              element.value = text\n              cachedFilters[cookie.field] = text\n            } else if (\n              element.tagName === 'SELECT' &&\n              bootstrapTable.options.filterControlContainer\n            ) {\n              element.value = text\n              cachedFilters[cookie.field] = text\n            } else if (text !== '' && element.tagName === 'SELECT') {\n              cachedFilters[cookie.field] = text\n              for (const currentElement of element) {\n                if (currentElement.value === text) {\n                  currentElement.selected = true\n                  return\n                }\n              }\n              const option = document.createElement('option')\n\n              option.value = text\n              option.text = text\n              element.add(option, element[1])\n              element.selectedIndex = 1\n            }\n          })\n        }\n\n        let filterContainer = header\n\n        if (bootstrapTable.options.filterControlContainer) {\n          filterContainer = $(`${bootstrapTable.options.filterControlContainer}`)\n        }\n\n        filterContainer.find(searchControls).each(function () {\n          const field = $(this).closest('[data-field]').data('field')\n          const filteredCookies = parsedCookieFilters.filter(cookie => cookie.field === field)\n\n          applyCookieFilters(this, filteredCookies)\n        })\n\n        bootstrapTable.initColumnSearch(cachedFilters)\n        bootstrapTable._filterControlValuesLoaded = true\n        bootstrapTable.initServer()\n      }\n    }, 250)\n  }\n}\n\nObject.assign($.fn.bootstrapTable.defaults, {\n  cookie: false,\n  cookieExpire: '2h',\n  cookiePath: null,\n  cookieDomain: null,\n  cookieSecure: null,\n  cookieSameSite: 'Lax',\n  cookieIdTable: '',\n  cookiesEnabled: [\n    'bs.table.sortOrder', 'bs.table.sortName', 'bs.table.sortPriority',\n    'bs.table.pageNumber', 'bs.table.pageList',\n    'bs.table.hiddenColumns', 'bs.table.columns', 'bs.table.searchText',\n    'bs.table.filterControl', 'bs.table.filterBy',\n    'bs.table.reorderColumns', 'bs.table.cardView'\n  ],\n  cookieStorage: 'cookieStorage', // localStorage, sessionStorage, customStorage\n  cookieCustomStorageGet: null,\n  cookieCustomStorageSet: null,\n  cookieCustomStorageDelete: null,\n  // internal variable\n  _filterControls: [],\n  _filterControlValuesLoaded: false,\n  _storage: {\n    setItem: undefined,\n    getItem: undefined,\n    removeItem: undefined\n  }\n})\n\n$.fn.bootstrapTable.methods.push('getCookies')\n$.fn.bootstrapTable.methods.push('deleteCookie')\n\nObject.assign($.fn.bootstrapTable.utils, {\n  setCookie: UtilsCookie.setCookie,\n  getCookie: UtilsCookie.getCookie\n})\n\n$.BootstrapTable = class extends $.BootstrapTable {\n  init () {\n    if (this.options.cookie) {\n      if (this.options.cookieStorage === 'cookieStorage' && !UtilsCookie.isCookieSupportedByBrowser()) {\n        throw new Error('Cookies are not enabled in this browser.')\n      }\n\n      this.configureStorage()\n\n      // FilterBy logic\n      const filterByCookieValue = UtilsCookie.getCookie(this, UtilsCookie.cookieIds.filterBy)\n\n      if (typeof filterByCookieValue === 'boolean' && !filterByCookieValue) {\n        throw new Error('The cookie value of filterBy must be a json!')\n      }\n\n      let filterByCookie = {}\n\n      try {\n        filterByCookie = JSON.parse(filterByCookieValue)\n      } catch (e) {\n        throw new Error('Could not parse the json of the filterBy cookie!')\n      }\n      this.filterColumns = filterByCookie ? filterByCookie : {}\n\n      // FilterControl logic\n      this._filterControls = []\n      this._filterControlValuesLoaded = false\n\n      this.options.cookiesEnabled = typeof this.options.cookiesEnabled === 'string' ?\n        this.options.cookiesEnabled.replace('[', '').replace(']', '')\n          .replace(/'/g, '').replace(/ /g, '').split(',') :\n        this.options.cookiesEnabled\n\n      if (this.options.filterControl) {\n        const that = this\n\n        this.$el.on('column-search.bs.table', (e, field, text) => {\n          let isNewField = true\n\n          for (let i = 0; i < that._filterControls.length; i++) {\n            if (that._filterControls[i].field === field) {\n              that._filterControls[i].text = text\n              isNewField = false\n              break\n            }\n          }\n          if (isNewField) {\n            that._filterControls.push({\n              field,\n              text\n            })\n          }\n\n          UtilsCookie.setCookie(that, UtilsCookie.cookieIds.filterControl, JSON.stringify(that._filterControls))\n        }).on('created-controls.bs.table', UtilsCookie.initCookieFilters(that))\n      }\n    }\n    super.init()\n  }\n\n  initServer (...args) {\n    if (\n      this.options.cookie &&\n      this.options.filterControl &&\n      !this._filterControlValuesLoaded\n    ) {\n      const cookie = JSON.parse(UtilsCookie.getCookie(this, UtilsCookie.cookieIds.filterControl))\n\n      if (cookie) {\n        return\n      }\n    }\n    super.initServer(...args)\n  }\n\n  initTable (...args) {\n    super.initTable(...args)\n    this.initCookie()\n  }\n\n  onSort (...args) {\n    super.onSort(...args)\n\n    if (!this.options.cookie) {\n      return\n    }\n\n    if (this.options.sortName === undefined || this.options.sortOrder === undefined) {\n      UtilsCookie.deleteCookie(this, UtilsCookie.cookieIds.sortName)\n      UtilsCookie.deleteCookie(this, UtilsCookie.cookieIds.sortOrder)\n    } else {\n      this.options.sortPriority = null\n      UtilsCookie.deleteCookie(this, UtilsCookie.cookieIds.sortPriority)\n\n      UtilsCookie.setCookie(this, UtilsCookie.cookieIds.sortOrder, this.options.sortOrder)\n      UtilsCookie.setCookie(this, UtilsCookie.cookieIds.sortName, this.options.sortName)\n    }\n  }\n\n  onMultipleSort (...args) {\n    super.onMultipleSort(...args)\n\n    if (!this.options.cookie) {\n      return\n    }\n\n    if (this.options.sortPriority === undefined) {\n      UtilsCookie.deleteCookie(this, UtilsCookie.cookieIds.sortPriority)\n    } else {\n      this.options.sortName = undefined\n      this.options.sortOrder = undefined\n      UtilsCookie.deleteCookie(this, UtilsCookie.cookieIds.sortName)\n      UtilsCookie.deleteCookie(this, UtilsCookie.cookieIds.sortOrder)\n\n      UtilsCookie.setCookie(this, UtilsCookie.cookieIds.sortPriority, JSON.stringify(this.options.sortPriority))\n    }\n  }\n\n  onPageNumber (...args) {\n    super.onPageNumber(...args)\n    if (!this.options.cookie) {\n      return\n    }\n    UtilsCookie.setCookie(this, UtilsCookie.cookieIds.pageNumber, this.options.pageNumber)\n  }\n\n  onPageListChange (...args) {\n    super.onPageListChange(...args)\n    if (!this.options.cookie) {\n      return\n    }\n    UtilsCookie.setCookie(this, UtilsCookie.cookieIds.pageList, this.options.pageSize)\n    UtilsCookie.setCookie(this, UtilsCookie.cookieIds.pageNumber, this.options.pageNumber)\n  }\n\n  onPagePre (...args) {\n    super.onPagePre(...args)\n    if (!this.options.cookie) {\n      return\n    }\n    UtilsCookie.setCookie(this, UtilsCookie.cookieIds.pageNumber, this.options.pageNumber)\n  }\n\n  onPageNext (...args) {\n    super.onPageNext(...args)\n    if (!this.options.cookie) {\n      return\n    }\n    UtilsCookie.setCookie(this, UtilsCookie.cookieIds.pageNumber, this.options.pageNumber)\n  }\n\n  _toggleColumn (...args) {\n    super._toggleColumn(...args)\n    if (!this.options.cookie) {\n      return\n    }\n    UtilsCookie.setCookie(this, UtilsCookie.cookieIds.hiddenColumns, JSON.stringify(this.getHiddenColumns().map(column => column.field)))\n  }\n\n  _toggleAllColumns (...args) {\n    super._toggleAllColumns(...args)\n    if (!this.options.cookie) {\n      return\n    }\n    UtilsCookie.setCookie(this, UtilsCookie.cookieIds.hiddenColumns, JSON.stringify(this.getHiddenColumns().map(column => column.field)))\n  }\n\n  toggleView () {\n    super.toggleView()\n    UtilsCookie.setCookie(this, UtilsCookie.cookieIds.cardView, this.options.cardView)\n  }\n\n  selectPage (page) {\n    super.selectPage(page)\n    if (!this.options.cookie) {\n      return\n    }\n    UtilsCookie.setCookie(this, UtilsCookie.cookieIds.pageNumber, page)\n  }\n\n  onSearch (event) {\n    super.onSearch(event, arguments.length > 1 ? arguments[1] : true)\n    if (!this.options.cookie) {\n      return\n    }\n    if (this.options.search) {\n      UtilsCookie.setCookie(this, UtilsCookie.cookieIds.searchText, this.searchText)\n    }\n    UtilsCookie.setCookie(this, UtilsCookie.cookieIds.pageNumber, this.options.pageNumber)\n  }\n\n  initHeader (...args) {\n    if (this.options.reorderableColumns && this.options.cookie) {\n      this.columnsSortOrder = JSON.parse(UtilsCookie.getCookie(this, UtilsCookie.cookieIds.reorderColumns))\n    }\n    super.initHeader(...args)\n  }\n\n  persistReorderColumnsState (that) {\n    UtilsCookie.setCookie(that, UtilsCookie.cookieIds.reorderColumns, JSON.stringify(that.columnsSortOrder))\n  }\n\n  filterBy (...args) {\n    super.filterBy(...args)\n    if (!this.options.cookie) {\n      return\n    }\n    UtilsCookie.setCookie(this, UtilsCookie.cookieIds.filterBy, JSON.stringify(this.filterColumns))\n  }\n\n  initCookie () {\n    if (!this.options.cookie) {\n      return\n    }\n\n    if (this.options.cookieIdTable === '' || this.options.cookieExpire === '') {\n      console.error('Configuration error. Please review the cookieIdTable and the cookieExpire property. If the properties are correct, then this browser does not support cookies.')\n      this.options.cookie = false // Make sure that the cookie extension is disabled\n      return\n    }\n\n    const sortOrderCookie = UtilsCookie.getCookie(this, UtilsCookie.cookieIds.sortOrder)\n    const sortOrderNameCookie = UtilsCookie.getCookie(this, UtilsCookie.cookieIds.sortName)\n    let sortPriorityCookie = UtilsCookie.getCookie(this, UtilsCookie.cookieIds.sortPriority)\n    const pageNumberCookie = UtilsCookie.getCookie(this, UtilsCookie.cookieIds.pageNumber)\n    const pageListCookie = UtilsCookie.getCookie(this, UtilsCookie.cookieIds.pageList)\n    const searchTextCookie = UtilsCookie.getCookie(this, UtilsCookie.cookieIds.searchText)\n    const cardViewCookie = UtilsCookie.getCookie(this, UtilsCookie.cookieIds.cardView)\n\n    const columnsCookieValue = UtilsCookie.getCookie(this, UtilsCookie.cookieIds.columns)\n    const hiddenColumnsCookieValue = UtilsCookie.getCookie(this, UtilsCookie.cookieIds.hiddenColumns)\n\n    if (typeof columnsCookieValue === 'boolean' && !columnsCookieValue) {\n      throw new Error('The cookie value of filterBy must be a json!')\n    }\n\n    let columnsCookie = {}\n\n    try {\n      columnsCookie = JSON.parse(columnsCookieValue)\n    } catch (e) {\n      throw new Error('Could not parse the json of the columns cookie!', columnsCookieValue)\n    }\n\n    let hiddenColumnsCookie = {}\n\n    try {\n      hiddenColumnsCookie = JSON.parse(hiddenColumnsCookieValue)\n    } catch (e) {\n      throw new Error('Could not parse the json of the hidden columns cookie!', hiddenColumnsCookieValue)\n    }\n\n    try {\n      sortPriorityCookie = JSON.parse(sortPriorityCookie)\n    } catch (e) {\n      throw new Error('Could not parse the json of the sortPriority cookie!', sortPriorityCookie)\n    }\n\n    if (!sortPriorityCookie) {\n      // sortOrder\n      this.options.sortOrder = sortOrderCookie ? sortOrderCookie : this.options.sortOrder\n      // sortName\n      this.options.sortName = sortOrderNameCookie ? sortOrderNameCookie : this.options.sortName\n    } else {\n      this.options.sortOrder = undefined\n      this.options.sortName = undefined\n    }\n\n    // sortPriority\n    this.options.sortPriority = sortPriorityCookie ? sortPriorityCookie : this.options.sortPriority\n\n    if (this.options.sortOrder || this.options.sortName) {\n      // sortPriority\n      this.options.sortPriority = null\n    }\n\n    // pageNumber\n    this.options.pageNumber = pageNumberCookie ? +pageNumberCookie : this.options.pageNumber\n    // pageSize\n    this.options.pageSize = pageListCookie ? pageListCookie === this.options.formatAllRows() ? pageListCookie : +pageListCookie : this.options.pageSize\n    // searchText\n    if (UtilsCookie.isCookieEnabled(this, UtilsCookie.cookieIds.searchText) && this.options.searchText === '') {\n      this.options.searchText = searchTextCookie ? searchTextCookie : ''\n    }\n    // cardView\n    this.options.cardView = cardViewCookie === 'true' ? cardViewCookie : false\n\n    if (hiddenColumnsCookie) {\n      for (const column of this.columns) {\n        column.visible = !hiddenColumnsCookie.filter(columnField => {\n          if (this.isSelectionColumn(column)) {\n            return false\n          }\n\n          return columnField === column.field\n        }).length > 0 || !column.switchable\n      }\n    } else if (columnsCookie) {\n      /**\n       * This is needed for the old saved cookies!\n       * It can be removed in 2-3 Versions Later!!\n       * TODO: Remove this part (column cookie) some versions later e.g. 1.22.0\n       */\n      for (const column of this.columns) {\n        if (!column.switchable) {\n          continue\n        }\n\n        column.visible = columnsCookie.filter(columnField => {\n          if (this.isSelectionColumn(column)) {\n            return true\n          }\n          if (columnField instanceof Object) {\n            return columnField.field === column.field\n          }\n\n          return columnField === column.field\n        }).length > 0\n      }\n    }\n  }\n\n  getCookies () {\n    const bootstrapTable = this\n    const cookies = {}\n\n    $.each(UtilsCookie.cookieIds, (key, value) => {\n      cookies[key] = UtilsCookie.getCookie(bootstrapTable, value)\n      if (key === 'columns' || key === 'hiddenColumns' || key === 'sortPriority') {\n        cookies[key] = JSON.parse(cookies[key])\n      }\n    })\n    return cookies\n  }\n\n  deleteCookie (cookieName) {\n    if (!cookieName) {\n      return\n    }\n\n    UtilsCookie.deleteCookie(this, UtilsCookie.cookieIds[cookieName])\n  }\n\n  configureStorage () {\n    const that = this\n\n    this._storage = {}\n    switch (this.options.cookieStorage) {\n      case 'cookieStorage':\n        this._storage.setItem = function (cookieName, cookieValue) {\n          document.cookie = [\n            cookieName, '=', encodeURIComponent(cookieValue),\n            `; expires=${UtilsCookie.calculateExpiration(that.options.cookieExpire)}`,\n            that.options.cookiePath ? `; path=${that.options.cookiePath}` : '',\n            that.options.cookieDomain ? `; domain=${that.options.cookieDomain}` : '',\n            that.options.cookieSecure ? '; secure' : '',\n            `;SameSite=${that.options.cookieSameSite}`\n          ].join('')\n        }\n        this._storage.getItem = function (cookieName) {\n          const value = `; ${document.cookie}`\n          const parts = value.split(`; ${cookieName}=`)\n\n          return parts.length === 2 ? decodeURIComponent(parts.pop().split(';').shift()) : null\n        }\n        this._storage.removeItem = function (cookieName) {\n          document.cookie = [\n            encodeURIComponent(cookieName), '=',\n            '; expires=Thu, 01 Jan 1970 00:00:00 GMT',\n            that.options.cookiePath ? `; path=${that.options.cookiePath}` : '',\n            that.options.cookieDomain ? `; domain=${that.options.cookieDomain}` : '',\n            `;SameSite=${that.options.cookieSameSite}`\n          ].join('')\n        }\n        break\n      case 'localStorage':\n        this._storage.setItem = function (cookieName, cookieValue) {\n          localStorage.setItem(cookieName, cookieValue)\n        }\n        this._storage.getItem = function (cookieName) {\n          return localStorage.getItem(cookieName)\n        }\n        this._storage.removeItem = function (cookieName) {\n          localStorage.removeItem(cookieName)\n        }\n        break\n      case 'sessionStorage':\n        this._storage.setItem = function (cookieName, cookieValue) {\n          sessionStorage.setItem(cookieName, cookieValue)\n        }\n        this._storage.getItem = function (cookieName) {\n          return sessionStorage.getItem(cookieName)\n        }\n        this._storage.removeItem = function (cookieName) {\n          sessionStorage.removeItem(cookieName)\n        }\n        break\n      case 'customStorage':\n        if (\n          !this.options.cookieCustomStorageSet ||\n          !this.options.cookieCustomStorageGet ||\n          !this.options.cookieCustomStorageDelete\n        ) {\n          throw new Error('The following options must be set while using the customStorage: cookieCustomStorageSet, cookieCustomStorageGet and cookieCustomStorageDelete')\n        }\n\n        this._storage.setItem = function (cookieName, cookieValue) {\n          Utils.calculateObjectValue(that.options, that.options.cookieCustomStorageSet, [cookieName, cookieValue], '')\n        }\n        this._storage.getItem = function (cookieName) {\n          return Utils.calculateObjectValue(that.options, that.options.cookieCustomStorageGet, [cookieName], '')\n        }\n        this._storage.removeItem = function (cookieName) {\n          Utils.calculateObjectValue(that.options, that.options.cookieCustomStorageDelete, [cookieName], '')\n        }\n\n        break\n      default:\n        throw new Error('Storage method not supported.')\n    }\n  }\n}\n", "/**\n * @author zhixin wen <wenzhixin2010@gmail.com>\n */\n\nconst Utils = $.fn.bootstrapTable.utils\n\n// Reasonable defaults\nconst PIXEL_STEP = 10\nconst LINE_HEIGHT = 40\nconst PAGE_HEIGHT = 800\n\nfunction normalizeWheel (event) {\n  let sX = 0 // spinX\n  let sY = 0 // spinY\n  let pX = 0 // pixelX\n  let pY = 0 // pixelY\n\n  // Legacy\n  if ('detail' in event) {\n    sY = event.detail\n  }\n  if ('wheelDelta' in event) {\n    sY = -event.wheelDelta / 120\n  }\n  if ('wheelDeltaY' in event) {\n    sY = -event.wheelDeltaY / 120\n  }\n  if ('wheelDeltaX' in event) {\n    sX = -event.wheelDeltaX / 120\n  }\n\n  // side scrolling on FF with DOMMouseScroll\n  if ('axis' in event && event.axis === event.HORIZONTAL_AXIS) {\n    sX = sY\n    sY = 0\n  }\n\n  pX = sX * PIXEL_STEP\n  pY = sY * PIXEL_STEP\n\n  if ('deltaY' in event) {\n    pY = event.deltaY\n  }\n  if ('deltaX' in event) {\n    pX = event.deltaX\n  }\n\n  if ((pX || pY) && event.deltaMode) {\n    if (event.deltaMode === 1) { // delta in LINE units\n      pX *= LINE_HEIGHT\n      pY *= LINE_HEIGHT\n    } else { // delta in PAGE units\n      pX *= PAGE_HEIGHT\n      pY *= PAGE_HEIGHT\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1\n  }\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1\n  }\n\n  return {\n    spinX: sX,\n    spinY: sY,\n    pixelX: pX,\n    pixelY: pY\n  }\n}\n\nObject.assign($.fn.bootstrapTable.defaults, {\n  fixedColumns: false,\n  fixedNumber: 0,\n  fixedRightNumber: 0\n})\n\n$.BootstrapTable = class extends $.BootstrapTable {\n\n  fixedColumnsSupported () {\n    return this.options.fixedColumns &&\n      !this.options.detailView &&\n      !this.options.cardView\n  }\n\n  initContainer () {\n    super.initContainer()\n\n    if (!this.fixedColumnsSupported()) {\n      return\n    }\n\n    if (this.options.fixedNumber) {\n      this.$tableContainer.append('<div class=\"fixed-columns\"></div>')\n      this.$fixedColumns = this.$tableContainer.find('.fixed-columns')\n    }\n\n    if (this.options.fixedRightNumber) {\n      this.$tableContainer.append('<div class=\"fixed-columns-right\"></div>')\n      this.$fixedColumnsRight = this.$tableContainer.find('.fixed-columns-right')\n    }\n  }\n\n  initBody (...args) {\n    super.initBody(...args)\n\n    if (this.$fixedColumns && this.$fixedColumns.length) {\n      this.$fixedColumns.toggle(this.fixedColumnsSupported())\n    }\n    if (this.$fixedColumnsRight && this.$fixedColumnsRight.length) {\n      this.$fixedColumnsRight.toggle(this.fixedColumnsSupported())\n    }\n\n    if (!this.fixedColumnsSupported()) {\n      return\n    }\n\n    if (this.options.showHeader && this.options.height) {\n      return\n    }\n\n    this.initFixedColumnsBody()\n    this.initFixedColumnsEvents()\n  }\n\n  trigger (...args) {\n    super.trigger(...args)\n\n    if (!this.fixedColumnsSupported()) {\n      return\n    }\n\n    if (args[0] === 'post-header') {\n      this.initFixedColumnsHeader()\n    } else if (args[0] === 'scroll-body') {\n      if (this.needFixedColumns && this.options.fixedNumber) {\n        this.$fixedBody.scrollTop(this.$tableBody.scrollTop())\n      }\n\n      if (this.needFixedColumns && this.options.fixedRightNumber) {\n        this.$fixedBodyRight.scrollTop(this.$tableBody.scrollTop())\n      }\n    }\n  }\n\n  updateSelected () {\n    super.updateSelected()\n\n    if (!this.fixedColumnsSupported()) {\n      return\n    }\n\n    this.$tableBody.find('tr').each((i, el) => {\n      const $el = $(el)\n      const index = $el.data('index')\n      const classes = $el.attr('class')\n\n      const inputSelector = `[name=\"${this.options.selectItemName}\"]`\n      const $input = $el.find(inputSelector)\n\n      if (typeof index === 'undefined') {\n        return\n      }\n\n      const updateFixedBody = ($fixedHeader, $fixedBody) => {\n        const $tr = $fixedBody.find(`tr[data-index=\"${index}\"]`)\n\n        $tr.attr('class', classes)\n\n        if ($input.length) {\n          $tr.find(inputSelector).prop('checked', $input.prop('checked'))\n        }\n\n        if (this.$selectAll.length) {\n          $fixedHeader.add($fixedBody)\n            .find('[name=\"btSelectAll\"]')\n            .prop('checked', this.$selectAll.prop('checked'))\n        }\n      }\n\n      if (this.$fixedBody && this.options.fixedNumber) {\n        updateFixedBody(this.$fixedHeader, this.$fixedBody)\n      }\n\n      if (this.$fixedBodyRight && this.options.fixedRightNumber) {\n        updateFixedBody(this.$fixedHeaderRight, this.$fixedBodyRight)\n      }\n    })\n  }\n\n  hideLoading () {\n    super.hideLoading()\n\n    if (this.needFixedColumns && this.options.fixedNumber) {\n      this.$fixedColumns.find('.fixed-table-loading').hide()\n    }\n\n    if (this.needFixedColumns && this.options.fixedRightNumber) {\n      this.$fixedColumnsRight.find('.fixed-table-loading').hide()\n    }\n  }\n\n  initFixedColumnsHeader () {\n    if (this.options.height) {\n      this.needFixedColumns = this.$tableHeader.outerWidth(true) < this.$tableHeader.find('table').outerWidth(true)\n    } else {\n      this.needFixedColumns = this.$tableBody.outerWidth(true) < this.$tableBody.find('table').outerWidth(true)\n    }\n\n    const initFixedHeader = ($fixedColumns, isRight) => {\n      $fixedColumns.find('.fixed-table-header').remove()\n      $fixedColumns.append(this.$tableHeader.clone(true))\n\n      $fixedColumns.css({\n        width: this.getFixedColumnsWidth(isRight)\n      })\n      return $fixedColumns.find('.fixed-table-header')\n    }\n\n    if (this.needFixedColumns && this.options.fixedNumber) {\n      this.$fixedHeader = initFixedHeader(this.$fixedColumns)\n      this.$fixedHeader.css('margin-right', '')\n    } else if (this.$fixedColumns) {\n      this.$fixedColumns.html('').css('width', '')\n    }\n\n    if (this.needFixedColumns && this.options.fixedRightNumber) {\n      this.$fixedHeaderRight = initFixedHeader(this.$fixedColumnsRight, true)\n      this.$fixedHeaderRight.scrollLeft(this.$fixedHeaderRight.find('table').width())\n    } else if (this.$fixedColumnsRight) {\n      this.$fixedColumnsRight.html('').css('width', '')\n    }\n\n    this.initFixedColumnsBody()\n    this.initFixedColumnsEvents()\n  }\n\n  initFixedColumnsBody () {\n    const initFixedBody = ($fixedColumns, $fixedHeader) => {\n      $fixedColumns.find('.fixed-table-body').remove()\n      $fixedColumns.append(this.$tableBody.clone(true))\n      $fixedColumns.find('.fixed-table-body table').removeAttr('id')\n\n      const $fixedBody = $fixedColumns.find('.fixed-table-body')\n\n      const tableBody = this.$tableBody.get(0)\n      const scrollHeight = tableBody.scrollWidth > tableBody.clientWidth ?\n        Utils.getScrollBarWidth() : 0\n      const height = this.$tableContainer.outerHeight(true) - scrollHeight - 1\n\n      $fixedColumns.css({\n        height\n      })\n\n      $fixedBody.css({\n        height: height - $fixedHeader.height()\n      })\n\n      return $fixedBody\n    }\n\n    if (this.needFixedColumns && this.options.fixedNumber) {\n      this.$fixedBody = initFixedBody(this.$fixedColumns, this.$fixedHeader)\n    }\n\n    if (this.needFixedColumns && this.options.fixedRightNumber) {\n      this.$fixedBodyRight = initFixedBody(this.$fixedColumnsRight, this.$fixedHeaderRight)\n      this.$fixedBodyRight.scrollLeft(this.$fixedBodyRight.find('table').width())\n      this.$fixedBodyRight.css('overflow-y', this.options.height ? 'auto' : 'hidden')\n    }\n  }\n\n  getFixedColumnsWidth (isRight) {\n    let visibleFields = this.getVisibleFields()\n    let width = 0\n    let fixedNumber = this.options.fixedNumber\n    let marginRight = 0\n\n    if (isRight) {\n      visibleFields = visibleFields.reverse()\n      fixedNumber = this.options.fixedRightNumber\n      marginRight = parseInt(this.$tableHeader.css('margin-right'), 10)\n    }\n\n    for (let i = 0; i < fixedNumber; i++) {\n      width += this.$header.find(`th[data-field=\"${visibleFields[i]}\"]`).outerWidth(true)\n    }\n\n    return width + marginRight + 1\n  }\n\n  initFixedColumnsEvents () {\n    const toggleHover = (e, toggle) => {\n      const tr = `tr[data-index=\"${$(e.currentTarget).data('index')}\"]`\n      let $trs = this.$tableBody.find(tr)\n\n      if (this.$fixedBody) {\n        $trs = $trs.add(this.$fixedBody.find(tr))\n      }\n      if (this.$fixedBodyRight) {\n        $trs = $trs.add(this.$fixedBodyRight.find(tr))\n      }\n\n      $trs.css('background-color', toggle ? $(e.currentTarget).css('background-color') : '')\n    }\n\n    this.$tableBody.find('tr').hover(e => {\n      toggleHover(e, true)\n    }, e => {\n      toggleHover(e, false)\n    })\n\n    const isFirefox = typeof navigator !== 'undefined' &&\n      navigator.userAgent.toLowerCase().indexOf('firefox') > -1\n    const mousewheel = isFirefox ? 'DOMMouseScroll' : 'mousewheel'\n    const updateScroll = (e, fixedBody) => {\n      const normalized = normalizeWheel(e)\n      const deltaY = Math.ceil(normalized.pixelY)\n      const top = this.$tableBody.scrollTop() + deltaY\n\n      if (\n        deltaY < 0 && top > 0 ||\n        deltaY > 0 && top < fixedBody.scrollHeight - fixedBody.clientHeight\n      ) {\n        e.preventDefault()\n      }\n\n      this.$tableBody.scrollTop(top)\n      if (this.$fixedBody) {\n        this.$fixedBody.scrollTop(top)\n      }\n      if (this.$fixedBodyRight) {\n        this.$fixedBodyRight.scrollTop(top)\n      }\n    }\n\n    if (this.needFixedColumns && this.options.fixedNumber) {\n      this.$fixedBody.find('tr').hover(e => {\n        toggleHover(e, true)\n      }, e => {\n        toggleHover(e, false)\n      })\n\n      this.$fixedBody[0].addEventListener(mousewheel, e => {\n        updateScroll(e, this.$fixedBody[0])\n      })\n    }\n\n    if (this.needFixedColumns && this.options.fixedRightNumber) {\n      this.$fixedBodyRight.find('tr').hover(e => {\n        toggleHover(e, true)\n      }, e => {\n        toggleHover(e, false)\n      })\n\n      this.$fixedBodyRight.off('scroll').on('scroll', () => {\n        const top = this.$fixedBodyRight.scrollTop()\n\n        this.$tableBody.scrollTop(top)\n        if (this.$fixedBody) {\n          this.$fixedBody.scrollTop(top)\n        }\n      })\n    }\n\n    if (this.options.filterControl) {\n      $(this.$fixedColumns).off('keyup change').on('keyup change', e => {\n        const $target = $(e.target)\n        const value = $target.val()\n        const field = $target.parents('th').data('field')\n        const $coreTh = this.$header.find(`th[data-field=\"${field}\"]`)\n\n        if ($target.is('input')) {\n          $coreTh.find('input').val(value)\n        } else if ($target.is('select')) {\n          const $select = $coreTh.find('select')\n\n          $select.find('option[selected]').removeAttr('selected')\n          $select.find(`option[value=\"${value}\"]`).attr('selected', true)\n        }\n\n        this.triggerSearch()\n      })\n    }\n  }\n\n  renderStickyHeader () {\n    if (!this.options.stickyHeader) {\n      return\n    }\n\n    this.$stickyContainer = this.$container.find('.sticky-header-container')\n    super.renderStickyHeader()\n\n    if (this.needFixedColumns && this.options.fixedNumber) {\n      this.$fixedColumns.css('z-index', 101)\n        .find('.sticky-header-container')\n        .css('right', '')\n        .width(this.$fixedColumns.outerWidth())\n    }\n\n    if (this.needFixedColumns && this.options.fixedRightNumber) {\n      const $stickyHeaderContainerRight = this.$fixedColumnsRight.find('.sticky-header-container')\n\n      this.$fixedColumnsRight.css('z-index', 101)\n      $stickyHeaderContainerRight.css('left', '')\n        .scrollLeft($stickyHeaderContainerRight.find('.table').outerWidth())\n        .width(this.$fixedColumnsRight.outerWidth())\n    }\n  }\n\n  matchPositionX () {\n    if (!this.options.stickyHeader) {\n      return\n    }\n\n    this.$stickyContainer.eq(0).scrollLeft(this.$tableBody.scrollLeft())\n  }\n}\n", "/**\n * @author: general\n * @website: note.generals.space\n * @email: generals.space@gmail.com\n * @github: https://github.com/generals-space/bootstrap-table-addrbar\n * @update: zhixin wen <wenzhixin2010@gmail.com>\n */\n\n/*\n * function: \u83B7\u53D6\u6D4F\u89C8\u5668\u5730\u5740\u680F\u4E2D\u7684\u6307\u5B9A\u53C2\u6570.\n * key: \u53C2\u6570\u540D\n * url: \u9ED8\u8BA4\u4E3A\u5F53\u524D\u5730\u5740\u680F\n */\nfunction _GET (key, url = window.location.search) {\n  /*\n   * \u6CE8\u610F\u8FD9\u91CC\u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u4E66\u5199\u65B9\u6CD5\n   * (^|&)key\u5339\u914D: \u76F4\u63A5\u4EE5key\u5F00\u59CB\u6216\u4EE5&key\u5F00\u59CB\u7684\u5B57\u7B26\u4E32\n   * \u540C\u7406(&|$)\u8868\u793A\u4EE5&\u7ED3\u675F\u6216\u662F\u76F4\u63A5\u7ED3\u675F\u7684\u5B57\u7B26\u4E32\n   * ...\u5F53\u7136, \u6211\u5E76\u4E0D\u77E5\u9053\u8FD9\u79CD\u7528\u6CD5.\n   */\n  const reg = new RegExp(`(^|&)${key}=([^&]*)(&|$)`)\n  const result = url.substr(1).match(reg)\n\n  if (result) {\n    return decodeURIComponent(result[2])\n  }\n  return null\n}\n\n/*\n * function: \u6839\u636E\u7ED9\u5B9A\u53C2\u6570\u751F\u6210url\u5730\u5740\n * var dic = {name: 'genreal', age: 24}\n * var url = 'https://www.baidu.com?age=22';\n * _buildUrl(dic, url);\n * \u5C06\u5F97\u5230\"https://www.baidu.com?age=24&name=genreal\"\n * \u54E6, \u5FFD\u7565\u5148\u540E\u987A\u5E8F\u5427...\n *\n * \u8865\u5145: \u53EF\u4EE5\u53C2\u8003\u6D4F\u89C8\u5668URLSearchParams\u5BF9\u8C61, \u66F4\u52A0\u65B9\u4FBF\u548C\u5F3A\u5927.\n * \u8003\u8651\u5230\u517C\u5BB9\u6027, \u6682\u65F6\u4E0D\u4F7F\u7528\u8FD9\u4E2A\u5DE5\u5177.\n */\n\nfunction _buildUrl (dict, url = window.location.search) {\n  for (const [key, val] of Object.entries(dict)) {\n    // \u641C\u7D22name=general\u8FD9\u79CD\u5F62\u5F0F\u7684\u5B57\u7B26\u4E32(&\u662F\u5206\u9694\u7B26)\n    const pattern = `${key}=([^&]*)`\n    const targetStr = `${key}=${val}`\n\n    if (val === undefined)\n      continue\n\n    /*\n     * \u5982\u679C\u76EE\u6807url\u4E2D\u5305\u542B\u4E86key\u952E, \u6211\u4EEC\u9700\u8981\u5C06\u5B83\u66FF\u6362\u6210\u6211\u4EEC\u81EA\u5DF1\u7684val\n     * \u4E0D\u7136\u5C31\u76F4\u63A5\u6DFB\u52A0\u597D\u4E86.\n     */\n    if (url.match(pattern)) {\n      const tmp = new RegExp(`(${key}=)([^&]*)`, 'gi')\n\n      url = url.replace(tmp, targetStr)\n    } else {\n      const seperator = url.match('[?]') ? '&' : '?'\n\n      url = url + seperator + targetStr\n    }\n  }\n  if (location.hash) {\n    url += location.hash\n  }\n  return url\n}\n\n/*\n* function: _updateHistoryState\n* var _prefix = this.options.addrPrefix || ''\n* var table = this\n* _updateHistoryState( table,_prefix)\n* returns void\n*/\nfunction _updateHistoryState (table, _prefix) {\n  const params = {}\n\n  params[`${_prefix}page`] = table.options.pageNumber\n  params[`${_prefix}size`] = table.options.pageSize\n  params[`${_prefix}order`] = table.options.sortOrder\n  params[`${_prefix}sort`] = table.options.sortName\n  params[`${_prefix}search`] = table.options.searchText\n  window.history.pushState({}, '', _buildUrl(params))\n}\n\nObject.assign($.fn.bootstrapTable.defaults, {\n  addrbar: false,\n  addrPrefix: ''\n})\n\n$.BootstrapTable = class extends $.BootstrapTable {\n  init (...args) {\n    if (\n      this.options.pagination &&\n      this.options.addrbar\n    ) {\n      // \u6807\u5FD7\u4F4D, \u521D\u59CB\u52A0\u8F7D\u540E\u5173\u95ED\n      this.addrbarInit = true\n\n      this.options.pageNumber = +this.getDefaultOptionValue('pageNumber', 'page')\n      this.options.pageSize = +this.getDefaultOptionValue('pageSize', 'size')\n      this.options.sortOrder = this.getDefaultOptionValue('sortOrder', 'order')\n      this.options.sortName = this.getDefaultOptionValue('sortName', 'sort')\n      this.options.searchText = this.getDefaultOptionValue('searchText', 'search')\n\n      const _prefix = this.options.addrPrefix || ''\n      const _onLoadSuccess = this.options.onLoadSuccess\n      const _onPageChange = this.options.onPageChange\n\n      this.options.onLoadSuccess = data => {\n        if (this.addrbarInit) {\n          this.addrbarInit = false\n        } else {\n          _updateHistoryState(this, _prefix)\n        }\n\n        if (_onLoadSuccess) {\n          _onLoadSuccess.call(this, data)\n        }\n      }\n      this.options.onPageChange = (number, size) => {\n        _updateHistoryState(this, _prefix)\n\n        if (_onPageChange) {\n          _onPageChange.call(this, number, size)\n        }\n      }\n    }\n    super.init(...args)\n  }\n\n  resetSearch (text) {\n    super.resetSearch(text)\n    this.options.searchText = text || ''\n  }\n\n  /*\n   * Priority order:\n   * The value specified by the user has the highest priority.\n   * If it is not specified, it will be obtained from the address bar.\n   * If it is not obtained, the default value will be used.\n   */\n  getDefaultOptionValue (optionName, prefixName) {\n    if (this.options[optionName] !== $.BootstrapTable.DEFAULTS[optionName]) {\n      return this.options[optionName]\n    }\n\n    return _GET(`${this.options.addrPrefix || ''}${prefixName}`) ||\n      $.BootstrapTable.DEFAULTS[optionName]\n  }\n}\n", "/**\n * @author doug-the-guy\n * @version v1.0.0\n *\n * Bootstrap Table Pipeline\n * -----------------------\n *\n * This plugin enables client side data caching for server side requests which will\n * eliminate the need to issue a new request every page change. This will allow\n * for a performance balance for a large data set between returning all data at once\n * (client side paging) and a new server side request (server side paging).\n *\n * There are two new options:\n *  - usePipeline: enables this feature\n *  - pipelineSize: the size of each cache window\n *\n * The size of the pipeline must be evenly divisible by the current page size. This is\n * assured by rounding up to the nearest evenly divisible value. For example, if\n * the pipeline size is 4990 and the current page size is 25, then pipeline size will\n * be dynamically set to 5000.\n *\n * The cache windows are computed based on the pipeline size and the total number of rows\n * returned by the server side query. For example, with pipeline size 500 and total rows\n * 1300, the cache windows will be:\n *\n *  [{'lower': 0, 'upper': 499}, {'lower': 500, 'upper': 999}, {'lower': 1000, 'upper': 1499}]\n *\n * Using the limit (i.e. the pipelineSize) and offset parameters, the server side request\n * **MUST** return only the data in the requested cache window **AND** the total number of rows.\n * To wit, the server side code must use the offset and limit parameters to prepare the response\n * data.\n *\n * On a page change, the new offset is checked if it is within the current cache window. If so,\n * the requested page data is returned from the cached data set. Otherwise, a new server side\n * request will be issued for the new cache window.\n *\n * The current cached data is only invalidated on these events:\n *  * sorting\n *  * searching\n *  * page size change\n *  * page change moves into a new cache window\n *\n * There are two new events:\n *  - cached-data-hit.bs.table: issued when cached data is used on a page change\n *  - cached-data-reset.bs.table: issued when the cached data is invalidated and a\n *      new server side request is issued\n *\n **/\n\nconst Utils = $.fn.bootstrapTable.utils\n\nObject.assign($.fn.bootstrapTable.defaults, {\n  usePipeline: false,\n  pipelineSize: 1000,\n  // eslint-disable-next-line no-unused-vars\n  onCachedDataHit (data) {\n    return false\n  },\n  // eslint-disable-next-line no-unused-vars\n  onCachedDataReset (data) {\n    return false\n  }\n})\n\nObject.assign($.fn.bootstrapTable.events, {\n  'cached-data-hit.bs.table': 'onCachedDataHit',\n  'cached-data-reset.bs.table': 'onCachedDataReset'\n})\n\nconst BootstrapTable = $.fn.bootstrapTable.Constructor\nconst _init = BootstrapTable.prototype.init\nconst _onSearch = BootstrapTable.prototype.onSearch\nconst _onSort = BootstrapTable.prototype.onSort\nconst _onPageListChange = BootstrapTable.prototype.onPageListChange\n\nBootstrapTable.prototype.init = function (...args) {\n  // needs to be called before initServer()\n  this.initPipeline()\n  _init.apply(this, Array.prototype.slice.apply(args))\n}\n\nBootstrapTable.prototype.initPipeline = function () {\n  this.cacheRequestJSON = {}\n  this.cacheWindows = []\n  this.currWindow = 0\n  this.resetCache = true\n}\n\nBootstrapTable.prototype.onSearch = function () {\n  /* force a cache reset on search */\n  if (this.options.usePipeline) {\n    this.resetCache = true\n  }\n  _onSearch.apply(this, Array.prototype.slice.apply(arguments))\n}\n\nBootstrapTable.prototype.onSort = function () {\n  /* force a cache reset on sort */\n  if (this.options.usePipeline) {\n    this.resetCache = true\n  }\n  _onSort.apply(this, Array.prototype.slice.apply(arguments))\n}\n\nBootstrapTable.prototype.onPageListChange = function (event) {\n  /* rebuild cache window on page size change */\n  const target = $(event.currentTarget)\n  const newPageSize = parseInt(target.text(), 10)\n\n  this.options.pipelineSize = this.calculatePipelineSize(this.options.pipelineSize, newPageSize)\n  this.resetCache = true\n  _onPageListChange.apply(this, Array.prototype.slice.apply(arguments))\n}\n\nBootstrapTable.prototype.calculatePipelineSize = (pipelineSize, pageSize) => {\n  /* calculate pipeline size by rounding up to the nearest value evenly divisible\n        * by the pageSize */\n  if (pageSize === 0) return 0\n  return Math.ceil(pipelineSize / pageSize) * pageSize\n}\n\nBootstrapTable.prototype.setCacheWindows = function () {\n  /* set cache windows based on the total number of rows returned by server side\n        * request and the pipelineSize */\n  this.cacheWindows = []\n  const numWindows = this.options.totalRows / this.options.pipelineSize\n\n  for (let i = 0; i <= numWindows; i++) {\n    const b = i * this.options.pipelineSize\n\n    this.cacheWindows[i] = { lower: b, upper: b + this.options.pipelineSize - 1 }\n  }\n}\n\nBootstrapTable.prototype.setCurrWindow = function (offset) {\n  /* set the current cache window index, based on where the current offset falls */\n  this.currWindow = 0\n  for (let i = 0; i < this.cacheWindows.length; i++) {\n    if (this.cacheWindows[i].lower <= offset && offset <= this.cacheWindows[i].upper) {\n      this.currWindow = i\n      break\n    }\n  }\n}\n\nBootstrapTable.prototype.drawFromCache = function (offset, limit) {\n  /* draw rows from the cache using offset and limit */\n  const res = Utils.extend(true, {}, this.cacheRequestJSON)\n  const drawStart = offset - this.cacheWindows[this.currWindow].lower\n  const drawEnd = drawStart + limit\n\n  res.rows = res.rows.slice(drawStart, drawEnd)\n  return res\n}\n\nBootstrapTable.prototype.initServer = function (silent, query, url) {\n  /* determine if requested data is in cache (on paging) or if\n        * a new ajax request needs to be issued (sorting, searching, paging\n        * moving outside of cached data, page size change)\n        * initial version of this extension will entirely override base initServer\n        **/\n\n  let data = {}\n  const index = this.header.fields.indexOf(this.options.sortName)\n\n  let params = {\n    searchText: this.searchText,\n    sortName: this.options.sortName,\n    sortOrder: this.options.sortOrder\n  }\n\n  let request = null\n\n  if (this.header.sortNames[index]) {\n    params.sortName = this.header.sortNames[index]\n  }\n\n  if (this.options.pagination && this.options.sidePagination === 'server') {\n    params.pageSize = this.options.pageSize === this.options.formatAllRows() ?\n      this.options.totalRows : this.options.pageSize\n    params.pageNumber = this.options.pageNumber\n  }\n\n  if (!(url || this.options.url) && !this.options.ajax) {\n    return\n  }\n\n  let useAjax = true\n\n  if (this.options.queryParamsType === 'limit') {\n    params = {\n      searchText: params.searchText,\n      sortName: params.sortName,\n      sortOrder: params.sortOrder\n    }\n    if (this.options.pagination && this.options.sidePagination === 'server') {\n      params.limit = this.options.pageSize === this.options.formatAllRows() ? this.options.totalRows : this.options.pageSize\n      params.offset = (this.options.pageSize === this.options.formatAllRows() ? this.options.totalRows : this.options.pageSize) * (this.options.pageNumber - 1)\n      if (this.options.usePipeline) {\n        // if cacheWindows is empty, this is the initial request\n        if (!this.cacheWindows.length) {\n          useAjax = true\n          params.drawOffset = params.offset\n          // cache exists: determine if the page request is entirely within the current cached window\n        } else {\n          const w = this.cacheWindows[this.currWindow]\n\n          // case 1: reset cache but stay within current window (e.g. column sort)\n          // case 2: move outside of the current window (e.g. search or paging)\n          //  since each cache window is aligned with the current page size\n          //  checking if params.offset is outside the current window is sufficient.\n          //  need to requery for preceding or succeeding cache window\n          //  also handle case\n          if (this.resetCache || (params.offset < w.lower || params.offset > w.upper)) {\n            useAjax = true\n            this.setCurrWindow(params.offset)\n            // store the relative offset for drawing the page data afterwards\n            params.drawOffset = params.offset\n            // now set params.offset to the lower bound of the new cache window\n            // the server will return that whole cache window\n            params.offset = this.cacheWindows[this.currWindow].lower\n            // within current cache window\n          } else {\n            useAjax = false\n          }\n        }\n      } else if (params.limit === 0) {\n        delete params.limit\n      }\n    }\n  }\n\n  // force an ajax call - this is on search, sort or page size change\n  if (this.resetCache) {\n    useAjax = true\n    this.resetCache = false\n  }\n\n  if (this.options.usePipeline && useAjax) {\n    /* in this scenario limit is used on the server to get the cache window\n            * and drawLimit is used to get the page data afterwards */\n    params.drawLimit = params.limit\n    params.limit = this.options.pipelineSize\n  }\n\n  // cached results can be used\n  if (!useAjax) {\n    const res = this.drawFromCache(params.offset, params.limit)\n\n    this.load(res)\n    this.trigger('load-success', res)\n    this.trigger('cached-data-hit', res)\n    return\n  }\n  // cached results can't be used\n  // continue base initServer code\n  if (!$.isEmptyObject(this.filterColumnsPartial)) {\n    params.filter = JSON.stringify(this.filterColumnsPartial, null)\n  }\n\n  data = Utils.calculateObjectValue(this.options, this.options.queryParams, [params], data)\n\n  Utils.extend(data, query || {})\n\n  // false to stop request\n  if (data === false) {\n    return\n  }\n\n  if (!silent) {\n    this.$tableLoading.show()\n  }\n  const self = this\n\n  request = Utils.extend({}, Utils.calculateObjectValue(null, this.options.ajaxOptions), {\n    type: this.options.method,\n    url: url || this.options.url,\n    data: this.options.contentType === 'application/json' && this.options.method === 'post' ?\n      JSON.stringify(data) : data,\n    cache: this.options.cache,\n    contentType: this.options.contentType,\n    dataType: this.options.dataType,\n    success (res) {\n      res = Utils.calculateObjectValue(self.options, self.options.responseHandler, [res], res)\n      // cache results if using pipelining\n      if (self.options.usePipeline) {\n        // store entire request in cache\n        self.cacheRequestJSON = Utils.extend(true, {}, res)\n        // this gets set in load() also but needs to be set before\n        // setting cacheWindows\n        self.options.totalRows = res[self.options.totalField]\n        // if this is a search, potentially less results will be returned\n        // so cache windows need to be rebuilt. Otherwise it\n        // will come out the same\n        self.setCacheWindows()\n        self.setCurrWindow(params.drawOffset)\n        // just load data for the page\n        res = self.drawFromCache(params.drawOffset, params.drawLimit)\n        self.trigger('cached-data-reset', res)\n      }\n      self.load(res)\n      self.trigger('load-success', res)\n      if (!silent) {\n        self.hideLoading()\n      }\n    },\n    error (res) {\n      let data = []\n\n      if (self.options.sidePagination === 'server') {\n        data = {}\n        data[self.options.totalField] = 0\n        data[self.options.dataField] = []\n      }\n      self.load(data)\n      self.trigger('load-error', res.status, res)\n      if (!silent) {\n        self.hideLoading()\n      }\n    }\n  })\n\n  if (this.options.ajax) {\n    Utils.calculateObjectValue(this, this.options.ajax, [request], null)\n  } else {\n    if (this._xhr && this._xhr.readyState !== 4) {\n      this._xhr.abort()\n    }\n    this._xhr = $.ajax(request)\n  }\n}\n", "/**\n * Traducci\u00F3n de librer\u00EDa Bootstrap Table a Espa\u00F1ol (Chile)\n * @author Brian \u00C1lvarez Az\u00F3car\n * email brianalvarezazocar@gmail.com\n */\n\n$.fn.bootstrapTable.locales['es-CL'] = {\n  formatCopyRows () {\n    return 'Copiar Filas'\n  },\n  formatPrint () {\n    return 'Imprimir'\n  },\n  formatLoadingMessage () {\n    return 'Cargando, espere por favor'\n  },\n  formatRecordsPerPage (pageNumber) {\n    return `${pageNumber} filas por p\u00E1gina`\n  },\n  formatShowingRows (pageFrom, pageTo, totalRows, totalNotFiltered) {\n    if (totalNotFiltered !== undefined && totalNotFiltered > 0 && totalNotFiltered > totalRows) {\n      return `Mostrando ${pageFrom} a ${pageTo} de ${totalRows} filas (filtrado de ${totalNotFiltered} filas totales)`\n    }\n\n    return `Mostrando ${pageFrom} a ${pageTo} de ${totalRows} filas`\n  },\n  formatSRPaginationPreText () {\n    return 'p\u00E1gina anterior'\n  },\n  formatSRPaginationPageText (page) {\n    return `a la p\u00E1gina ${page}`\n  },\n  formatSRPaginationNextText () {\n    return 'siguiente p\u00E1gina'\n  },\n  formatDetailPagination (totalRows) {\n    return `Mostrando ${totalRows} filas`\n  },\n  formatClearSearch () {\n    return 'Limpiar b\u00FAsqueda'\n  },\n  formatSearch () {\n    return 'Buscar'\n  },\n  formatNoMatches () {\n    return 'No se encontraron registros'\n  },\n  formatPaginationSwitch () {\n    return 'Ocultar/Mostrar paginaci\u00F3n'\n  },\n  formatPaginationSwitchDown () {\n    return 'Mostrar paginaci\u00F3n'\n  },\n  formatPaginationSwitchUp () {\n    return 'Ocultar paginaci\u00F3n'\n  },\n  formatRefresh () {\n    return 'Refrescar'\n  },\n  formatToggleOn () {\n    return 'Mostrar vista de carta'\n  },\n  formatToggleOff () {\n    return 'Ocultar vista de carta'\n  },\n  formatColumns () {\n    return 'Columnas'\n  },\n  formatColumnsToggleAll () {\n    return 'Cambiar todo'\n  },\n  formatFullscreen () {\n    return 'Pantalla completa'\n  },\n  formatAllRows () {\n    return 'Todo'\n  },\n  formatAutoRefresh () {\n    return 'Auto Recargar'\n  },\n  formatExport () {\n    return 'Exportar datos'\n  },\n  formatJumpTo () {\n    return 'IR'\n  },\n  formatAdvancedSearch () {\n    return 'B\u00FAsqueda avanzada'\n  },\n  formatAdvancedCloseButton () {\n    return 'Cerrar'\n  },\n  formatFilterControlSwitch () {\n    return 'Ocultar/Mostrar controles'\n  },\n  formatFilterControlSwitchHide () {\n    return 'Ocultar controles'\n  },\n  formatFilterControlSwitchShow () {\n    return 'Mostrar controles'\n  }\n}\n\nObject.assign($.fn.bootstrapTable.defaults, $.fn.bootstrapTable.locales['es-CL'])\n"],
  "mappings": "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",
  "names": ["bootstrap_table_default", "bootstrapVersion", "theme", "el", "$el", "i", "el", "columns", "index", "html", "buttonsHtml", "data_", "value", "data", "zoomWidth", "params", "field", "BootstrapTable", "i", "el", "columns", "index", "html", "buttonsHtml", "data_", "value", "data", "zoomWidth", "params", "field", "bootstrap_table_default", "idx", "Utils", "Utils", "Utils", "Utils", "Utils", "BootstrapTable", "data", "$", "jQuery", "bootstrap_table_default"]
}
